#include "KUKAAnalyticalSolutions.h"
#include <math.h> 
#include <cmath>


void KUKAAnalyticalSolutions::FK( double* FK, const double* q )
{
  FK[0] = ((((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*cos(q[5]) + ((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*sin(q[5]))*cos(q[6]) + (-((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*sin(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*cos(q[4]))*sin(q[6]);
  FK[1] = -((((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*cos(q[5]) + ((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*sin(q[5]))*sin(q[6]) + (-((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*sin(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*cos(q[4]))*cos(q[6]);
  FK[2] = -(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + ((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]);
  FK[3] = -0.25700000000000001*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - 0.40000000000000002*sin(q[1])*cos(q[0])*cos(q[3]) - 0.41999999999999998*sin(q[1])*cos(q[0]);
  FK[4] = ((((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*cos(q[5]) + ((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*sin(q[5]))*cos(q[6]) + (-((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*sin(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*cos(q[4]))*sin(q[6]);
  FK[5] = -((((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*cos(q[5]) + ((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*sin(q[5]))*sin(q[6]) + (-((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*sin(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*cos(q[4]))*cos(q[6]);
  FK[6] = -(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + ((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]);
  FK[7] = -0.25700000000000001*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - 0.40000000000000002*sin(q[0])*sin(q[1])*cos(q[3]) - 0.41999999999999998*sin(q[0])*sin(q[1]);
  FK[8] = (((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*cos(q[5]) + (sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*sin(q[5]))*cos(q[6]) + (-(sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*sin(q[4]) - sin(q[1])*sin(q[2])*cos(q[4]))*sin(q[6]);
  FK[9] = -(((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*cos(q[5]) + (sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*sin(q[5]))*sin(q[6]) + (-(sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*sin(q[4]) - sin(q[1])*sin(q[2])*cos(q[4]))*cos(q[6]);
  FK[10] = -((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + (sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]);
  FK[11] = -0.25700000000000001*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + 0.25700000000000001*(sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*sin(q[1])*sin(q[3])*cos(q[2]) + 0.40000000000000002*cos(q[1])*cos(q[3]) + 0.41999999999999998*cos(q[1]) + 0.35999999999999999;
  FK[12] = 0;
  FK[13] = 0;
  FK[14] = 0;
  FK[15] = 1;
//
}

void KUKAAnalyticalSolutions::Jacobian( double* jac, const double* q )
{
//
  jac[0] = 0.25700000000000001*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) - 0.25700000000000001*((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]) - 0.40000000000000002*(sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) + 0.40000000000000002*sin(q[0])*sin(q[1])*cos(q[3]) + 0.41999999999999998*sin(q[0])*sin(q[1]);
  jac[1] = -(-0.25700000000000001*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + 0.25700000000000001*(sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*sin(q[1])*sin(q[3])*cos(q[2]) + 0.40000000000000002*cos(q[1])*cos(q[3]) + 0.41999999999999998*cos(q[1]))*cos(q[0]);
  jac[2] = -(-0.25700000000000001*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - 0.40000000000000002*sin(q[0])*sin(q[1])*cos(q[3]) - 0.41999999999999998*sin(q[0])*sin(q[1]))*cos(q[1]) - (-0.25700000000000001*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + 0.25700000000000001*(sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*sin(q[1])*sin(q[3])*cos(q[2]) + 0.40000000000000002*cos(q[1])*cos(q[3]) + 0.41999999999999998*cos(q[1]))*sin(q[0])*sin(q[1]);
  jac[3] = (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*(-0.25700000000000001*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + 0.25700000000000001*(sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*sin(q[1])*sin(q[3])*cos(q[2]) + 0.40000000000000002*cos(q[1])*cos(q[3])) + (-0.25700000000000001*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - 0.40000000000000002*sin(q[0])*sin(q[1])*cos(q[3]))*sin(q[1])*sin(q[2]);
  jac[4] = ((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*(-0.25700000000000001*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + 0.25700000000000001*(sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*sin(q[1])*sin(q[3])*cos(q[2]) + 0.40000000000000002*cos(q[1])*cos(q[3])) - (sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*(-0.25700000000000001*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - 0.40000000000000002*sin(q[0])*sin(q[1])*cos(q[3]));
  jac[5] = -(-0.25700000000000001*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]))*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*sin(q[4]) + sin(q[1])*sin(q[2])*cos(q[4])) + (((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*sin(q[4]) - (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*cos(q[4]))*(-0.25700000000000001*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + 0.25700000000000001*(sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]));
  jac[6] = (-(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + ((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]))*(-0.25700000000000001*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + 0.25700000000000001*(sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5])) - (-0.25700000000000001*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]))*(-((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + (sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]));
  jac[7] = -0.25700000000000001*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - 0.40000000000000002*sin(q[1])*cos(q[0])*cos(q[3]) - 0.41999999999999998*sin(q[1])*cos(q[0]);
  jac[8] = -(-0.25700000000000001*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + 0.25700000000000001*(sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*sin(q[1])*sin(q[3])*cos(q[2]) + 0.40000000000000002*cos(q[1])*cos(q[3]) + 0.41999999999999998*cos(q[1]))*sin(q[0]);
  jac[9] = (-0.25700000000000001*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - 0.40000000000000002*sin(q[1])*cos(q[0])*cos(q[3]) - 0.41999999999999998*sin(q[1])*cos(q[0]))*cos(q[1]) + (-0.25700000000000001*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + 0.25700000000000001*(sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*sin(q[1])*sin(q[3])*cos(q[2]) + 0.40000000000000002*cos(q[1])*cos(q[3]) + 0.41999999999999998*cos(q[1]))*sin(q[1])*cos(q[0]);
  jac[10] = -(-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*(-0.25700000000000001*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + 0.25700000000000001*(sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*sin(q[1])*sin(q[3])*cos(q[2]) + 0.40000000000000002*cos(q[1])*cos(q[3])) - (-0.25700000000000001*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - 0.40000000000000002*sin(q[1])*cos(q[0])*cos(q[3]))*sin(q[1])*sin(q[2]);
  jac[11] = -((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*(-0.25700000000000001*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + 0.25700000000000001*(sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*sin(q[1])*sin(q[3])*cos(q[2]) + 0.40000000000000002*cos(q[1])*cos(q[3])) + (sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*(-0.25700000000000001*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - 0.40000000000000002*sin(q[1])*cos(q[0])*cos(q[3]));
  jac[12] = (-0.25700000000000001*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]))*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*sin(q[4]) + sin(q[1])*sin(q[2])*cos(q[4])) - (((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*sin(q[4]) - (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*cos(q[4]))*(-0.25700000000000001*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + 0.25700000000000001*(sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]));
  jac[13] = -(-(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + ((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]))*(-0.25700000000000001*((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + 0.25700000000000001*(sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5])) + (-0.25700000000000001*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]))*(-((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + (sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]));
  jac[14] = 0;
  jac[15] = (-0.25700000000000001*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - 0.40000000000000002*sin(q[1])*cos(q[0])*cos(q[3]) - 0.41999999999999998*sin(q[1])*cos(q[0]))*cos(q[0]) + (-0.25700000000000001*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - 0.40000000000000002*sin(q[0])*sin(q[1])*cos(q[3]) - 0.41999999999999998*sin(q[0])*sin(q[1]))*sin(q[0]);
  jac[16] = (-0.25700000000000001*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - 0.40000000000000002*sin(q[1])*cos(q[0])*cos(q[3]) - 0.41999999999999998*sin(q[1])*cos(q[0]))*sin(q[0])*sin(q[1]) - (-0.25700000000000001*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - 0.40000000000000002*sin(q[0])*sin(q[1])*cos(q[3]) - 0.41999999999999998*sin(q[0])*sin(q[1]))*sin(q[1])*cos(q[0]);
  jac[17] = (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*(-0.25700000000000001*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - 0.40000000000000002*sin(q[0])*sin(q[1])*cos(q[3])) - (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*(-0.25700000000000001*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - 0.40000000000000002*sin(q[1])*cos(q[0])*cos(q[3]));
  jac[18] = ((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*(-0.25700000000000001*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - 0.40000000000000002*sin(q[0])*sin(q[1])*cos(q[3])) - ((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*(-0.25700000000000001*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]) + 0.40000000000000002*(-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - 0.40000000000000002*sin(q[1])*cos(q[0])*cos(q[3]));
  jac[19] = -(-0.25700000000000001*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]))*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*sin(q[4]) - (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*cos(q[4])) + (-0.25700000000000001*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]))*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*sin(q[4]) - (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*cos(q[4]));
  jac[20] = (-(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + ((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]))*(-0.25700000000000001*(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5])) - (-0.25700000000000001*(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + 0.25700000000000001*((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]))*(-(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + ((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]));
  jac[21] = 0;
  jac[22] = sin(q[0]);
  jac[23] = -sin(q[1])*cos(q[0]);
  jac[24] = -sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]);
  jac[25] = (-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]);
  jac[26] = ((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*sin(q[4]) - (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*cos(q[4]);
  jac[27] = -(((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*cos(q[3]) + sin(q[1])*sin(q[3])*cos(q[0]))*cos(q[4]) + (-sin(q[0])*cos(q[2]) - sin(q[2])*cos(q[0])*cos(q[1]))*sin(q[4]))*sin(q[5]) + ((-sin(q[0])*sin(q[2]) + cos(q[0])*cos(q[1])*cos(q[2]))*sin(q[3]) - sin(q[1])*cos(q[0])*cos(q[3]))*cos(q[5]);
  jac[28] = 0;
  jac[29] = -cos(q[0]);
  jac[30] = -sin(q[0])*sin(q[1]);
  jac[31] = -sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]);
  jac[32] = (sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]);
  jac[33] = ((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*sin(q[4]) - (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*cos(q[4]);
  jac[34] = -(((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*cos(q[3]) + sin(q[0])*sin(q[1])*sin(q[3]))*cos(q[4]) + (-sin(q[0])*sin(q[2])*cos(q[1]) + cos(q[0])*cos(q[2]))*sin(q[4]))*sin(q[5]) + ((sin(q[0])*cos(q[1])*cos(q[2]) + sin(q[2])*cos(q[0]))*sin(q[3]) - sin(q[0])*sin(q[1])*cos(q[3]))*cos(q[5]);
  jac[35] = 1;
  jac[36] = 0;
  jac[37] = cos(q[1]);
  jac[38] = -sin(q[1])*sin(q[2]);
  jac[39] = sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]);
  jac[40] = (sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*sin(q[4]) + sin(q[1])*sin(q[2])*cos(q[4]);
  jac[41] = -((sin(q[1])*cos(q[2])*cos(q[3]) - sin(q[3])*cos(q[1]))*cos(q[4]) - sin(q[1])*sin(q[2])*sin(q[4]))*sin(q[5]) + (sin(q[1])*sin(q[3])*cos(q[2]) + cos(q[1])*cos(q[3]))*cos(q[5]);
//
  return;
}

void KUKAAnalyticalSolutions::MassMatrix( double* M, const double* parms, const double* q )
{
  double x0 = sin(q[1]);
  double x1 = cos(q[1]);
  double x2 = cos(q[2]);
  double x3 = x0*x2;
  double x4 = -x1;
  double x5 = sin(q[2]);
  double x6 = x0*x5;
  double x7 = -x6;
  double x8 = -0.41999999999999998*x3;
  double x9 = cos(q[3]);
  double x10 = sin(q[3]);
  double x11 = x10*x4 + x3*x9;
  double x12 = -x9;
  double x13 = x10*x3 + x12*x4;
  double x14 = -0.41999999999999998*x6;
  double x15 = x10*x14;
  double x16 = cos(q[4]);
  double x17 = x11*x16;
  double x18 = sin(q[4]);
  double x19 = x18*x7;
  double x20 = x17 + x19;
  double x21 = x11*x18;
  double x22 = x16*x7;
  double x23 = x21 - x22;
  double x24 = x14*x9;
  double x25 = -x8;
  double x26 = x16*x25 + 0.40000000000000002*x17 + x18*x24 + 0.40000000000000002*x19;
  double x27 = sin(q[5]);
  double x28 = cos(q[5]);
  double x29 = x13*x27 + x20*x28;
  double x30 = -x23;
  double x31 = -x27;
  double x32 = x13*x28 + x20*x31;
  double x33 = x16*x24 + x18*x8 - 0.40000000000000002*x21 + 0.40000000000000002*x22;
  double x34 = x15*x28 + x31*x33;
  double x35 = cos(q[6]);
  double x36 = x29*x35;
  double x37 = sin(q[6]);
  double x38 = x30*x37;
  double x39 = x36 + x38;
  double x40 = x30*x35;
  double x41 = x29*x37;
  double x42 = x40 - x41;
  double x43 = -parms[80];
  double x44 = -x26;
  double x45 = -x37;
  double x46 = x15*x27 + x28*x33;
  double x47 = x35*x44 - 0.25700000000000001*x36 - 0.25700000000000001*x38 + x45*x46;
  double x48 = parms[72]*x39 + parms[73]*x42 + parms[74]*x32 + parms[79]*x34 + x43*x47;
  double x49 = -parms[68];
  double x50 = x35*x46 + x37*x44 + 0.25700000000000001*x40 - 0.25700000000000001*x41;
  double x51 = -parms[78];
  double x52 = parms[73]*x39 + parms[75]*x42 + parms[76]*x32 + parms[80]*x50 + x34*x51;
  double x53 = parms[78]*x32 + parms[81]*x47 + x39*x43;
  double x54 = -0.25700000000000001*x53;
  double x55 = -parms[79];
  double x56 = parms[80]*x42 + parms[81]*x50 + x32*x55;
  double x57 = x37*x56;
  double x58 = parms[60]*x29 + parms[61]*x30 + parms[62]*x32 + parms[67]*x34 + x35*x48 + x35*x54 + x44*x49 + x45*x52 - 0.25700000000000001*x57;
  double x59 = -parms[56];
  double x60 = -parms[67];
  double x61 = parms[74]*x39 + parms[76]*x42 + parms[77]*x32 + parms[78]*x47 + x50*x55;
  double x62 = parms[62]*x29 + parms[64]*x30 + parms[65]*x32 + parms[66]*x44 + x46*x60 + x61;
  double x63 = parms[48]*x20 + parms[49]*x13 + parms[50]*x23 + parms[55]*x26 + x15*x59 + x28*x58 + x31*x62;
  double x64 = -parms[66];
  double x65 = x35*x56;
  double x66 = -parms[61]*x29 - parms[63]*x30 - parms[64]*x32 - parms[68]*x46 - x34*x64 - x35*x52 - x37*x48 - x37*x54 - 0.25700000000000001*x65;
  double x67 = -parms[55];
  double x68 = parms[50]*x20 + parms[52]*x13 + parms[53]*x23 + parms[54]*x15 + x33*x67 + x66;
  double x69 = -x13;
  double x70 = parms[54]*x69 + parms[55]*x20 + parms[57]*x26 - parms[66]*x32 - parms[69]*x44 - x29*x49 - x35*x53 - x57;
  double x71 = 0.40000000000000002*x16;
  double x72 = parms[68]*x30 + parms[69]*x46 + x32*x60 + x45*x53 + x65;
  double x73 = parms[67]*x29 + parms[69]*x34 + parms[79]*x39 + parms[81]*x34 + x30*x64 + x42*x51;
  double x74 = parms[55]*x30 + parms[56]*x13 + parms[57]*x33 + x28*x72 + x31*x73;
  double x75 = x18*x74;
  double x76 = parms[36]*x11 + parms[37]*x7 + parms[38]*x13 + parms[43]*x15 + parms[44]*x25 + x16*x63 + x18*x68 + x70*x71 - 0.40000000000000002*x75;
  double x77 = parms[49]*x20 + parms[51]*x13 + parms[52]*x23 + parms[54]*x44 + parms[56]*x33 + x27*x58 + x28*x62;
  double x78 = -parms[43];
  double x79 = parms[38]*x11 + parms[40]*x7 + parms[41]*x13 + parms[42]*x8 + x24*x78 + x77;
  double x80 = parms[24]*x3 + parms[25]*x4 + parms[26]*x7 + parms[31]*x8 + x10*x79 + x76*x9;
  double x81 = -parms[42];
  double x82 = -x16;
  double x83 = x18*x70;
  double x84 = parms[37]*x11 + parms[39]*x7 + parms[40]*x13 + parms[44]*x24 + x15*x81 + x18*x63 + x68*x82 + x71*x74 + 0.40000000000000002*x83;
  double x85 = -parms[31];
  double x86 = parms[26]*x3 + parms[28]*x4 + parms[29]*x7 + x14*x85 + x84;
  double x87 = -x5;
  double x88 = parms[32]*x4 + parms[33]*x14 + x10*(parms[43]*x11 + parms[45]*x15 + parms[54]*x23 + parms[57]*x15 + x20*x59 + x27*x72 + x28*x73 + x7*x81) + x7*x85 + x9*(parms[43]*x69 + parms[44]*x7 + parms[45]*x24 + x16*x74 + x83);
  double x89 = -0.41999999999999998*x5;
  double x90 = -parms[44];
  double x91 = -parms[30];
  double x92 = parms[31]*x3 + parms[33]*x8 + parms[42]*x13 + parms[45]*x8 + x11*x90 + x4*x91 + x70*x82 + x75;
  double x93 = -parms[25]*x3 - parms[27]*x4 - parms[28]*x7 - parms[30]*x25 - parms[32]*x14 - x10*x76 - x12*x79;
  double x94 = -parms[13]*x0 - parms[16]*x1 - x2*x86 - 0.41999999999999998*x2*x88 - x5*x80 - x89*x92;
  double x95 = -x2;
  double x96 = 0.41999999999999998*x5;
  double x97 = x87*x9;
  double x98 = x10*x87;
  double x99 = -0.41999999999999998*x2;
  double x100 = x10*x99;
  double x101 = x18*x95;
  double x102 = x101 + x16*x97;
  double x103 = x18*x97;
  double x104 = x103 + x82*x95;
  double x105 = x9*x99;
  double x106 = 0.40000000000000002*x101 + x105*x18 + x71*x97 + x82*x96;
  double x107 = x102*x28 + x27*x98;
  double x108 = -x104;
  double x109 = x102*x31 + x28*x98;
  double x110 = -0.40000000000000002*x103 + x105*x16 + x18*x96 + x71*x95;
  double x111 = x100*x28 + x110*x31;
  double x112 = x107*x35;
  double x113 = x108*x37;
  double x114 = x112 + x113;
  double x115 = x108*x35;
  double x116 = x107*x45 + x115;
  double x117 = -x106;
  double x118 = x100*x27 + x110*x28;
  double x119 = -0.25700000000000001*x112 - 0.25700000000000001*x113 + x117*x35 + x118*x45;
  double x120 = parms[72]*x114 + parms[73]*x116 + parms[74]*x109 + parms[79]*x111 + x119*x43;
  double x121 = -0.25700000000000001*x37;
  double x122 = x107*x121 + 0.25700000000000001*x115 + x117*x37 + x118*x35;
  double x123 = parms[73]*x114 + parms[75]*x116 + parms[76]*x109 + parms[80]*x122 + x111*x51;
  double x124 = parms[80]*x116 + parms[81]*x122 + x109*x55;
  double x125 = parms[78]*x109 + parms[81]*x119 + x114*x43;
  double x126 = x125*x35;
  double x127 = parms[60]*x107 + parms[61]*x108 + parms[62]*x109 + parms[67]*x111 + x117*x49 + x120*x35 + x121*x124 + x123*x45 - 0.25700000000000001*x126;
  double x128 = parms[74]*x114 + parms[76]*x116 + parms[77]*x109 + parms[78]*x119 + x122*x55;
  double x129 = parms[62]*x107 + parms[64]*x108 + parms[65]*x109 + parms[66]*x117 + x118*x60 + x128;
  double x130 = parms[48]*x102 + parms[49]*x98 + parms[50]*x104 + parms[55]*x106 + x100*x59 + x127*x28 + x129*x31;
  double x131 = x124*x35;
  double x132 = -parms[61]*x107 - parms[63]*x108 - parms[64]*x109 - parms[68]*x118 - x111*x64 - x120*x37 - x121*x125 - x123*x35 - 0.25700000000000001*x131;
  double x133 = parms[50]*x102 + parms[52]*x98 + parms[53]*x104 + parms[54]*x100 + x110*x67 + x132;
  double x134 = -parms[54]*x98 + parms[55]*x102 + parms[57]*x106 - parms[66]*x109 - parms[69]*x117 - x107*x49 - x124*x37 - x126;
  double x135 = parms[68]*x108 + parms[69]*x118 + x109*x60 + x125*x45 + x131;
  double x136 = parms[67]*x107 + parms[69]*x111 + parms[79]*x114 + parms[81]*x111 + x108*x64 + x116*x51;
  double x137 = parms[55]*x108 + parms[56]*x98 + parms[57]*x110 + x135*x28 + x136*x31;
  double x138 = x137*x18;
  double x139 = parms[36]*x97 + parms[37]*x95 + parms[38]*x98 + parms[43]*x100 + x130*x16 + x133*x18 + x134*x71 - 0.40000000000000002*x138 + x90*x96;
  double x140 = parms[49]*x102 + parms[51]*x98 + parms[52]*x104 + parms[54]*x117 + parms[56]*x110 + x127*x27 + x129*x28;
  double x141 = parms[38]*x97 + parms[40]*x95 + parms[41]*x98 + parms[42]*x96 + x105*x78 + x140;
  double x142 = x134*x18;
  double x143 = parms[37]*x97 + parms[39]*x95 + parms[40]*x98 + parms[44]*x105 + x100*x81 + x130*x18 + x133*x82 + x137*x71 + 0.40000000000000002*x142;
  double x144 = -parms[25]*x87 - parms[28]*x95 - parms[32]*x99 - x10*x139 - x12*x141 - x91*x96;
  double x145 = -x10;
  double x146 = x145*x16;
  double x147 = x145*x18;
  double x148 = x145*x71;
  double x149 = x146*x28 + x27*x9;
  double x150 = -x147;
  double x151 = x146*x31 + x28*x9;
  double x152 = -0.40000000000000002*x147;
  double x153 = x152*x31;
  double x154 = x149*x35;
  double x155 = x150*x37 + x154;
  double x156 = x150*x35;
  double x157 = x149*x45 + x156;
  double x158 = -x148;
  double x159 = x152*x28;
  double x160 = x121*x150 - 0.25700000000000001*x154 + x158*x35 + x159*x45;
  double x161 = parms[72]*x155 + parms[73]*x157 + parms[74]*x151 + parms[79]*x153 + x160*x43;
  double x162 = x121*x149 + 0.25700000000000001*x156 + x158*x37 + x159*x35;
  double x163 = parms[73]*x155 + parms[75]*x157 + parms[76]*x151 + parms[80]*x162 + x153*x51;
  double x164 = parms[80]*x157 + parms[81]*x162 + x151*x55;
  double x165 = parms[78]*x151 + parms[81]*x160 + x155*x43;
  double x166 = x165*x35;
  double x167 = parms[60]*x149 + parms[61]*x150 + parms[62]*x151 + parms[67]*x153 + x121*x164 + x158*x49 + x161*x35 + x163*x45 - 0.25700000000000001*x166;
  double x168 = parms[74]*x155 + parms[76]*x157 + parms[77]*x151 + parms[78]*x160 + x162*x55;
  double x169 = parms[62]*x149 + parms[64]*x150 + parms[65]*x151 + parms[66]*x158 + x159*x60 + x168;
  double x170 = parms[48]*x146 + parms[49]*x9 + parms[50]*x147 + parms[55]*x148 + x167*x28 + x169*x31;
  double x171 = x164*x35;
  double x172 = -parms[61]*x149 - parms[63]*x150 - parms[64]*x151 - parms[68]*x159 - x121*x165 - x153*x64 - x161*x37 - x163*x35 - 0.25700000000000001*x171;
  double x173 = parms[50]*x146 + parms[52]*x9 + parms[53]*x147 + x152*x67 + x172;
  double x174 = parms[54]*x12 + parms[55]*x146 + parms[57]*x148 - parms[66]*x151 - parms[69]*x158 - x149*x49 - x164*x37 - x166;
  double x175 = parms[56]*x9 + parms[57]*x152 + x147*x67 + x28*(parms[68]*x150 + parms[69]*x159 + x151*x60 + x165*x45 + x171) + x31*(parms[67]*x149 + parms[69]*x153 + parms[79]*x155 + parms[81]*x153 + x150*x64 + x157*x51);
  double x176 = parms[49]*x146 + parms[51]*x9 + parms[52]*x147 + parms[54]*x158 + parms[56]*x152 + x167*x27 + x169*x28;
  double x177 = parms[37]*x145 + parms[40]*x9 + x170*x18 + x173*x82 + 0.40000000000000002*x174*x18 + x175*x71;
  double x178 = 0.40000000000000002*x18;
  double x179 = x18*x28;
  double x180 = -x82;
  double x181 = x18*x31;
  double x182 = x31*x71;
  double x183 = x179*x35;
  double x184 = x180*x37 + x183;
  double x185 = x180*x35;
  double x186 = x179*x45 + x185;
  double x187 = -x178;
  double x188 = x28*x71;
  double x189 = x121*x180 - 0.25700000000000001*x183 + x187*x35 + x188*x45;
  double x190 = parms[72]*x184 + parms[73]*x186 + parms[74]*x181 + parms[79]*x182 + x189*x43;
  double x191 = x121*x179 + 0.25700000000000001*x185 + x187*x37 + x188*x35;
  double x192 = parms[73]*x184 + parms[75]*x186 + parms[76]*x181 + parms[80]*x191 + x182*x51;
  double x193 = parms[80]*x186 + parms[81]*x191 + x181*x55;
  double x194 = parms[78]*x181 + parms[81]*x189 + x184*x43;
  double x195 = x194*x35;
  double x196 = parms[60]*x179 + parms[61]*x180 + parms[62]*x181 + parms[67]*x182 + x121*x193 + x187*x49 + x190*x35 + x192*x45 - 0.25700000000000001*x195;
  double x197 = parms[74]*x184 + parms[76]*x186 + parms[77]*x181 + parms[78]*x189 + x191*x55;
  double x198 = parms[62]*x179 + parms[64]*x180 + parms[65]*x181 + parms[66]*x187 + x188*x60 + x197;
  double x199 = x193*x35;
  double x200 = -parms[61]*x179 - parms[63]*x180 - parms[64]*x181 - parms[68]*x188 - x121*x194 - x182*x64 - x190*x37 - x192*x35 - 0.25700000000000001*x199;
  double x201 = parms[49]*x18 + parms[52]*x82 + parms[54]*x187 + parms[56]*x71 + x196*x27 + x198*x28;
  double x202 = x27*x35;
  double x203 = x31*x37;
  double x204 = -0.25700000000000001*x202;
  double x205 = parms[72]*x202 + parms[73]*x203 + parms[74]*x28 + x204*x43;
  double x206 = x121*x27;
  double x207 = parms[73]*x202 + parms[75]*x203 + parms[76]*x28 + parms[80]*x206;
  double x208 = parms[80]*x203 + parms[81]*x206 + x28*x55;
  double x209 = parms[78]*x28 + parms[81]*x204 + x202*x43;
  double x210 = parms[74]*x202 + parms[76]*x203 + parms[77]*x28 + parms[78]*x204 + x206*x55;
  double x211 = -parms[61]*x27 - parms[64]*x28 - x121*x209 - x205*x37 - x207*x35 - 0.25700000000000001*x208*x35;
  double x212 = -x35;
  double x213 = 0.25700000000000001*x37;
  double x214 = -0.25700000000000001*x35;
  double x215 = parms[74]*x45 + parms[76]*x212 + parms[78]*x213 + x214*x55;
//
  M[0] = parms[3] + x0*(parms[12]*x0 + parms[14]*x1 + x2*x80 - 0.41999999999999998*x2*x92 + x86*x87 + x88*x89) + x1*(parms[14]*x0 + parms[17]*x1 + x93);
  M[1] = x94;
  M[2] = x93;
  M[3] = x84;
  M[4] = x77;
  M[5] = x66;
  M[6] = x61;
  M[7] = x94;
  M[8] = parms[15] - x2*(parms[26]*x87 + parms[29]*x95 + x143 + x85*x99) - 0.41999999999999998*x2*(parms[33]*x99 + x10*(parms[43]*x97 + parms[45]*x100 + parms[54]*x104 + parms[57]*x100 + x102*x59 + x135*x27 + x136*x28 + x81*x95) + x85*x95 + x9*(parms[44]*x95 + parms[45]*x105 + x137*x16 + x142 + x78*x98)) - x5*(parms[24]*x87 + parms[26]*x95 + parms[31]*x96 + x10*x141 + x139*x9) - x89*(parms[31]*x87 + parms[33]*x96 + parms[42]*x98 + parms[45]*x96 + x134*x82 + x138 + x90*x97);
  M[9] = x144;
  M[10] = x143;
  M[11] = x140;
  M[12] = x132;
  M[13] = x128;
  M[14] = x93;
  M[15] = x144;
  M[16] = parms[27] - x10*(parms[36]*x145 + parms[38]*x9 + x16*x170 + x173*x18 + x174*x71 - 0.40000000000000002*x175*x18) - x12*(parms[38]*x145 + parms[41]*x9 + x176);
  M[17] = x177;
  M[18] = x176;
  M[19] = x172;
  M[20] = x168;
  M[21] = x84;
  M[22] = x143;
  M[23] = x177;
  M[24] = parms[39] + x178*(parms[55]*x18 + parms[57]*x178 - parms[66]*x181 - parms[69]*x187 - x179*x49 - x193*x37 - x195) + x18*(parms[48]*x18 + parms[50]*x82 + parms[55]*x178 + x196*x28 + x198*x31) + x71*(parms[57]*x71 + x28*(parms[68]*x180 + parms[69]*x188 + x181*x60 + x194*x45 + x199) + x31*(parms[67]*x179 + parms[69]*x182 + parms[79]*x184 + parms[81]*x182 + x180*x64 + x186*x51) + x67*x82) + x82*(parms[50]*x18 + parms[53]*x82 + x200 + x67*x71);
  M[25] = x201;
  M[26] = x200;
  M[27] = x197;
  M[28] = x77;
  M[29] = x140;
  M[30] = x176;
  M[31] = x201;
  M[32] = parms[51] + x27*(parms[60]*x27 + parms[62]*x28 + x121*x208 + x205*x35 + x207*x45 - 0.25700000000000001*x209*x35) + x28*(parms[62]*x27 + parms[65]*x28 + x210);
  M[33] = x211;
  M[34] = x210;
  M[35] = x66;
  M[36] = x132;
  M[37] = x172;
  M[38] = x200;
  M[39] = x211;
  M[40] = parms[63] - x121*(parms[81]*x213 + x43*x45) - 0.25700000000000001*x35*(parms[80]*x212 + parms[81]*x214) - x35*(parms[73]*x45 + parms[75]*x212 + parms[80]*x214) - x37*(parms[72]*x45 + parms[73]*x212 + x213*x43);
  M[41] = x215;
  M[42] = x61;
  M[43] = x128;
  M[44] = x168;
  M[45] = x197;
  M[46] = x210;
  M[47] = x215;
  M[48] = parms[77];
//
  return;
}

void KUKAAnalyticalSolutions::Coriolis( double* C, const double* parms, const double* q, const double* dq )
{
  double x0 = sin(q[1]);
  double x1 = cos(q[2]);
  double x2 = x0*x1;
  double x3 = sin(q[2]);
  double x4 = x0*x3;
  double x5 = -x4;
  double x6 = -0.41999999999999998*x4;
  double x7 = -x6;
  double x8 = parms[31]*x7;
  double x9 = parms[26]*x2 + parms[29]*x5 + x8;
  double x10 = cos(q[1]);
  double x11 = -x10;
  double x12 = parms[28]*x11;
  double x13 = x12 + x9;
  double x14 = -x5;
  double x15 = -0.41999999999999998*x2;
  double x16 = -x15;
  double x17 = parms[25]*x2 + parms[28]*x5 + parms[30]*x16 + parms[32]*x6;
  double x18 = parms[27]*x11;
  double x19 = x17 + x18;
  double x20 = -x2;
  double x21 = parms[30]*x5 + parms[32]*x20;
  double x22 = x16*x21;
  double x23 = x11*x13 + x14*x19 + x22;
  double x24 = cos(q[3]);
  double x25 = cos(q[4]);
  double x26 = x2*x24;
  double x27 = sin(q[3]);
  double x28 = x11*x27;
  double x29 = x26 + x28;
  double x30 = sin(q[4]);
  double x31 = x29*x30;
  double x32 = x25*x5;
  double x33 = -x32;
  double x34 = x31 + x33;
  double x35 = -x34;
  double x36 = cos(q[6]);
  double x37 = x35*x36;
  double x38 = x2*x27;
  double x39 = -x24;
  double x40 = x11*x39;
  double x41 = x38 + x40;
  double x42 = sin(q[5]);
  double x43 = x41*x42;
  double x44 = x25*x29;
  double x45 = x30*x5;
  double x46 = x44 + x45;
  double x47 = cos(q[5]);
  double x48 = x46*x47;
  double x49 = x43 + x48;
  double x50 = sin(q[6]);
  double x51 = x49*x50;
  double x52 = -x51;
  double x53 = x37 + x52;
  double x54 = x36*x49;
  double x55 = x35*x50;
  double x56 = x54 + x55;
  double x57 = x24*x6;
  double x58 = x16*x25 + x30*x57;
  double x59 = 0.40000000000000002*x45 + x58;
  double x60 = 0.40000000000000002*x44;
  double x61 = x59 + x60;
  double x62 = -x61;
  double x63 = x27*x6;
  double x64 = x42*x63;
  double x65 = x15*x30 + x25*x57;
  double x66 = 0.40000000000000002*x32 + x65;
  double x67 = -0.40000000000000002*x31;
  double x68 = x66 + x67;
  double x69 = x47*x68 + x64;
  double x70 = -x69;
  double x71 = x36*x62 + x50*x70;
  double x72 = -0.25700000000000001*x55 + x71;
  double x73 = -0.25700000000000001*x54;
  double x74 = x72 + x73;
  double x75 = -parms[79];
  double x76 = x36*x69 + x50*x62;
  double x77 = 0.25700000000000001*x37 + x76;
  double x78 = -0.25700000000000001*x51;
  double x79 = x77 + x78;
  double x80 = parms[74]*x56 + parms[76]*x53 + parms[78]*x74 + x75*x79;
  double x81 = x41*x47;
  double x82 = -x42;
  double x83 = x46*x82;
  double x84 = x81 + x83;
  double x85 = parms[77]*x84;
  double x86 = x80 + x85;
  double x87 = x47*x63;
  double x88 = x68*x82 + x87;
  double x89 = parms[81]*x88;
  double x90 = -parms[78];
  double x91 = parms[79]*x56 + x53*x90 + x89;
  double x92 = x74*x91;
  double x93 = -x84;
  double x94 = x88*x90;
  double x95 = parms[76]*x84 + x94;
  double x96 = parms[73]*x56 + parms[75]*x53 + parms[80]*x79;
  double x97 = x95 + x96;
  double x98 = -x88;
  double x99 = parms[81]*x74;
  double x100 = -parms[80];
  double x101 = x100*x56 + x99;
  double x102 = parms[78]*x84;
  double x103 = x101 + x102;
  double x104 = x103*x98 + x53*x86 + x92 + x93*x97;
  double x105 = parms[79]*x88;
  double x106 = parms[74]*x84 + x105;
  double x107 = parms[73]*x53;
  double x108 = parms[72]*x56 + x100*x74 + x107;
  double x109 = x106 + x108;
  double x110 = x75*x84;
  double x111 = parms[80]*x53 + parms[81]*x79;
  double x112 = x110 + x111;
  double x113 = -x56;
  double x114 = -x79;
  double x115 = x114*x91;
  double x116 = x109*x84 + x112*x88 + x113*x86 + x115;
  double x117 = -x50;
  double x118 = x53*x91;
  double x119 = x103*x93 + x118;
  double x120 = -0.25700000000000001*x50;
  double x121 = x113*x91;
  double x122 = x112*x84 + x121;
  double x123 = x122*x36;
  double x124 = parms[67]*x70;
  double x125 = parms[66]*x62 + x124;
  double x126 = parms[64]*x35 + x125;
  double x127 = parms[62]*x49 + parms[65]*x84;
  double x128 = x126 + x127;
  double x129 = parms[67]*x49;
  double x130 = parms[69]*x88;
  double x131 = -x35;
  double x132 = parms[66]*x131 + x130;
  double x133 = x129 + x132;
  double x134 = parms[66]*x98 + parms[68]*x69;
  double x135 = parms[63]*x35 + x134;
  double x136 = parms[61]*x49 + parms[64]*x84;
  double x137 = x135 + x136;
  double x138 = parms[69]*x62;
  double x139 = -parms[68];
  double x140 = parms[66]*x84 + x138 + x139*x49;
  double x141 = x140*x98;
  double x142 = x128*x35 + x133*x62 + x137*x93 + x141;
  double x143 = x104*x36 + x116*x117 + x119*x120 - 0.25700000000000001*x123 + x142;
  double x144 = -x53;
  double x145 = -x74;
  double x146 = x103*x79 + x109*x144 + x112*x145 + x56*x97;
  double x147 = x140*x69;
  double x148 = parms[67]*x88 + x139*x62;
  double x149 = parms[61]*x35 + x148;
  double x150 = parms[62]*x84;
  double x151 = parms[60]*x49 + x150;
  double x152 = x149 + x151;
  double x153 = parms[67]*x93;
  double x154 = parms[69]*x69;
  double x155 = parms[68]*x35 + x154;
  double x156 = x153 + x155;
  double x157 = -x62;
  double x158 = x131*x152 + x137*x49 + x147 + x156*x157;
  double x159 = x146 + x158;
  double x160 = parms[54]*x63;
  double x161 = parms[52]*x41 + x160;
  double x162 = parms[50]*x46;
  double x163 = -x68;
  double x164 = parms[53]*x34 + parms[55]*x163 + x162;
  double x165 = x161 + x164;
  double x166 = -x41;
  double x167 = parms[54]*x166;
  double x168 = parms[55]*x46;
  double x169 = parms[57]*x61 + x168;
  double x170 = x167 + x169;
  double x171 = parms[51]*x41;
  double x172 = parms[49]*x46 + parms[52]*x34 + parms[54]*x62 + parms[56]*x68;
  double x173 = x171 + x172;
  double x174 = parms[57]*x63;
  double x175 = -parms[56];
  double x176 = parms[54]*x34 + x174 + x175*x46;
  double x177 = x176*x62;
  double x178 = x165*x41 + x170*x63 + x173*x35 + x177;
  double x179 = x143*x47 + x159*x82 + x178;
  double x180 = x119*x36;
  double x181 = -x49;
  double x182 = x128*x181 + x133*x70 + x152*x84 + x156*x88;
  double x183 = -x104*x50 - x116*x36 - x120*x122 - 0.25700000000000001*x180 - x182;
  double x184 = x176*x68;
  double x185 = x175*x63;
  double x186 = parms[49]*x41 + x185;
  double x187 = parms[48]*x46 + parms[50]*x34 + parms[55]*x61;
  double x188 = x186 + x187;
  double x189 = parms[56]*x41;
  double x190 = parms[55]*x35 + parms[57]*x68;
  double x191 = x189 + x190;
  double x192 = -x63;
  double x193 = x166*x188 + x173*x46 + x184 + x191*x192;
  double x194 = x183 + x193;
  double x195 = x133*x181 + x156*x84;
  double x196 = x176*x46;
  double x197 = x166*x191 + x196;
  double x198 = -x119*x50 - x123 - x195 + x197;
  double x199 = 0.40000000000000002*x25;
  double x200 = x140*x93;
  double x201 = x133*x35 + x200;
  double x202 = x117*x122 + x180 + x201;
  double x203 = x140*x49;
  double x204 = x131*x156 + x203;
  double x205 = x103*x56 + x112*x144 + x204;
  double x206 = x176*x35;
  double x207 = x170*x41 + x206;
  double x208 = x202*x47 + x205*x82 + x207;
  double x209 = x208*x30;
  double x210 = -x57;
  double x211 = parms[42]*x15 + parms[43]*x210;
  double x212 = parms[40]*x5 + x211;
  double x213 = parms[38]*x29;
  double x214 = parms[41]*x41 + x213;
  double x215 = x212 + x214;
  double x216 = parms[43]*x29;
  double x217 = parms[45]*x63;
  double x218 = parms[42]*x14 + x217;
  double x219 = x216 + x218;
  double x220 = parms[42]*x192 + parms[44]*x57;
  double x221 = parms[39]*x5 + x220;
  double x222 = parms[37]*x29 + parms[40]*x41;
  double x223 = x221 + x222;
  double x224 = parms[45]*x15;
  double x225 = -x29;
  double x226 = parms[42]*x41 + parms[44]*x225 + x224;
  double x227 = x192*x226;
  double x228 = x15*x219 + x166*x223 + x215*x5 + x227;
  double x229 = x179*x25 + x194*x30 + x198*x199 - 0.40000000000000002*x209 + x228;
  double x230 = -x46;
  double x231 = x163*x170 + x165*x230 + x188*x34 + x191*x61;
  double x232 = x143*x42 + x159*x47 + x231;
  double x233 = x226*x57;
  double x234 = parms[43]*x63 + parms[44]*x16;
  double x235 = parms[37]*x5 + x234;
  double x236 = parms[36]*x29 + parms[38]*x41;
  double x237 = x235 + x236;
  double x238 = parms[45]*x57;
  double x239 = parms[44]*x5 + x238;
  double x240 = parms[43]*x166;
  double x241 = x239 + x240;
  double x242 = x14*x237 + x16*x241 + x223*x29 + x233;
  double x243 = x232 + x242;
  double x244 = x229*x24 + x23 + x243*x27;
  double x245 = parms[13]*x0 + parms[16]*x10;
  double x246 = x11*x245;
  double x247 = -x25;
  double x248 = x198*x30;
  double x249 = x210*x219 + x215*x225 + x237*x41 + x241*x63;
  double x250 = x179*x30 + x194*x247 + x199*x208 + 0.40000000000000002*x248 + x249;
  double x251 = x21*x6;
  double x252 = parms[26]*x5;
  double x253 = parms[24]*x2 + parms[31]*x15 + x252;
  double x254 = parms[25]*x11;
  double x255 = x253 + x254;
  double x256 = -x11;
  double x257 = x19*x2 + x251 + x255*x256;
  double x258 = x250 + x257;
  double x259 = -x3;
  double x260 = parms[33]*x15;
  double x261 = parms[31]*x2 + x260;
  double x262 = parms[30]*x256;
  double x263 = x261 + x262;
  double x264 = x14*x21;
  double x265 = x11*x263 + x264;
  double x266 = x166*x226;
  double x267 = x219*x5 + x266;
  double x268 = x170*x230 + x191*x34;
  double x269 = x226*x29;
  double x270 = x14*x241 + x269;
  double x271 = x24*(x208*x25 + x248 + x267) + x265 + x27*(x202*x42 + x205*x47 + x268 + x270);
  double x272 = -0.41999999999999998*x3;
  double x273 = x2*x21;
  double x274 = parms[31]*x14 + parms[33]*x6;
  double x275 = parms[32]*x11;
  double x276 = x274 + x275;
  double x277 = x256*x276 + x273;
  double x278 = x219*x225 + x241*x41;
  double x279 = x198*x247 + x209 + x277 + x278;
  double x280 = x13*x20 + x15*x276 + x255*x5 + x263*x7;
  double x281 = -x229*x27 - x243*x39 - x280;
  double x282 = x0*x245;
  double x283 = x0*(x1*x244 - 0.41999999999999998*x1*x279 + x246 + x258*x259 + x271*x272) + x10*(x281 + x282);
  double x284 = -x0;
  double x285 = x1*x10;
  double x286 = -x284;
  double x287 = x11*x3;
  double x288 = -0.41999999999999998*x1;
  double x289 = x10*x288;
  double x290 = x24*x285 + x27*x286;
  double x291 = x27*x285 + x286*x39;
  double x292 = x10*x272;
  double x293 = x27*x292;
  double x294 = -x1;
  double x295 = x294 + x5;
  double x296 = x2 + x259;
  double x297 = x24*x296 + x28;
  double x298 = x27*x296 + x40;
  double x299 = 0.41999999999999998*x3;
  double x300 = x15 + x299;
  double x301 = -parms[43];
  double x302 = x288 + x6;
  double x303 = x24*x302;
  double x304 = parms[38]*x297 + parms[40]*x295 + parms[41]*x298 + parms[42]*x300 + x301*x303;
  double x305 = x27*x302;
  double x306 = -parms[42];
  double x307 = parms[43]*x297 + parms[45]*x305 + x295*x306;
  double x308 = x25*x290 + x287*x30;
  double x309 = x290*x30;
  double x310 = x247*x287 + x309;
  double x311 = x24*x292;
  double x312 = 0.40000000000000002*x30;
  double x313 = x199*x290 + x247*x289 + x287*x312 + x30*x311;
  double x314 = x25*x297 + x295*x30;
  double x315 = x297*x30;
  double x316 = x247*x295 + x315;
  double x317 = x199*x295 + x25*x303 + x30*x300 - 0.40000000000000002*x315;
  double x318 = -x317;
  double x319 = parms[50]*x314 + parms[52]*x298 + parms[53]*x316 + parms[54]*x305 + parms[55]*x318;
  double x320 = x199*x297 + x247*x300 + x295*x312 + x30*x303;
  double x321 = -parms[54];
  double x322 = parms[55]*x314 + parms[57]*x320 + x298*x321;
  double x323 = x291*x42 + x308*x47;
  double x324 = -x310;
  double x325 = x291*x47 + x308*x82;
  double x326 = x199*x287 + x25*x311 + x289*x30 - 0.40000000000000002*x309;
  double x327 = x293*x47 + x326*x82;
  double x328 = -x316;
  double x329 = x298*x42 + x314*x47;
  double x330 = x298*x47 + x314*x82;
  double x331 = -x320;
  double x332 = -parms[67];
  double x333 = x305*x42 + x317*x47;
  double x334 = parms[62]*x329 + parms[64]*x328 + parms[65]*x330 + parms[66]*x331 + x332*x333;
  double x335 = x305*x47 + x317*x82;
  double x336 = -parms[66];
  double x337 = parms[67]*x329 + parms[69]*x335 + x328*x336;
  double x338 = x323*x36 + x324*x50;
  double x339 = x324*x36;
  double x340 = x117*x323 + x339;
  double x341 = x328*x36;
  double x342 = x117*x329 + x341;
  double x343 = x328*x50 + x329*x36;
  double x344 = -0.25700000000000001*x36;
  double x345 = x117*x333 + x120*x328 + x329*x344 + x331*x36;
  double x346 = x120*x329 + x331*x50 + x333*x36 + 0.25700000000000001*x341;
  double x347 = parms[74]*x343 + parms[76]*x342 + parms[77]*x330 + parms[78]*x345 + x346*x75;
  double x348 = parms[79]*x343 + parms[81]*x335 + x342*x90;
  double x349 = -x313;
  double x350 = x293*x42 + x326*x47;
  double x351 = x117*x350 + x120*x324 + x323*x344 + x349*x36;
  double x352 = parms[73]*x343 + parms[75]*x342 + parms[76]*x330 + parms[80]*x346 + x335*x90;
  double x353 = -x330;
  double x354 = parms[78]*x330 + parms[81]*x345 + x100*x343;
  double x355 = -x335;
  double x356 = parms[72]*x338 + parms[73]*x340 + parms[74]*x325 + parms[79]*x327 + x100*x351 + x342*x347 + x345*x348 + x352*x353 + x354*x355;
  double x357 = parms[61]*x329 + parms[63]*x328 + parms[64]*x330 + parms[68]*x333 + x335*x336;
  double x358 = parms[66]*x330 + parms[69]*x331 + x139*x329;
  double x359 = x120*x323 + 0.25700000000000001*x339 + x349*x50 + x350*x36;
  double x360 = parms[72]*x343 + parms[73]*x342 + parms[74]*x330 + parms[79]*x335 + x100*x345;
  double x361 = parms[80]*x342 + parms[81]*x346 + x330*x75;
  double x362 = -x343;
  double x363 = parms[73]*x338 + parms[75]*x340 + parms[76]*x325 + parms[80]*x359 + x327*x90 + x330*x360 + x335*x361 - x346*x348 + x347*x362;
  double x364 = parms[80]*x340 + parms[81]*x359 + x325*x75 + x342*x348 + x353*x354;
  double x365 = parms[78]*x325 + parms[81]*x351 + x100*x338 + x330*x361 + x348*x362;
  double x366 = parms[60]*x323 + parms[61]*x324 + parms[62]*x325 + parms[67]*x327 + x117*x363 + x120*x364 + x139*x349 + x328*x334 + x331*x337 + x344*x365 + x353*x357 + x355*x358 + x356*x36;
  double x367 = parms[49]*x314 + parms[51]*x298 + parms[52]*x316 + parms[56]*x317 + x320*x321;
  double x368 = parms[54]*x316 + parms[57]*x305 + x175*x314;
  double x369 = -x342;
  double x370 = parms[74]*x338 + parms[76]*x340 + parms[77]*x325 + parms[78]*x351 + x343*x352 - x345*x361 + x346*x354 + x359*x75 + x360*x369;
  double x371 = parms[60]*x329 + parms[61]*x328 + parms[62]*x330 + parms[67]*x335 + x139*x331;
  double x372 = -x328;
  double x373 = parms[68]*x328 + parms[69]*x333 + x330*x332;
  double x374 = parms[62]*x323 + parms[64]*x324 + parms[65]*x325 + parms[66]*x349 + x329*x357 - x331*x373 + x332*x350 + x333*x358 + x370 + x371*x372;
  double x375 = parms[48]*x308 + parms[49]*x291 + parms[50]*x310 + parms[55]*x313 + x175*x293 + x298*x319 + x305*x322 + x328*x367 + x331*x368 + x366*x47 + x374*x82;
  double x376 = -x329;
  double x377 = x36*x364;
  double x378 = -parms[61]*x323 - parms[63]*x324 - parms[64]*x325 - parms[68]*x350 - x120*x365 - x327*x336 - x330*x371 + x333*x337 - x334*x376 - x335*x373 - x356*x50 - x36*x363 - 0.25700000000000001*x377;
  double x379 = -parms[55];
  double x380 = parms[48]*x314 + parms[49]*x298 + parms[50]*x316 + parms[55]*x320 + x175*x305;
  double x381 = -x298;
  double x382 = parms[55]*x328 + parms[56]*x298 + parms[57]*x317;
  double x383 = -x305;
  double x384 = parms[50]*x308 + parms[52]*x291 + parms[53]*x310 + parms[54]*x293 + x314*x367 + x317*x368 + x326*x379 + x378 + x380*x381 + x382*x383;
  double x385 = -parms[44];
  double x386 = parms[37]*x297 + parms[39]*x295 + parms[40]*x298 + parms[44]*x303 + x305*x306;
  double x387 = parms[42]*x298 + parms[45]*x300 + x297*x385;
  double x388 = parms[55]*x308 + parms[57]*x313 - parms[66]*x325 - parms[69]*x349 - x139*x323 + x291*x321 + x314*x368 - x330*x373 - x337*x376 - x36*x365 - x364*x50 + x381*x382;
  double x389 = parms[68]*x324 + parms[69]*x350 + x117*x365 + x325*x332 + x328*x337 + x353*x358 + x377;
  double x390 = parms[67]*x323 + parms[69]*x327 + parms[79]*x338 + parms[81]*x327 + x324*x336 + x329*x358 + x340*x90 + x343*x354 + x361*x369 + x372*x373;
  double x391 = parms[55]*x324 + parms[56]*x291 + parms[57]*x326 + x298*x322 + x328*x368 + x389*x47 + x390*x82;
  double x392 = x30*x391;
  double x393 = parms[36]*x290 + parms[37]*x287 + parms[38]*x291 + parms[43]*x293 + x199*x388 + x25*x375 + x289*x385 + x295*x304 + x30*x384 + x300*x307 + x381*x386 + x383*x387 - 0.40000000000000002*x392;
  double x394 = -x314;
  double x395 = parms[49]*x308 + parms[51]*x291 + parms[52]*x310 + parms[56]*x326 + x313*x321 + x316*x380 + x318*x322 + x319*x394 + x320*x382 + x366*x42 + x374*x47;
  double x396 = parms[36]*x297 + parms[37]*x295 + parms[38]*x298 + parms[43]*x305 + x300*x385;
  double x397 = -x295;
  double x398 = parms[44]*x295 + parms[45]*x303 + x298*x301;
  double x399 = -x300;
  double x400 = parms[38]*x290 + parms[40]*x287 + parms[41]*x291 + parms[42]*x289 + x297*x386 + x301*x311 + x303*x387 + x395 + x396*x397 + x398*x399;
  double x401 = -x302;
  double x402 = parms[26]*x296 + parms[29]*x295 + parms[31]*x401 + x12;
  double x403 = -parms[30];
  double x404 = parms[25]*x296 + parms[28]*x295 + parms[32]*x302 + x18 + x300*x403;
  double x405 = -parms[32];
  double x406 = parms[30]*x295 + x296*x405;
  double x407 = parms[24]*x285 + parms[25]*x286 + parms[26]*x287 + parms[31]*x289 + x11*x402 + x24*x393 + x27*x400 + x397*x404 + x399*x406;
  double x408 = parms[14]*x0;
  double x409 = -parms[15] + x245;
  double x410 = -x297;
  double x411 = parms[37]*x290 + parms[39]*x287 + parms[40]*x291 + parms[44]*x311 + x199*x391 + x247*x384 + x293*x306 + x298*x396 + x30*x375 - x303*x307 + x304*x410 + x305*x398 + x312*x388;
  double x412 = -parms[31];
  double x413 = parms[24]*x296 + parms[26]*x295 + parms[31]*x300 + x254;
  double x414 = parms[26]*x285 + parms[28]*x286 + parms[29]*x287 + x256*x413 + x292*x412 + x296*x404 + x302*x406 + x411;
  double x415 = parms[31]*x296 + parms[33]*x300 + x262;
  double x416 = parms[32]*x286 + parms[33]*x292 + x11*x415 + x24*(parms[44]*x287 + parms[45]*x311 + x25*x391 + x291*x301 + x295*x307 + x30*x388 + x381*x387) + x27*(parms[43]*x290 + parms[45]*x293 + parms[54]*x310 + parms[57]*x293 + x175*x308 + x287*x306 + x297*x387 + x316*x382 + x322*x394 + x389*x42 + x390*x47 + x397*x398) + x287*x412 + x397*x406;
  double x417 = parms[31]*x397 + parms[33]*x302 + x275;
  double x418 = parms[31]*x285 + parms[33]*x289 + parms[42]*x291 + parms[45]*x289 + x247*x388 + x256*x417 + x286*x403 + x290*x385 + x296*x406 + x298*x398 + x307*x410 + x392;
  double x419 = -parms[25]*x285 - parms[27]*x286 - parms[28]*x287 - parms[32]*x292 - x27*x393 - x289*x403 - x295*x413 + x296*x402 - x300*x417 - x39*x400 - x401*x415;
  double x420 = parms[14]*x10;
  double x421 = parms[12]*x0;
  double x422 = -parms[13];
  double x423 = -x283;
  double x424 = -x294;
  double x425 = -x299;
  double x426 = parms[25]*x259 + parms[28]*x294 + parms[30]*x425 + parms[32]*x288;
  double x427 = -x259;
  double x428 = parms[30]*x294 + parms[32]*x427;
  double x429 = x425*x428;
  double x430 = x424*x426 + x429;
  double x431 = x24*x288;
  double x432 = -x431;
  double x433 = parms[42]*x299 + parms[43]*x432;
  double x434 = parms[40]*x294 + x433;
  double x435 = x24*x259;
  double x436 = parms[38]*x435;
  double x437 = x259*x27;
  double x438 = parms[41]*x437 + x436;
  double x439 = x434 + x438;
  double x440 = x27*x288;
  double x441 = parms[45]*x440;
  double x442 = parms[42]*x424 + x441;
  double x443 = parms[43]*x435;
  double x444 = x442 + x443;
  double x445 = -x437;
  double x446 = -x440;
  double x447 = parms[42]*x446 + parms[44]*x431;
  double x448 = parms[39]*x294 + x447;
  double x449 = parms[37]*x435 + parms[40]*x437;
  double x450 = x448 + x449;
  double x451 = parms[45]*x299;
  double x452 = parms[42]*x437 + x385*x435 + x451;
  double x453 = x446*x452;
  double x454 = x294*x439 + x299*x444 + x445*x450 + x453;
  double x455 = parms[54]*x440;
  double x456 = parms[52]*x437 + x455;
  double x457 = x294*x30;
  double x458 = x25*x435;
  double x459 = x457 + x458;
  double x460 = parms[50]*x459;
  double x461 = x30*x435;
  double x462 = x247*x294;
  double x463 = x461 + x462;
  double x464 = x25*x431 + x299*x30;
  double x465 = x199*x294 + x464;
  double x466 = -0.40000000000000002*x461;
  double x467 = x465 + x466;
  double x468 = -x467;
  double x469 = parms[53]*x463 + parms[55]*x468 + x460;
  double x470 = x456 + x469;
  double x471 = parms[55]*x459;
  double x472 = x247*x299 + x30*x431;
  double x473 = 0.40000000000000002*x457 + x472;
  double x474 = x199*x435;
  double x475 = x473 + x474;
  double x476 = parms[57]*x475 + x471;
  double x477 = parms[54]*x445;
  double x478 = x476 + x477;
  double x479 = -x463;
  double x480 = -x475;
  double x481 = parms[49]*x459 + parms[52]*x463 + parms[54]*x480 + parms[56]*x467;
  double x482 = parms[51]*x437;
  double x483 = x481 + x482;
  double x484 = parms[57]*x440;
  double x485 = parms[54]*x463 + x175*x459 + x484;
  double x486 = x480*x485;
  double x487 = x437*x470 + x440*x478 + x479*x483 + x486;
  double x488 = x42*x440;
  double x489 = x467*x47 + x488;
  double x490 = -x489;
  double x491 = parms[67]*x490;
  double x492 = parms[66]*x480 + x491;
  double x493 = parms[64]*x479 + x492;
  double x494 = x42*x437;
  double x495 = x459*x47;
  double x496 = x494 + x495;
  double x497 = x437*x47;
  double x498 = x459*x82;
  double x499 = x497 + x498;
  double x500 = parms[62]*x496 + parms[65]*x499;
  double x501 = x493 + x500;
  double x502 = x440*x47;
  double x503 = x467*x82 + x502;
  double x504 = parms[69]*x503;
  double x505 = -x479;
  double x506 = parms[66]*x505 + x504;
  double x507 = parms[67]*x496;
  double x508 = x506 + x507;
  double x509 = -x499;
  double x510 = -x503;
  double x511 = parms[66]*x510 + parms[68]*x489;
  double x512 = parms[63]*x479 + x511;
  double x513 = parms[61]*x496 + parms[64]*x499;
  double x514 = x512 + x513;
  double x515 = parms[69]*x480;
  double x516 = parms[66]*x499 + x139*x496 + x515;
  double x517 = x510*x516;
  double x518 = x479*x501 + x480*x508 + x509*x514 + x517;
  double x519 = x36*x479;
  double x520 = x117*x496;
  double x521 = x519 + x520;
  double x522 = parms[77]*x499;
  double x523 = x36*x496;
  double x524 = x479*x50;
  double x525 = x523 + x524;
  double x526 = -0.25700000000000001*x523;
  double x527 = x117*x489 + x36*x480;
  double x528 = x120*x479 + x527;
  double x529 = x526 + x528;
  double x530 = x120*x496;
  double x531 = x36*x489 + x480*x50;
  double x532 = 0.25700000000000001*x519 + x531;
  double x533 = x530 + x532;
  double x534 = parms[74]*x525 + parms[76]*x521 + parms[78]*x529 + x533*x75;
  double x535 = x522 + x534;
  double x536 = parms[81]*x503;
  double x537 = parms[79]*x525 + x521*x90 + x536;
  double x538 = x529*x537;
  double x539 = x503*x90;
  double x540 = parms[76]*x499 + x539;
  double x541 = parms[73]*x525 + parms[75]*x521 + parms[80]*x533;
  double x542 = x540 + x541;
  double x543 = parms[78]*x499;
  double x544 = parms[81]*x529;
  double x545 = x100*x525 + x544;
  double x546 = x543 + x545;
  double x547 = x509*x542 + x510*x546 + x521*x535 + x538;
  double x548 = parms[79]*x503;
  double x549 = parms[74]*x499 + x548;
  double x550 = parms[73]*x521;
  double x551 = parms[72]*x525 + x100*x529 + x550;
  double x552 = x549 + x551;
  double x553 = x499*x75;
  double x554 = parms[80]*x521 + parms[81]*x533;
  double x555 = x553 + x554;
  double x556 = -x525;
  double x557 = -x533;
  double x558 = x537*x557;
  double x559 = x499*x552 + x503*x555 + x535*x556 + x558;
  double x560 = x521*x537;
  double x561 = x509*x546 + x560;
  double x562 = x537*x556;
  double x563 = x499*x555 + x562;
  double x564 = x36*x563;
  double x565 = x117*x559 + x120*x561 + x36*x547 + x518 - 0.25700000000000001*x564;
  double x566 = -x521;
  double x567 = -x529;
  double x568 = x525*x542 + x533*x546 + x552*x566 + x555*x567;
  double x569 = x489*x516;
  double x570 = parms[67]*x503 + x139*x480;
  double x571 = parms[61]*x479 + x570;
  double x572 = parms[62]*x499;
  double x573 = parms[60]*x496 + x572;
  double x574 = x571 + x573;
  double x575 = -x480;
  double x576 = parms[69]*x489;
  double x577 = parms[68]*x479 + x576;
  double x578 = parms[67]*x509;
  double x579 = x577 + x578;
  double x580 = x496*x514 + x505*x574 + x569 + x575*x579;
  double x581 = x568 + x580;
  double x582 = x47*x565 + x487 + x581*x82;
  double x583 = x467*x485;
  double x584 = x175*x440;
  double x585 = parms[49]*x437 + x584;
  double x586 = parms[48]*x459 + parms[50]*x463 + parms[55]*x475;
  double x587 = x585 + x586;
  double x588 = parms[55]*x479 + parms[57]*x467;
  double x589 = parms[56]*x437;
  double x590 = x588 + x589;
  double x591 = x445*x587 + x446*x590 + x459*x483 + x583;
  double x592 = -x496;
  double x593 = x490*x508 + x499*x574 + x501*x592 + x503*x579;
  double x594 = x36*x561;
  double x595 = -x120*x563 - x36*x559 - x50*x547 - x593 - 0.25700000000000001*x594;
  double x596 = x591 + x595;
  double x597 = x459*x485;
  double x598 = x445*x590 + x597;
  double x599 = x499*x579 + x508*x592;
  double x600 = -x50*x561 - x564 + x598 - x599;
  double x601 = x479*x485;
  double x602 = x437*x478 + x601;
  double x603 = x509*x516;
  double x604 = x479*x508 + x603;
  double x605 = x117*x563 + x594 + x604;
  double x606 = x496*x516;
  double x607 = x505*x579 + x606;
  double x608 = x525*x546 + x555*x566 + x607;
  double x609 = x47*x605 + x602 + x608*x82;
  double x610 = x30*x609;
  double x611 = x199*x600 + x25*x582 + x30*x596 + x454 - 0.40000000000000002*x610;
  double x612 = x431*x452;
  double x613 = parms[43]*x440 + x299*x385;
  double x614 = parms[37]*x294 + x613;
  double x615 = parms[36]*x435 + parms[38]*x437;
  double x616 = x614 + x615;
  double x617 = parms[45]*x431;
  double x618 = parms[44]*x294 + x617;
  double x619 = parms[43]*x445;
  double x620 = x618 + x619;
  double x621 = x424*x616 + x425*x620 + x435*x450 + x612;
  double x622 = -x459;
  double x623 = x463*x587 + x468*x478 + x470*x622 + x475*x590;
  double x624 = x42*x565 + x47*x581 + x623;
  double x625 = x621 + x624;
  double x626 = x24*x611 + x27*x625 + x430;
  double x627 = x288*x428;
  double x628 = x259*x426 + x627;
  double x629 = -x435;
  double x630 = x432*x444 + x437*x616 + x439*x629 + x440*x620;
  double x631 = x30*x600;
  double x632 = x199*x609 + x247*x596 + x30*x582 + x630 + 0.40000000000000002*x631;
  double x633 = x628 + x632;
  double x634 = x445*x452;
  double x635 = x294*x444 + x634;
  double x636 = x435*x452;
  double x637 = x424*x620 + x636;
  double x638 = x463*x590 + x478*x622;
  double x639 = x424*x428;
  double x640 = x24*(x25*x609 + x631 + x635) + x27*(x42*x605 + x47*x608 + x637 + x638) + x639;
  double x641 = x437*x620 + x444*x629;
  double x642 = x259*x428;
  double x643 = x247*x600 + x610 + x641 + x642;
  double x644 = parms[24]*x259;
  double x645 = parms[26]*x294;
  double x646 = parms[31]*x299 + x644 + x645;
  double x647 = parms[33]*x288;
  double x648 = parms[31]*x424 + x647;
  double x649 = parms[26]*x259;
  double x650 = -x288;
  double x651 = parms[31]*x650;
  double x652 = parms[29]*x294 + x649 + x651;
  double x653 = parms[31]*x259 + parms[33]*x299;
  double x654 = x294*x646 + x299*x648 + x427*x652 + x650*x653;
  double x655 = -x27*x611 - x39*x625 - x654;
  double x656 = x0*(parms[16] + x1*x626 + x259*x633 + x272*x640 + x288*x643) + x10*(x422 + x655);
  double x657 = -x656;
  double x658 = x11 - 1;
  double x659 = parms[28]*x658 + x9;
  double x660 = x24*x5;
  double x661 = x27*x5;
  double x662 = x15*x27;
  double x663 = x20*x30 + x25*x660;
  double x664 = x30*x660;
  double x665 = x20*x247 + x664;
  double x666 = x15*x24;
  double x667 = x199*x660 + x20*x312 + x247*x7 + x30*x666;
  double x668 = x26 + x27*x658;
  double x669 = x25*x668 + x45;
  double x670 = x199*x668 + x59;
  double x671 = x38 + x39*x658;
  double x672 = parms[55]*x669 + parms[57]*x670 + x321*x671;
  double x673 = x30*x668;
  double x674 = x33 + x673;
  double x675 = x66 - 0.40000000000000002*x673;
  double x676 = parms[50]*x669 + parms[52]*x671 + parms[53]*x674 + x160 + x379*x675;
  double x677 = x42*x661 + x47*x663;
  double x678 = -x665;
  double x679 = x47*x661 + x663*x82;
  double x680 = x199*x20 + x25*x666 + x30*x7 - 0.40000000000000002*x664;
  double x681 = x47*x662 + x680*x82;
  double x682 = -x674;
  double x683 = x42*x671 + x47*x669;
  double x684 = x47*x671 + x669*x82;
  double x685 = -x670;
  double x686 = x47*x675 + x64;
  double x687 = parms[62]*x683 + parms[64]*x682 + parms[65]*x684 + parms[66]*x685 + x332*x686;
  double x688 = x675*x82 + x87;
  double x689 = parms[67]*x683 + parms[69]*x688 + x336*x682;
  double x690 = x36*x677 + x50*x678;
  double x691 = x36*x678;
  double x692 = x117*x677 + x691;
  double x693 = x36*x682;
  double x694 = x117*x683 + x693;
  double x695 = x36*x683 + x50*x682;
  double x696 = x117*x686 + x120*x682 + x344*x683 + x36*x685;
  double x697 = x120*x683 + x36*x686 + x50*x685 + 0.25700000000000001*x693;
  double x698 = parms[74]*x695 + parms[76]*x694 + parms[77]*x684 + parms[78]*x696 + x697*x75;
  double x699 = parms[79]*x695 + parms[81]*x688 + x694*x90;
  double x700 = -x667;
  double x701 = x42*x662 + x47*x680;
  double x702 = x117*x701 + x120*x678 + x344*x677 + x36*x700;
  double x703 = parms[73]*x695 + parms[75]*x694 + parms[76]*x684 + parms[80]*x697 + x688*x90;
  double x704 = -x684;
  double x705 = parms[78]*x684 + parms[81]*x696 + x100*x695;
  double x706 = -x688;
  double x707 = parms[72]*x690 + parms[73]*x692 + parms[74]*x679 + parms[79]*x681 + x100*x702 + x694*x698 + x696*x699 + x703*x704 + x705*x706;
  double x708 = parms[61]*x683 + parms[63]*x682 + parms[64]*x684 + parms[68]*x686 + x336*x688;
  double x709 = parms[66]*x684 + parms[69]*x685 + x139*x683;
  double x710 = x120*x677 + x36*x701 + x50*x700 + 0.25700000000000001*x691;
  double x711 = parms[72]*x695 + parms[73]*x694 + parms[74]*x684 + parms[79]*x688 + x100*x696;
  double x712 = parms[80]*x694 + parms[81]*x697 + x684*x75;
  double x713 = -x695;
  double x714 = parms[73]*x690 + parms[75]*x692 + parms[76]*x679 + parms[80]*x710 + x681*x90 + x684*x711 + x688*x712 - x697*x699 + x698*x713;
  double x715 = parms[80]*x692 + parms[81]*x710 + x679*x75 + x694*x699 + x704*x705;
  double x716 = parms[78]*x679 + parms[81]*x702 + x100*x690 + x684*x712 + x699*x713;
  double x717 = parms[60]*x677 + parms[61]*x678 + parms[62]*x679 + parms[67]*x681 + x117*x714 + x120*x715 + x139*x700 + x344*x716 + x36*x707 + x682*x687 + x685*x689 + x704*x708 + x706*x709;
  double x718 = parms[49]*x669 + parms[51]*x671 + parms[52]*x674 + parms[56]*x675 + x321*x670;
  double x719 = parms[54]*x674 + x174 + x175*x669;
  double x720 = -x694;
  double x721 = parms[74]*x690 + parms[76]*x692 + parms[77]*x679 + parms[78]*x702 + x695*x703 - x696*x712 + x697*x705 + x710*x75 + x711*x720;
  double x722 = parms[60]*x683 + parms[61]*x682 + parms[62]*x684 + parms[67]*x688 + x139*x685;
  double x723 = -x682;
  double x724 = parms[68]*x682 + parms[69]*x686 + x332*x684;
  double x725 = parms[62]*x677 + parms[64]*x678 + parms[65]*x679 + parms[66]*x700 + x332*x701 + x683*x708 - x685*x724 + x686*x709 + x721 + x722*x723;
  double x726 = parms[48]*x663 + parms[49]*x661 + parms[50]*x665 + parms[55]*x667 + x175*x662 + x47*x717 + x63*x672 + x671*x676 + x682*x718 + x685*x719 + x725*x82;
  double x727 = -x683;
  double x728 = x36*x715;
  double x729 = -parms[61]*x677 - parms[63]*x678 - parms[64]*x679 - parms[68]*x701 - x120*x716 - x336*x681 - x36*x714 - x50*x707 - x684*x722 + x686*x689 - x687*x727 - x688*x724 - 0.25700000000000001*x728;
  double x730 = parms[55]*x682 + parms[56]*x671 + parms[57]*x675;
  double x731 = parms[48]*x669 + parms[49]*x671 + parms[50]*x674 + parms[55]*x670 + x185;
  double x732 = -x671;
  double x733 = parms[50]*x663 + parms[52]*x661 + parms[53]*x665 + parms[54]*x662 + x192*x730 + x379*x680 + x669*x718 + x675*x719 + x729 + x731*x732;
  double x734 = parms[38]*x668 + parms[41]*x671 + x212;
  double x735 = parms[43]*x668 + x218;
  double x736 = parms[42]*x671 + x224 + x385*x668;
  double x737 = parms[37]*x668 + parms[40]*x671 + x221;
  double x738 = parms[55]*x663 + parms[57]*x667 - parms[66]*x679 - parms[69]*x700 - x139*x677 + x321*x661 - x36*x716 - x50*x715 + x669*x719 - x684*x724 - x689*x727 + x730*x732;
  double x739 = parms[68]*x678 + parms[69]*x701 + x117*x716 + x332*x679 + x682*x689 + x704*x709 + x728;
  double x740 = parms[67]*x677 + parms[69]*x681 + parms[79]*x690 + parms[81]*x681 + x336*x678 + x683*x709 + x692*x90 + x695*x705 + x712*x720 + x723*x724;
  double x741 = parms[55]*x678 + parms[56]*x661 + parms[57]*x680 + x47*x739 + x671*x672 + x682*x719 + x740*x82;
  double x742 = x30*x741;
  double x743 = parms[36]*x660 + parms[37]*x20 + parms[38]*x661 + parms[43]*x662 + x15*x735 + x192*x736 + x199*x738 + x25*x726 + x30*x733 + x385*x7 + x5*x734 + x732*x737 - 0.40000000000000002*x742;
  double x744 = -x669;
  double x745 = parms[49]*x663 + parms[51]*x661 + parms[52]*x665 + parms[56]*x680 + x321*x667 + x42*x717 + x47*x725 + x670*x730 - x672*x675 + x674*x731 + x676*x744;
  double x746 = parms[36]*x668 + parms[38]*x671 + x235;
  double x747 = x239 + x301*x671;
  double x748 = parms[38]*x660 + parms[40]*x20 + parms[41]*x661 + parms[42]*x7 + x14*x746 + x16*x747 + x301*x666 + x57*x736 + x668*x737 + x745;
  double x749 = parms[27]*x658 + x17;
  double x750 = parms[24]*x5 + parms[26]*x20 + x14*x749 + x22 + x24*x743 + x27*x748 + x658*x659 + x8;
  double x751 = -x668;
  double x752 = parms[37]*x660 + parms[39]*x20 + parms[40]*x661 + parms[44]*x666 + x199*x741 + x210*x735 + x247*x733 + x30*x726 + x306*x662 + x312*x738 + x63*x747 + x671*x746 + x734*x751;
  double x753 = parms[25]*x658 + x253;
  double x754 = -x658;
  double x755 = parms[29]*x20 + parms[31]*x16 + x2*x749 + x251 + x252 + x752 + x753*x754;
  double x756 = x261 + x403*x658;
  double x757 = x20*x412 + x24*(parms[44]*x20 + parms[45]*x666 + x25*x741 + x30*x738 + x301*x661 + x5*x735 + x732*x736) + x260 + x264 + x27*(parms[43]*x660 + parms[45]*x662 + parms[54]*x665 + parms[57]*x662 + x14*x747 + x175*x663 + x20*x306 + x42*x739 + x47*x740 + x668*x736 + x672*x744 + x674*x730) + x658*x756;
  double x758 = parms[32]*x658 + x274;
  double x759 = parms[31]*x5 + parms[33]*x7 + parms[42]*x661 + parms[45]*x7 + x247*x738 + x273 + x385*x660 + x671*x747 + x735*x751 + x742 + x754*x758;
  double x760 = -parms[25]*x5 - parms[28]*x20 - parms[32]*x15 - x15*x758 - x20*x659 - x27*x743 - x39*x748 - x403*x7 - x5*x753 - x7*x756;
  double x761 = -x27;
  double x762 = x30*x761;
  double x763 = -x762;
  double x764 = x199*x761;
  double x765 = -x764;
  double x766 = -0.40000000000000002*x762;
  double x767 = x47*x766;
  double x768 = -x767;
  double x769 = parms[67]*x768;
  double x770 = parms[66]*x765 + x769;
  double x771 = parms[64]*x763 + x770;
  double x772 = x24*x42;
  double x773 = x25*x761;
  double x774 = x47*x773;
  double x775 = x772 + x774;
  double x776 = x24*x47;
  double x777 = x773*x82;
  double x778 = x776 + x777;
  double x779 = parms[62]*x775 + parms[65]*x778;
  double x780 = x771 + x779;
  double x781 = x766*x82;
  double x782 = parms[69]*x781;
  double x783 = -x763;
  double x784 = parms[66]*x783 + x782;
  double x785 = parms[67]*x775;
  double x786 = x784 + x785;
  double x787 = -x778;
  double x788 = -x781;
  double x789 = parms[66]*x788 + parms[68]*x767;
  double x790 = parms[63]*x763 + x789;
  double x791 = parms[61]*x775 + parms[64]*x778;
  double x792 = x790 + x791;
  double x793 = parms[69]*x765;
  double x794 = parms[66]*x778 + x139*x775 + x793;
  double x795 = x788*x794;
  double x796 = x763*x780 + x765*x786 + x787*x792 + x795;
  double x797 = x36*x763;
  double x798 = x117*x775;
  double x799 = x797 + x798;
  double x800 = x36*x775;
  double x801 = x50*x763;
  double x802 = x800 + x801;
  double x803 = x117*x767 + x36*x765;
  double x804 = x120*x763 + x803;
  double x805 = -0.25700000000000001*x800;
  double x806 = x804 + x805;
  double x807 = x36*x767 + x50*x765;
  double x808 = 0.25700000000000001*x797 + x807;
  double x809 = x120*x775;
  double x810 = x808 + x809;
  double x811 = parms[74]*x802 + parms[76]*x799 + parms[78]*x806 + x75*x810;
  double x812 = parms[77]*x778;
  double x813 = x811 + x812;
  double x814 = parms[81]*x781;
  double x815 = parms[79]*x802 + x799*x90 + x814;
  double x816 = x806*x815;
  double x817 = x781*x90;
  double x818 = parms[76]*x778 + x817;
  double x819 = parms[73]*x802 + parms[75]*x799 + parms[80]*x810;
  double x820 = x818 + x819;
  double x821 = parms[81]*x806;
  double x822 = x100*x802 + x821;
  double x823 = parms[78]*x778;
  double x824 = x822 + x823;
  double x825 = x787*x820 + x788*x824 + x799*x813 + x816;
  double x826 = parms[79]*x781;
  double x827 = parms[74]*x778 + x826;
  double x828 = parms[73]*x799;
  double x829 = parms[72]*x802 + x100*x806 + x828;
  double x830 = x827 + x829;
  double x831 = parms[80]*x799 + parms[81]*x810;
  double x832 = x75*x778;
  double x833 = x831 + x832;
  double x834 = -x802;
  double x835 = -x810;
  double x836 = x815*x835;
  double x837 = x778*x830 + x781*x833 + x813*x834 + x836;
  double x838 = x799*x815;
  double x839 = x787*x824 + x838;
  double x840 = x815*x834;
  double x841 = x778*x833 + x840;
  double x842 = x36*x841;
  double x843 = x117*x837 + x120*x839 + x36*x825 + x796 - 0.25700000000000001*x842;
  double x844 = x767*x794;
  double x845 = parms[67]*x781 + x139*x765;
  double x846 = parms[61]*x763 + x845;
  double x847 = parms[62]*x778;
  double x848 = parms[60]*x775 + x847;
  double x849 = x846 + x848;
  double x850 = parms[67]*x787;
  double x851 = parms[69]*x767;
  double x852 = parms[68]*x763 + x851;
  double x853 = x850 + x852;
  double x854 = -x765;
  double x855 = x775*x792 + x783*x849 + x844 + x853*x854;
  double x856 = -x799;
  double x857 = -x806;
  double x858 = x802*x820 + x810*x824 + x830*x856 + x833*x857;
  double x859 = x855 + x858;
  double x860 = parms[52]*x24;
  double x861 = parms[50]*x773;
  double x862 = -x766;
  double x863 = parms[53]*x762 + parms[55]*x862 + x861;
  double x864 = x860 + x863;
  double x865 = parms[51]*x24;
  double x866 = parms[49]*x773 + parms[52]*x762 + parms[54]*x765 + parms[56]*x766;
  double x867 = x865 + x866;
  double x868 = parms[54]*x762 + x175*x773;
  double x869 = x765*x868;
  double x870 = x24*x864 + x763*x867 + x869;
  double x871 = x47*x843 + x82*x859 + x870;
  double x872 = x36*x839;
  double x873 = -x775;
  double x874 = x768*x786 + x778*x849 + x780*x873 + x781*x853;
  double x875 = -x120*x841 - x36*x837 - x50*x825 - 0.25700000000000001*x872 - x874;
  double x876 = x766*x868;
  double x877 = parms[49]*x24;
  double x878 = parms[48]*x773 + parms[50]*x762 + parms[55]*x764;
  double x879 = x877 + x878;
  double x880 = x39*x879 + x773*x867 + x876;
  double x881 = x875 + x880;
  double x882 = parms[37]*x761 + parms[40]*x24;
  double x883 = x39*x882;
  double x884 = x778*x853 + x786*x873;
  double x885 = x773*x868;
  double x886 = parms[56]*x24;
  double x887 = parms[55]*x763 + parms[57]*x766;
  double x888 = x886 + x887;
  double x889 = x39*x888 + x885;
  double x890 = -x50*x839 - x842 - x884 + x889;
  double x891 = x787*x794;
  double x892 = x763*x786 + x891;
  double x893 = x117*x841 + x872 + x892;
  double x894 = x775*x794;
  double x895 = x783*x853 + x894;
  double x896 = x802*x824 + x833*x856 + x895;
  double x897 = parms[54]*x39;
  double x898 = parms[55]*x773;
  double x899 = parms[57]*x764 + x898;
  double x900 = x897 + x899;
  double x901 = x763*x868;
  double x902 = x24*x900 + x901;
  double x903 = x47*x893 + x82*x896 + x902;
  double x904 = x30*x903;
  double x905 = x199*x890 + x25*x871 + x30*x881 + x883 - 0.40000000000000002*x904;
  double x906 = -x773;
  double x907 = x762*x879 + x764*x888 + x862*x900 + x864*x906;
  double x908 = x42*x843 + x47*x859 + x907;
  double x909 = x761*x882;
  double x910 = x908 + x909;
  double x911 = -x27*x905 - x39*x910;
  double x912 = parms[28] + x24*x905 + x27*x910;
  double x913 = x30*x890;
  double x914 = parms[36]*x761;
  double x915 = parms[38]*x24 + x914;
  double x916 = parms[38]*x761;
  double x917 = parms[41]*x24;
  double x918 = x916 + x917;
  double x919 = -x761;
  double x920 = x24*x915 + x918*x919;
  double x921 = x199*x903 + x247*x881 + x30*x871 + 0.40000000000000002*x913 + x920;
  double x922 = -parms[25];
  double x923 = x921 + x922;
  double x924 = parms[42]*x24 + x385*x761;
  double x925 = x39*x924;
  double x926 = x762*x888 + x900*x906;
  double x927 = x761*x924;
  double x928 = x24*(x25*x903 + x913 + x925) + x27*(x42*x893 + x47*x896 + x926 + x927) + x403;
  double x929 = ((x24)*(x24))*x301 + x301*((x761)*(x761));
  double x930 = x247*x890 + x405 + x904 + x929;
  double x931 = x0*(x1*x912 + x259*x923 + x272*x928 + x288*x930) + x10*x911;
  double x932 = -x931;
  double x933 = x24*x294;
  double x934 = x27*x294;
  double x935 = x27*x299;
  double x936 = x25*x933 + x30*x427;
  double x937 = x30*x933;
  double x938 = x247*x427 + x937;
  double x939 = x24*x299;
  double x940 = x199*x933 + x247*x650 + x30*x939 + x312*x427;
  double x941 = x24 + x437;
  double x942 = x435 + x761;
  double x943 = x25*x942 + x457;
  double x944 = x30*x942;
  double x945 = x462 + x944;
  double x946 = x465 - 0.40000000000000002*x944;
  double x947 = parms[50]*x943 + parms[52]*x941 + parms[53]*x945 + x379*x946 + x455;
  double x948 = x42*x934 + x47*x936;
  double x949 = -x938;
  double x950 = x47*x934 + x82*x936;
  double x951 = x199*x427 + x25*x939 + x30*x650 - 0.40000000000000002*x937;
  double x952 = x47*x935 + x82*x951;
  double x953 = -x945;
  double x954 = x42*x941 + x47*x943;
  double x955 = x47*x941 + x82*x943;
  double x956 = x199*x942 + x473;
  double x957 = -x956;
  double x958 = x47*x946 + x488;
  double x959 = parms[62]*x954 + parms[64]*x953 + parms[65]*x955 + parms[66]*x957 + x332*x958;
  double x960 = x502 + x82*x946;
  double x961 = parms[67]*x954 + parms[69]*x960 + x336*x953;
  double x962 = x36*x948 + x50*x949;
  double x963 = x36*x949;
  double x964 = x117*x948 + x963;
  double x965 = x36*x953;
  double x966 = x117*x954 + x965;
  double x967 = x36*x954 + x50*x953;
  double x968 = x117*x958 + x120*x953 + x344*x954 + x36*x957;
  double x969 = x120*x954 + x36*x958 + x50*x957 + 0.25700000000000001*x965;
  double x970 = parms[74]*x967 + parms[76]*x966 + parms[77]*x955 + parms[78]*x968 + x75*x969;
  double x971 = parms[79]*x967 + parms[81]*x960 + x90*x966;
  double x972 = -x940;
  double x973 = x42*x935 + x47*x951;
  double x974 = x117*x973 + x120*x949 + x344*x948 + x36*x972;
  double x975 = parms[73]*x967 + parms[75]*x966 + parms[76]*x955 + parms[80]*x969 + x90*x960;
  double x976 = -x955;
  double x977 = parms[78]*x955 + parms[81]*x968 + x100*x967;
  double x978 = -x960;
  double x979 = parms[72]*x962 + parms[73]*x964 + parms[74]*x950 + parms[79]*x952 + x100*x974 + x966*x970 + x968*x971 + x975*x976 + x977*x978;
  double x980 = parms[61]*x954 + parms[63]*x953 + parms[64]*x955 + parms[68]*x958 + x336*x960;
  double x981 = parms[66]*x955 + parms[69]*x957 + x139*x954;
  double x982 = x120*x948 + x36*x973 + x50*x972 + 0.25700000000000001*x963;
  double x983 = parms[72]*x967 + parms[73]*x966 + parms[74]*x955 + parms[79]*x960 + x100*x968;
  double x984 = parms[80]*x966 + parms[81]*x969 + x75*x955;
  double x985 = -x967;
  double x986 = parms[73]*x962 + parms[75]*x964 + parms[76]*x950 + parms[80]*x982 + x90*x952 + x955*x983 + x960*x984 - x969*x971 + x970*x985;
  double x987 = parms[80]*x964 + parms[81]*x982 + x75*x950 + x966*x971 + x976*x977;
  double x988 = parms[78]*x950 + parms[81]*x974 + x100*x962 + x955*x984 + x971*x985;
  double x989 = parms[60]*x948 + parms[61]*x949 + parms[62]*x950 + parms[67]*x952 + x117*x986 + x120*x987 + x139*x972 + x344*x988 + x36*x979 + x953*x959 + x957*x961 + x976*x980 + x978*x981;
  double x990 = parms[55]*x943 + parms[57]*x956 + x321*x941;
  double x991 = parms[49]*x943 + parms[51]*x941 + parms[52]*x945 + parms[56]*x946 + x321*x956;
  double x992 = parms[54]*x945 + x175*x943 + x484;
  double x993 = -x966;
  double x994 = parms[74]*x962 + parms[76]*x964 + parms[77]*x950 + parms[78]*x974 + x75*x982 + x967*x975 - x968*x984 + x969*x977 + x983*x993;
  double x995 = parms[60]*x954 + parms[61]*x953 + parms[62]*x955 + parms[67]*x960 + x139*x957;
  double x996 = -x953;
  double x997 = parms[68]*x953 + parms[69]*x958 + x332*x955;
  double x998 = parms[62]*x948 + parms[64]*x949 + parms[65]*x950 + parms[66]*x972 + x332*x973 + x954*x980 - x957*x997 + x958*x981 + x994 + x995*x996;
  double x999 = parms[48]*x936 + parms[49]*x934 + parms[50]*x938 + parms[55]*x940 + x175*x935 + x440*x990 + x47*x989 + x82*x998 + x941*x947 + x953*x991 + x957*x992;
  double x1000 = -x954;
  double x1001 = x36*x987;
  double x1002 = -parms[61]*x948 - parms[63]*x949 - parms[64]*x950 - parms[68]*x973 - x1000*x959 - 0.25700000000000001*x1001 - x120*x988 - x336*x952 - x36*x986 - x50*x979 - x955*x995 + x958*x961 - x960*x997;
  double x1003 = parms[48]*x943 + parms[49]*x941 + parms[50]*x945 + parms[55]*x956 + x584;
  double x1004 = -x941;
  double x1005 = parms[56]*x941 + parms[57]*x946 + x379*x945;
  double x1006 = parms[50]*x936 + parms[52]*x934 + parms[53]*x938 + parms[54]*x935 + x1002 + x1003*x1004 + x1005*x446 + x379*x951 + x943*x991 + x946*x992;
  double x1007 = parms[38]*x942 + parms[41]*x941 + x434;
  double x1008 = parms[43]*x942 + x442;
  double x1009 = parms[37]*x942 + parms[40]*x941 + x448;
  double x1010 = parms[42]*x941 + x385*x942 + x451;
  double x1011 = parms[55]*x936 + parms[57]*x940 - parms[66]*x950 - parms[69]*x972 - x1000*x961 + x1004*x1005 - x139*x948 + x321*x934 - x36*x988 - x50*x987 + x943*x992 - x955*x997;
  double x1012 = parms[68]*x949 + parms[69]*x973 + x1001 + x117*x988 + x332*x950 + x953*x961 + x976*x981;
  double x1013 = parms[67]*x948 + parms[69]*x952 + parms[79]*x962 + parms[81]*x952 + x336*x949 + x90*x964 + x954*x981 + x967*x977 + x984*x993 + x996*x997;
  double x1014 = parms[56]*x934 + parms[57]*x951 + x1012*x47 + x1013*x82 + x379*x938 + x941*x990 + x953*x992;
  double x1015 = x1014*x30;
  double x1016 = parms[36]*x933 + parms[37]*x427 + parms[38]*x934 + parms[43]*x935 + x1004*x1009 + x1006*x30 + x1007*x294 + x1008*x299 + x1010*x446 + x1011*x199 - 0.40000000000000002*x1015 + x25*x999 + x385*x650;
  double x1017 = -x943;
  double x1018 = parms[49]*x936 + parms[51]*x934 + parms[52]*x938 + parms[56]*x951 + x1003*x945 + x1005*x956 + x1017*x947 + x321*x940 + x42*x989 + x47*x998 - x946*x990;
  double x1019 = parms[36]*x942 + parms[38]*x941 + x614;
  double x1020 = x301*x941 + x618;
  double x1021 = parms[38]*x933 + parms[40]*x427 + parms[41]*x934 + parms[42]*x650 + x1009*x942 + x1010*x431 + x1018 + x1019*x424 + x1020*x425 + x301*x939;
  double x1022 = -parms[27] + x426;
  double x1023 = parms[24]*x294 + parms[26]*x427 + parms[28] + parms[29]*x424 + parms[31]*x288 + x1016*x24 + x1021*x27 + x1022*x424 + x429 - x649 + x651;
  double x1024 = -x942;
  double x1025 = parms[37]*x933 + parms[39]*x427 + parms[40]*x934 + parms[44]*x939 + x1006*x247 + x1007*x1024 + x1008*x432 + x1011*x312 + x1014*x199 + x1019*x941 + x1020*x440 + x30*x999 + x306*x935;
  double x1026 = parms[29]*x427 + x1022*x259 + x1025 + x627 + x644 + 2*x645 + x922;
  double x1027 = parms[31]*x427 + x24*(parms[44]*x427 + parms[45]*x939 + x1004*x1010 + x1008*x294 + x1011*x30 + x1014*x25 + x301*x934) + x27*(parms[43]*x933 + parms[45]*x935 + parms[54]*x938 + parms[57]*x935 + x1005*x945 + x1010*x942 + x1012*x42 + x1013*x47 + x1017*x990 + x1020*x424 + x175*x936 + x306*x427) + x403 + x412*x427 + x639;
  double x1028 = parms[33]*x650 + parms[42]*x934 + parms[45]*x650 + x1008*x1024 + x1011*x247 + x1015 + x1020*x941 + x385*x933 + x405 + x642 + x647;
  double x1029 = -parms[25]*x294 - parms[28]*x427 - parms[32]*x299 - x1016*x27 - x1021*x39 - x294*(x646 + x922) - x299*(x405 + x648) - x403*x650 - x427*(-parms[28] + x652) - x650*(parms[30] + x653);
  double x1030 = x5 + 1;
  double x1031 = parms[40]*x1030 + x211 + x214;
  double x1032 = x166*x25;
  double x1033 = x166*x30;
  double x1034 = x166*x199 + x192*x30;
  double x1035 = x1030*x30 + x44;
  double x1036 = x1030*x247 + x31;
  double x1037 = x1030*x199 + x65 + x67;
  double x1038 = parms[50]*x1035 + parms[53]*x1036 + x1037*x379 + x161;
  double x1039 = x1030*x312 + x58 + x60;
  double x1040 = parms[55]*x1035 + parms[57]*x1039 + x167;
  double x1041 = x1032*x47 + x29*x42;
  double x1042 = -x1033;
  double x1043 = x1032*x82 + x29*x47;
  double x1044 = -0.40000000000000002*x1033 + x192*x25;
  double x1045 = x1044*x82 + x47*x57;
  double x1046 = -x1036;
  double x1047 = x1035*x47 + x43;
  double x1048 = x1035*x82 + x81;
  double x1049 = -x1039;
  double x1050 = x1037*x47 + x64;
  double x1051 = parms[62]*x1047 + parms[64]*x1046 + parms[65]*x1048 + parms[66]*x1049 + x1050*x332;
  double x1052 = x1037*x82 + x87;
  double x1053 = parms[67]*x1047 + parms[69]*x1052 + x1046*x336;
  double x1054 = x1041*x36 + x1042*x50;
  double x1055 = x1042*x36;
  double x1056 = x1041*x117 + x1055;
  double x1057 = x1046*x36;
  double x1058 = x1047*x117 + x1057;
  double x1059 = x1046*x50 + x1047*x36;
  double x1060 = x1046*x120 + x1047*x344 + x1049*x36 + x1050*x117;
  double x1061 = x1047*x120 + x1049*x50 + x1050*x36 + 0.25700000000000001*x1057;
  double x1062 = parms[74]*x1059 + parms[76]*x1058 + parms[77]*x1048 + parms[78]*x1060 + x1061*x75;
  double x1063 = parms[79]*x1059 + parms[81]*x1052 + x1058*x90;
  double x1064 = -x1034;
  double x1065 = x1044*x47 + x42*x57;
  double x1066 = x1041*x344 + x1042*x120 + x1064*x36 + x1065*x117;
  double x1067 = parms[73]*x1059 + parms[75]*x1058 + parms[76]*x1048 + parms[80]*x1061 + x1052*x90;
  double x1068 = -x1048;
  double x1069 = parms[78]*x1048 + parms[81]*x1060 + x100*x1059;
  double x1070 = -x1052;
  double x1071 = parms[72]*x1054 + parms[73]*x1056 + parms[74]*x1043 + parms[79]*x1045 + x100*x1066 + x1058*x1062 + x1060*x1063 + x1067*x1068 + x1069*x1070;
  double x1072 = parms[61]*x1047 + parms[63]*x1046 + parms[64]*x1048 + parms[68]*x1050 + x1052*x336;
  double x1073 = parms[66]*x1048 + parms[69]*x1049 + x1047*x139;
  double x1074 = x1041*x120 + 0.25700000000000001*x1055 + x1064*x50 + x1065*x36;
  double x1075 = parms[72]*x1059 + parms[73]*x1058 + parms[74]*x1048 + parms[79]*x1052 + x100*x1060;
  double x1076 = parms[80]*x1058 + parms[81]*x1061 + x1048*x75;
  double x1077 = -x1059;
  double x1078 = parms[73]*x1054 + parms[75]*x1056 + parms[76]*x1043 + parms[80]*x1074 + x1045*x90 + x1048*x1075 + x1052*x1076 - x1061*x1063 + x1062*x1077;
  double x1079 = parms[80]*x1056 + parms[81]*x1074 + x1043*x75 + x1058*x1063 + x1068*x1069;
  double x1080 = parms[78]*x1043 + parms[81]*x1066 + x100*x1054 + x1048*x1076 + x1063*x1077;
  double x1081 = parms[60]*x1041 + parms[61]*x1042 + parms[62]*x1043 + parms[67]*x1045 + x1046*x1051 + x1049*x1053 + x1064*x139 + x1068*x1072 + x1070*x1073 + x1071*x36 + x1078*x117 + x1079*x120 + x1080*x344;
  double x1082 = parms[49]*x1035 + parms[52]*x1036 + parms[56]*x1037 + x1039*x321 + x171;
  double x1083 = parms[54]*x1036 + x1035*x175 + x174;
  double x1084 = -x1058;
  double x1085 = parms[74]*x1054 + parms[76]*x1056 + parms[77]*x1043 + parms[78]*x1066 + x1059*x1067 - x1060*x1076 + x1061*x1069 + x1074*x75 + x1075*x1084;
  double x1086 = parms[60]*x1047 + parms[61]*x1046 + parms[62]*x1048 + parms[67]*x1052 + x1049*x139;
  double x1087 = -x1046;
  double x1088 = parms[68]*x1046 + parms[69]*x1050 + x1048*x332;
  double x1089 = parms[62]*x1041 + parms[64]*x1042 + parms[65]*x1043 + parms[66]*x1064 + x1047*x1072 - x1049*x1088 + x1050*x1073 + x1065*x332 + x1085 + x1086*x1087;
  double x1090 = parms[48]*x1032 + parms[49]*x29 + parms[50]*x1033 + parms[55]*x1034 + x1038*x41 + x1040*x63 + x1046*x1082 + x1049*x1083 + x1081*x47 + x1089*x82 + x175*x57;
  double x1091 = -x1047;
  double x1092 = x1079*x36;
  double x1093 = -parms[61]*x1041 - parms[63]*x1042 - parms[64]*x1043 - parms[68]*x1065 - x1045*x336 - x1048*x1086 + x1050*x1053 - x1051*x1091 - x1052*x1088 - x1071*x50 - x1078*x36 - x1080*x120 - 0.25700000000000001*x1092;
  double x1094 = parms[48]*x1035 + parms[50]*x1036 + parms[55]*x1039 + x186;
  double x1095 = parms[57]*x1037 + x1036*x379 + x189;
  double x1096 = parms[50]*x1032 + parms[52]*x29 + parms[53]*x1033 + parms[54]*x57 + x1035*x1082 + x1037*x1083 + x1044*x379 + x1093 + x1094*x166 + x1095*x192;
  double x1097 = x1030*x306 + x216 + x217;
  double x1098 = parms[39]*x1030 + x220 + x222;
  double x1099 = parms[54]*x225 + parms[55]*x1032 + parms[57]*x1034 - parms[66]*x1043 - parms[69]*x1064 + x1035*x1083 - x1041*x139 - x1048*x1088 - x1053*x1091 - x1079*x50 - x1080*x36 + x1095*x166;
  double x1100 = parms[68]*x1042 + parms[69]*x1065 + x1043*x332 + x1046*x1053 + x1068*x1073 + x1080*x117 + x1092;
  double x1101 = parms[67]*x1041 + parms[69]*x1045 + parms[79]*x1054 + parms[81]*x1045 + x1042*x336 + x1047*x1073 + x1056*x90 + x1059*x1069 + x1076*x1084 + x1087*x1088;
  double x1102 = parms[56]*x29 + parms[57]*x1044 + x1033*x379 + x1040*x41 + x1046*x1083 + x1100*x47 + x1101*x82;
  double x1103 = x1102*x30;
  double x1104 = parms[36]*x166 + parms[43]*x57 + x1030*x1031 + x1090*x25 + x1096*x30 + x1097*x15 + x1098*x166 + x1099*x199 - 0.40000000000000002*x1103 + x213 + x227;
  double x1105 = -x1035;
  double x1106 = parms[49]*x1032 + parms[51]*x29 + parms[52]*x1033 + parms[56]*x1044 + x1034*x321 + x1036*x1094 - x1037*x1040 + x1038*x1105 + x1039*x1095 + x1081*x42 + x1089*x47;
  double x1107 = parms[37]*x1030 + x234 + x236;
  double x1108 = -x1030;
  double x1109 = x238 + x240;
  double x1110 = parms[44]*x1030 + x1109;
  double x1111 = parms[38]*x166 + parms[41]*x29 + x1098*x29 + x1106 + x1107*x1108 + x1110*x16 + x192*x301 + x233;
  double x1112 = x1104*x24 + x1111*x27 + x23;
  double x1113 = parms[37]*x166 + parms[40]*x29 + parms[42]*x210 + parms[44]*x192 + x1031*x225 + x1090*x30 + x1096*x247 + x1097*x210 + x1099*x312 + x1102*x199 + x1107*x41 + x1110*x63;
  double x1114 = x1113 + x257;
  double x1115 = x24*(parms[45]*x192 + x1030*x1097 + x1099*x30 + x1102*x25 - x216 + x266) + x265 + x27*(parms[54]*x1033 + parms[57]*x57 + x1032*x175 + x1036*x1095 + x1040*x1105 + x1100*x42 + x1101*x47 + x1108*x1110 + x1109 + x269);
  double x1116 = parms[42]*x29 + x1097*x225 + x1099*x247 + x1103 + x1110*x41 + x166*x385 + x277;
  double x1117 = -x1104*x27 - x1111*x39 - x280;
  double x1118 = -x247;
  double x1119 = x1118*x36;
  double x1120 = x30*x47;
  double x1121 = x1120*x117;
  double x1122 = x1119 + x1121;
  double x1123 = x30*x82;
  double x1124 = parms[77]*x1123;
  double x1125 = x1120*x36;
  double x1126 = x1118*x50;
  double x1127 = x1125 + x1126;
  double x1128 = -0.25700000000000001*x1125;
  double x1129 = -x312;
  double x1130 = x199*x47;
  double x1131 = x1129*x36 + x1130*x117;
  double x1132 = x1118*x120 + x1131;
  double x1133 = x1128 + x1132;
  double x1134 = x1120*x120;
  double x1135 = x1129*x50 + x1130*x36;
  double x1136 = 0.25700000000000001*x1119 + x1135;
  double x1137 = x1134 + x1136;
  double x1138 = parms[74]*x1127 + parms[76]*x1122 + parms[78]*x1133 + x1137*x75;
  double x1139 = x1124 + x1138;
  double x1140 = x199*x82;
  double x1141 = parms[81]*x1140;
  double x1142 = parms[79]*x1127 + x1122*x90 + x1141;
  double x1143 = x1133*x1142;
  double x1144 = x1140*x90;
  double x1145 = parms[76]*x1123 + x1144;
  double x1146 = parms[73]*x1127 + parms[75]*x1122 + parms[80]*x1137;
  double x1147 = x1145 + x1146;
  double x1148 = -x1123;
  double x1149 = parms[78]*x1123;
  double x1150 = parms[81]*x1133;
  double x1151 = x100*x1127 + x1150;
  double x1152 = x1149 + x1151;
  double x1153 = -x1140;
  double x1154 = x1122*x1139 + x1143 + x1147*x1148 + x1152*x1153;
  double x1155 = parms[79]*x1140;
  double x1156 = parms[74]*x1123 + x1155;
  double x1157 = parms[73]*x1122;
  double x1158 = parms[72]*x1127 + x100*x1133 + x1157;
  double x1159 = x1156 + x1158;
  double x1160 = x1123*x75;
  double x1161 = parms[80]*x1122 + parms[81]*x1137;
  double x1162 = x1160 + x1161;
  double x1163 = -x1127;
  double x1164 = -x1137;
  double x1165 = x1142*x1164;
  double x1166 = x1123*x1159 + x1139*x1163 + x1140*x1162 + x1165;
  double x1167 = x1122*x1142;
  double x1168 = x1148*x1152 + x1167;
  double x1169 = x1142*x1163;
  double x1170 = x1123*x1162 + x1169;
  double x1171 = x1170*x36;
  double x1172 = -x1130;
  double x1173 = parms[67]*x1172;
  double x1174 = parms[66]*x1129 + x1173;
  double x1175 = parms[64]*x1118 + x1174;
  double x1176 = parms[62]*x1120 + parms[65]*x1123;
  double x1177 = x1175 + x1176;
  double x1178 = parms[67]*x1120;
  double x1179 = parms[69]*x1140;
  double x1180 = -x1118;
  double x1181 = parms[66]*x1180 + x1179;
  double x1182 = x1178 + x1181;
  double x1183 = parms[66]*x1153 + parms[68]*x1130;
  double x1184 = parms[63]*x1118 + x1183;
  double x1185 = parms[61]*x1120 + parms[64]*x1123;
  double x1186 = x1184 + x1185;
  double x1187 = parms[69]*x1129;
  double x1188 = parms[66]*x1123 + x1120*x139 + x1187;
  double x1189 = x1153*x1188;
  double x1190 = x1118*x1177 + x1129*x1182 + x1148*x1186 + x1189;
  double x1191 = x1154*x36 + x1166*x117 + x1168*x120 - 0.25700000000000001*x1171 + x1190;
  double x1192 = -x1122;
  double x1193 = -x1133;
  double x1194 = x1127*x1147 + x1137*x1152 + x1159*x1192 + x1162*x1193;
  double x1195 = x1130*x1188;
  double x1196 = parms[67]*x1140 + x1129*x139;
  double x1197 = parms[61]*x1118 + x1196;
  double x1198 = parms[62]*x1123;
  double x1199 = parms[60]*x1120 + x1198;
  double x1200 = x1197 + x1199;
  double x1201 = parms[67]*x1148;
  double x1202 = parms[69]*x1130;
  double x1203 = parms[68]*x1118 + x1202;
  double x1204 = x1201 + x1203;
  double x1205 = -x1129;
  double x1206 = x1120*x1186 + x1180*x1200 + x1195 + x1204*x1205;
  double x1207 = x1194 + x1206;
  double x1208 = parms[54]*x247 + x175*x30;
  double x1209 = x1129*x1208;
  double x1210 = parms[49]*x30 + parms[52]*x247 + parms[54]*x1129 + parms[56]*x199;
  double x1211 = x1118*x1210 + x1209;
  double x1212 = x1191*x47 + x1207*x82 + x1211;
  double x1213 = x1168*x36;
  double x1214 = -x1120;
  double x1215 = x1123*x1200 + x1140*x1204 + x1172*x1182 + x1177*x1214;
  double x1216 = -x1154*x50 - x1166*x36 - x1170*x120 - 0.25700000000000001*x1213 - x1215;
  double x1217 = x1208*x199;
  double x1218 = x1210*x30 + x1217;
  double x1219 = x1216 + x1218;
  double x1220 = x1123*x1204 + x1182*x1214;
  double x1221 = x1208*x30;
  double x1222 = -x1168*x50 - x1171 - x1220 + x1221;
  double x1223 = x1148*x1188;
  double x1224 = x1118*x1182 + x1223;
  double x1225 = x117*x1170 + x1213 + x1224;
  double x1226 = x1120*x1188;
  double x1227 = x1180*x1204 + x1226;
  double x1228 = x1127*x1152 + x1162*x1192 + x1227;
  double x1229 = x1118*x1208;
  double x1230 = x1225*x47 + x1228*x82 + x1229;
  double x1231 = x1230*x30;
  double x1232 = parms[40] + x1212*x25 + x1219*x30 + x1222*x199 - 0.40000000000000002*x1231;
  double x1233 = parms[55]*x1118;
  double x1234 = parms[57]*x199 + x1233;
  double x1235 = parms[48]*x30;
  double x1236 = parms[50]*x247 + parms[55]*x312 + x1235;
  double x1237 = parms[50]*x30;
  double x1238 = parms[53]*x247;
  double x1239 = -x199;
  double x1240 = parms[55]*x1239 + x1237 + x1238;
  double x1241 = -x30;
  double x1242 = parms[57]*x312;
  double x1243 = parms[55]*x30 + x1242;
  double x1244 = x1234*x312 + x1236*x247 + x1239*x1243 + x1240*x1241;
  double x1245 = x1191*x42 + x1207*x47 + x1244;
  double x1246 = -parms[37];
  double x1247 = x1245 + x1246;
  double x1248 = -x1232*x27 - x1247*x39;
  double x1249 = x1232*x24 + x1247*x27;
  double x1250 = x1212*x30 + x1219*x247 + x1222*x312 + x1230*x199;
  double x1251 = x1222*x247 + x1231;
  double x1252 = x1234*x247 + x1241*x1243;
  double x1253 = x24*(x1222*x30 + x1230*x25 + x306) + x27*(x1225*x42 + x1228*x47 + x1252 + x385);
  double x1254 = x0*(x1*x1249 + x1250*x259 + x1251*x288 + x1253*x272) + x10*x1248;
  double x1255 = -x1254;
  double x1256 = x294 + 1;
  double x1257 = x1256*x306 + x441 + x443;
  double x1258 = parms[40]*x1256 + x433 + x438;
  double x1259 = x25*x445;
  double x1260 = x30*x445;
  double x1261 = x199*x445 + x30*x446;
  double x1262 = x1256*x30 + x458;
  double x1263 = x1256*x247 + x461;
  double x1264 = x1256*x199 + x464 + x466;
  double x1265 = parms[50]*x1262 + parms[53]*x1263 + x1264*x379 + x456;
  double x1266 = x1256*x312 + x472 + x474;
  double x1267 = parms[55]*x1262 + parms[57]*x1266 + x477;
  double x1268 = x1259*x47 + x42*x435;
  double x1269 = -x1260;
  double x1270 = x1259*x82 + x435*x47;
  double x1271 = -0.40000000000000002*x1260 + x25*x446;
  double x1272 = x1271*x82 + x431*x47;
  double x1273 = -x1263;
  double x1274 = x1262*x47 + x494;
  double x1275 = x1262*x82 + x497;
  double x1276 = -x1266;
  double x1277 = x1264*x47 + x488;
  double x1278 = parms[62]*x1274 + parms[64]*x1273 + parms[65]*x1275 + parms[66]*x1276 + x1277*x332;
  double x1279 = x1264*x82 + x502;
  double x1280 = parms[67]*x1274 + parms[69]*x1279 + x1273*x336;
  double x1281 = x1268*x36 + x1269*x50;
  double x1282 = x1269*x36;
  double x1283 = x117*x1268 + x1282;
  double x1284 = x1273*x36;
  double x1285 = x117*x1274 + x1284;
  double x1286 = x1273*x50 + x1274*x36;
  double x1287 = x117*x1277 + x120*x1273 + x1274*x344 + x1276*x36;
  double x1288 = x120*x1274 + x1276*x50 + x1277*x36 + 0.25700000000000001*x1284;
  double x1289 = parms[74]*x1286 + parms[76]*x1285 + parms[77]*x1275 + parms[78]*x1287 + x1288*x75;
  double x1290 = parms[79]*x1286 + parms[81]*x1279 + x1285*x90;
  double x1291 = -x1261;
  double x1292 = x1271*x47 + x42*x431;
  double x1293 = x117*x1292 + x120*x1269 + x1268*x344 + x1291*x36;
  double x1294 = parms[73]*x1286 + parms[75]*x1285 + parms[76]*x1275 + parms[80]*x1288 + x1279*x90;
  double x1295 = -x1275;
  double x1296 = parms[78]*x1275 + parms[81]*x1287 + x100*x1286;
  double x1297 = -x1279;
  double x1298 = parms[72]*x1281 + parms[73]*x1283 + parms[74]*x1270 + parms[79]*x1272 + x100*x1293 + x1285*x1289 + x1287*x1290 + x1294*x1295 + x1296*x1297;
  double x1299 = parms[61]*x1274 + parms[63]*x1273 + parms[64]*x1275 + parms[68]*x1277 + x1279*x336;
  double x1300 = parms[66]*x1275 + parms[69]*x1276 + x1274*x139;
  double x1301 = x120*x1268 + 0.25700000000000001*x1282 + x1291*x50 + x1292*x36;
  double x1302 = parms[72]*x1286 + parms[73]*x1285 + parms[74]*x1275 + parms[79]*x1279 + x100*x1287;
  double x1303 = parms[80]*x1285 + parms[81]*x1288 + x1275*x75;
  double x1304 = -x1286;
  double x1305 = parms[73]*x1281 + parms[75]*x1283 + parms[76]*x1270 + parms[80]*x1301 + x1272*x90 + x1275*x1302 + x1279*x1303 - x1288*x1290 + x1289*x1304;
  double x1306 = parms[80]*x1283 + parms[81]*x1301 + x1270*x75 + x1285*x1290 + x1295*x1296;
  double x1307 = parms[78]*x1270 + parms[81]*x1293 + x100*x1281 + x1275*x1303 + x1290*x1304;
  double x1308 = parms[60]*x1268 + parms[61]*x1269 + parms[62]*x1270 + parms[67]*x1272 + x117*x1305 + x120*x1306 + x1273*x1278 + x1276*x1280 + x1291*x139 + x1295*x1299 + x1297*x1300 + x1298*x36 + x1307*x344;
  double x1309 = parms[49]*x1262 + parms[52]*x1263 + parms[56]*x1264 + x1266*x321 + x482;
  double x1310 = parms[54]*x1263 + x1262*x175 + x484;
  double x1311 = -x1285;
  double x1312 = parms[74]*x1281 + parms[76]*x1283 + parms[77]*x1270 + parms[78]*x1293 + x1286*x1294 - x1287*x1303 + x1288*x1296 + x1301*x75 + x1302*x1311;
  double x1313 = parms[60]*x1274 + parms[61]*x1273 + parms[62]*x1275 + parms[67]*x1279 + x1276*x139;
  double x1314 = -x1273;
  double x1315 = parms[68]*x1273 + parms[69]*x1277 + x1275*x332;
  double x1316 = parms[62]*x1268 + parms[64]*x1269 + parms[65]*x1270 + parms[66]*x1291 + x1274*x1299 - x1276*x1315 + x1277*x1300 + x1292*x332 + x1312 + x1313*x1314;
  double x1317 = parms[48]*x1259 + parms[49]*x435 + parms[50]*x1260 + parms[55]*x1261 + x1265*x437 + x1267*x440 + x1273*x1309 + x1276*x1310 + x1308*x47 + x1316*x82 + x175*x431;
  double x1318 = -x1274;
  double x1319 = x1306*x36;
  double x1320 = -parms[61]*x1268 - parms[63]*x1269 - parms[64]*x1270 - parms[68]*x1292 - x120*x1307 - x1272*x336 - x1275*x1313 + x1277*x1280 - x1278*x1318 - x1279*x1315 - x1298*x50 - x1305*x36 - 0.25700000000000001*x1319;
  double x1321 = parms[48]*x1262 + parms[50]*x1263 + parms[55]*x1266 + x585;
  double x1322 = parms[57]*x1264 + x1263*x379 + x589;
  double x1323 = parms[50]*x1259 + parms[52]*x435 + parms[53]*x1260 + parms[54]*x431 + x1262*x1309 + x1264*x1310 + x1271*x379 + x1320 + x1321*x445 + x1322*x446;
  double x1324 = parms[39]*x1256 + x447 + x449;
  double x1325 = parms[54]*x629 + parms[55]*x1259 + parms[57]*x1261 - parms[66]*x1270 - parms[69]*x1291 + x1262*x1310 - x1268*x139 - x1275*x1315 - x1280*x1318 - x1306*x50 - x1307*x36 + x1322*x445;
  double x1326 = parms[68]*x1269 + parms[69]*x1292 + x117*x1307 + x1270*x332 + x1273*x1280 + x1295*x1300 + x1319;
  double x1327 = parms[67]*x1268 + parms[69]*x1272 + parms[79]*x1281 + parms[81]*x1272 + x1269*x336 + x1274*x1300 + x1283*x90 + x1286*x1296 + x1303*x1311 + x1314*x1315;
  double x1328 = parms[56]*x435 + parms[57]*x1271 + x1260*x379 + x1267*x437 + x1273*x1310 + x1326*x47 + x1327*x82;
  double x1329 = x1328*x30;
  double x1330 = parms[36]*x445 + parms[43]*x431 + x1256*x1258 + x1257*x299 + x1317*x25 + x1323*x30 + x1324*x445 + x1325*x199 - 0.40000000000000002*x1329 + x436 + x453;
  double x1331 = -x1262;
  double x1332 = parms[49]*x1259 + parms[51]*x435 + parms[52]*x1260 + parms[56]*x1271 + x1261*x321 + x1263*x1321 - x1264*x1267 + x1265*x1331 + x1266*x1322 + x1308*x42 + x1316*x47;
  double x1333 = x617 + x619;
  double x1334 = parms[44]*x1256 + x1333;
  double x1335 = parms[37]*x1256 + x613 + x615;
  double x1336 = -x1256;
  double x1337 = parms[38]*x445 + parms[41]*x435 + x1324*x435 + x1332 + x1334*x425 + x1335*x1336 + x301*x446 + x612;
  double x1338 = x1330*x24 + x1337*x27 + x430;
  double x1339 = parms[37]*x445 + parms[40]*x435 + parms[42]*x432 + parms[44]*x446 + x1257*x432 + x1258*x629 + x1317*x30 + x1323*x247 + x1325*x312 + x1328*x199 + x1334*x440 + x1335*x437;
  double x1340 = x1339 + x628;
  double x1341 = x24*(parms[45]*x446 + x1256*x1257 + x1325*x30 + x1328*x25 - x443 + x634) + x27*(parms[54]*x1260 + parms[57]*x431 + x1259*x175 + x1263*x1322 + x1267*x1331 + x1326*x42 + x1327*x47 + x1333 + x1334*x1336 + x636) + x639;
  double x1342 = parms[42]*x435 + x1257*x629 + x1325*x247 + x1329 + x1334*x437 + x385*x445 + x642;
  double x1343 = -x1330*x27 - x1337*x39 - x654;
  double x1344 = x25*x39;
  double x1345 = x30*x39;
  double x1346 = x199*x39;
  double x1347 = x30 + x773;
  double x1348 = x247 + x762;
  double x1349 = x199 + x766;
  double x1350 = parms[50]*x1347 + parms[53]*x1348 + x1349*x379 + x860;
  double x1351 = x1344*x47 + x42*x761;
  double x1352 = -x1345;
  double x1353 = x1344*x82 + x47*x761;
  double x1354 = -0.40000000000000002*x1345;
  double x1355 = x1354*x82;
  double x1356 = -x1348;
  double x1357 = x1347*x47 + x772;
  double x1358 = x1347*x82 + x776;
  double x1359 = x312 + x764;
  double x1360 = -x1359;
  double x1361 = x1349*x47;
  double x1362 = parms[62]*x1357 + parms[64]*x1356 + parms[65]*x1358 + parms[66]*x1360 + x1361*x332;
  double x1363 = x1349*x82;
  double x1364 = parms[67]*x1357 + parms[69]*x1363 + x1356*x336;
  double x1365 = x1351*x36 + x1352*x50;
  double x1366 = x1352*x36;
  double x1367 = x117*x1351 + x1366;
  double x1368 = x1356*x36;
  double x1369 = x117*x1357 + x1368;
  double x1370 = x1356*x50 + x1357*x36;
  double x1371 = x117*x1361 + x120*x1356 + x1357*x344 + x1360*x36;
  double x1372 = x120*x1357 + x1360*x50 + x1361*x36 + 0.25700000000000001*x1368;
  double x1373 = parms[74]*x1370 + parms[76]*x1369 + parms[77]*x1358 + parms[78]*x1371 + x1372*x75;
  double x1374 = parms[79]*x1370 + parms[81]*x1363 + x1369*x90;
  double x1375 = -x1346;
  double x1376 = x1354*x47;
  double x1377 = x117*x1376 + x120*x1352 + x1351*x344 + x1375*x36;
  double x1378 = parms[73]*x1370 + parms[75]*x1369 + parms[76]*x1358 + parms[80]*x1372 + x1363*x90;
  double x1379 = -x1358;
  double x1380 = parms[78]*x1358 + parms[81]*x1371 + x100*x1370;
  double x1381 = -x1363;
  double x1382 = parms[72]*x1365 + parms[73]*x1367 + parms[74]*x1353 + parms[79]*x1355 + x100*x1377 + x1369*x1373 + x1371*x1374 + x1378*x1379 + x1380*x1381;
  double x1383 = parms[61]*x1357 + parms[63]*x1356 + parms[64]*x1358 + parms[68]*x1361 + x1363*x336;
  double x1384 = parms[66]*x1358 + parms[69]*x1360 + x1357*x139;
  double x1385 = x120*x1351 + 0.25700000000000001*x1366 + x1375*x50 + x1376*x36;
  double x1386 = parms[72]*x1370 + parms[73]*x1369 + parms[74]*x1358 + parms[79]*x1363 + x100*x1371;
  double x1387 = parms[80]*x1369 + parms[81]*x1372 + x1358*x75;
  double x1388 = -x1370;
  double x1389 = parms[73]*x1365 + parms[75]*x1367 + parms[76]*x1353 + parms[80]*x1385 + x1355*x90 + x1358*x1386 + x1363*x1387 - x1372*x1374 + x1373*x1388;
  double x1390 = parms[80]*x1367 + parms[81]*x1385 + x1353*x75 + x1369*x1374 + x1379*x1380;
  double x1391 = parms[78]*x1353 + parms[81]*x1377 + x100*x1365 + x1358*x1387 + x1374*x1388;
  double x1392 = parms[60]*x1351 + parms[61]*x1352 + parms[62]*x1353 + parms[67]*x1355 + x117*x1389 + x120*x1390 + x1356*x1362 + x1360*x1364 + x1375*x139 + x1379*x1383 + x1381*x1384 + x1382*x36 + x1391*x344;
  double x1393 = parms[49]*x1347 + parms[52]*x1348 + parms[56]*x1349 + x1359*x321 + x865;
  double x1394 = parms[54]*x1348 + x1347*x175;
  double x1395 = -x1369;
  double x1396 = parms[74]*x1365 + parms[76]*x1367 + parms[77]*x1353 + parms[78]*x1377 + x1370*x1378 - x1371*x1387 + x1372*x1380 + x1385*x75 + x1386*x1395;
  double x1397 = parms[60]*x1357 + parms[61]*x1356 + parms[62]*x1358 + parms[67]*x1363 + x1360*x139;
  double x1398 = -x1356;
  double x1399 = parms[68]*x1356 + parms[69]*x1361 + x1358*x332;
  double x1400 = parms[62]*x1351 + parms[64]*x1352 + parms[65]*x1353 + parms[66]*x1375 + x1357*x1383 - x1360*x1399 + x1361*x1384 + x1376*x332 + x1396 + x1397*x1398;
  double x1401 = parms[48]*x1344 + parms[49]*x761 + parms[50]*x1345 + parms[55]*x1346 + x1350*x24 + x1356*x1393 + x1360*x1394 + x1392*x47 + x1400*x82;
  double x1402 = -x1357;
  double x1403 = x1390*x36;
  double x1404 = -parms[61]*x1351 - parms[63]*x1352 - parms[64]*x1353 - parms[68]*x1376 - x120*x1391 - x1355*x336 - x1358*x1397 + x1361*x1364 - x1362*x1402 - x1363*x1399 - x1382*x50 - x1389*x36 - 0.25700000000000001*x1403;
  double x1405 = parms[48]*x1347 + parms[50]*x1348 + parms[55]*x1359 + x877;
  double x1406 = parms[50]*x1344 + parms[52]*x761 + parms[53]*x1345 + x1347*x1393 + x1349*x1394 + x1354*x379 + x1404 + x1405*x39;
  double x1407 = parms[39] + x882;
  double x1408 = parms[57]*x1349 + x1348*x379 + x886;
  double x1409 = parms[55]*x1344 + parms[57]*x1346 - parms[66]*x1353 - parms[69]*x1375 + x1347*x1394 - x1351*x139 - x1358*x1399 - x1364*x1402 - x1390*x50 - x1391*x36 + x1408*x39 + x321*x761;
  double x1410 = parms[55]*x1347 + parms[57]*x1359 + x897;
  double x1411 = parms[68]*x1352 + parms[69]*x1376 + x117*x1391 + x1353*x332 + x1356*x1364 + x1379*x1384 + x1403;
  double x1412 = parms[67]*x1351 + parms[69]*x1355 + parms[79]*x1365 + parms[81]*x1355 + x1352*x336 + x1357*x1384 + x1367*x90 + x1370*x1380 + x1387*x1395 + x1398*x1399;
  double x1413 = parms[56]*x761 + parms[57]*x1354 + x1345*x379 + x1356*x1394 + x1410*x24 + x1411*x47 + x1412*x82;
  double x1414 = x1413*x30;
  double x1415 = parms[36]*x39 + parms[40] + x1401*x25 + x1406*x30 + x1407*x39 + x1409*x199 - 0.40000000000000002*x1414 + 2*x916 + x917;
  double x1416 = -x1347;
  double x1417 = parms[49]*x1344 + parms[51]*x761 + parms[52]*x1345 + parms[56]*x1354 + x1346*x321 + x1348*x1405 - x1349*x1410 + x1350*x1416 + x1359*x1408 + x1392*x42 + x1400*x47;
  double x1418 = 2*parms[38]*x39 + parms[41]*x761 + x1246 + x1407*x761 + x1417 - x914;
  double x1419 = -x1415*x27 - x1418*x39;
  double x1420 = parms[28] + x1415*x24 + x1418*x27;
  double x1421 = parms[37]*x39 + parms[40]*x761 + x1401*x30 + x1406*x247 + x1409*x312 + x1413*x199 + x24*(parms[37] + x915) + x919*(parms[40] + x918);
  double x1422 = x1421 + x922;
  double x1423 = parms[43]*x39;
  double x1424 = x24*(x1409*x30 + x1413*x25 + x306 + x925) + x27*(parms[43]*x24 + parms[54]*x1345 + x1344*x175 + x1348*x1408 + x1410*x1416 + x1411*x42 + x1412*x47 + x1423 + x385 + x927) + x403;
  double x1425 = parms[42]*x761 + x1409*x247 + x1414 + x24*(parms[44] + x1423) + x385*x39 + x405 + x919*(parms[43]*x761 + x306);
  double x1426 = x41 + 1;
  double x1427 = x1426*x321 + x169;
  double x1428 = parms[52]*x1426 + x160 + x164;
  double x1429 = x35*x47;
  double x1430 = x35*x82;
  double x1431 = x62*x82;
  double x1432 = x1429*x36 + x230*x50;
  double x1433 = x230*x36;
  double x1434 = x117*x1429 + x1433;
  double x1435 = x1426*x42 + x48;
  double x1436 = x117*x1435 + x37;
  double x1437 = x1435*x36 + x55;
  double x1438 = x1426*x47 + x83;
  double x1439 = x1435*x344 + x72;
  double x1440 = x120*x1435 + x77;
  double x1441 = parms[74]*x1437 + parms[76]*x1436 + parms[77]*x1438 + parms[78]*x1439 + x1440*x75;
  double x1442 = parms[79]*x1437 + x1436*x90 + x89;
  double x1443 = x47*x62;
  double x1444 = x117*x1443 + x120*x230 + x1429*x344 + x163*x36;
  double x1445 = parms[73]*x1437 + parms[75]*x1436 + parms[76]*x1438 + parms[80]*x1440 + x94;
  double x1446 = -x1438;
  double x1447 = parms[78]*x1438 + parms[81]*x1439 + x100*x1437;
  double x1448 = parms[72]*x1432 + parms[73]*x1434 + parms[74]*x1430 + parms[79]*x1431 + x100*x1444 + x1436*x1441 + x1439*x1442 + x1445*x1446 + x1447*x98;
  double x1449 = parms[62]*x1435 + parms[65]*x1438 + x126;
  double x1450 = parms[67]*x1435 + x132;
  double x1451 = parms[61]*x1435 + parms[64]*x1438 + x135;
  double x1452 = x120*x1429 + 0.25700000000000001*x1433 + x1443*x36 + x163*x50;
  double x1453 = parms[72]*x1437 + parms[73]*x1436 + parms[74]*x1438 + x100*x1439 + x105;
  double x1454 = parms[80]*x1436 + parms[81]*x1440 + x1438*x75;
  double x1455 = -x1437;
  double x1456 = parms[73]*x1432 + parms[75]*x1434 + parms[76]*x1430 + parms[80]*x1452 + x1431*x90 + x1438*x1453 - x1440*x1442 + x1441*x1455 + x1454*x88;
  double x1457 = parms[66]*x1438 + x138 + x139*x1435;
  double x1458 = parms[80]*x1434 + parms[81]*x1452 + x1430*x75 + x1436*x1442 + x1446*x1447;
  double x1459 = parms[78]*x1430 + parms[81]*x1444 + x100*x1432 + x1438*x1454 + x1442*x1455;
  double x1460 = parms[60]*x1429 + parms[61]*x230 + parms[62]*x1430 + parms[67]*x1431 + x117*x1456 + x120*x1458 + x139*x163 + x1446*x1451 + x1448*x36 + x1449*x35 + x1450*x62 + x1457*x98 + x1459*x344;
  double x1461 = parms[51]*x1426 + x172;
  double x1462 = -x1436;
  double x1463 = parms[74]*x1432 + parms[76]*x1434 + parms[77]*x1430 + parms[78]*x1444 + x1437*x1445 - x1439*x1454 + x1440*x1447 + x1452*x75 + x1453*x1462;
  double x1464 = parms[60]*x1435 + parms[62]*x1438 + x149;
  double x1465 = x1438*x332 + x155;
  double x1466 = parms[62]*x1429 + parms[64]*x230 + parms[65]*x1430 + parms[66]*x163 + x131*x1464 + x1435*x1451 + x1443*x332 + x1457*x69 + x1463 + x1465*x157;
  double x1467 = parms[48]*x35 + parms[55]*x68 + x1426*x1428 + x1427*x63 + x1460*x47 + x1461*x35 + x1466*x82 + x162 + x177;
  double x1468 = -x1435;
  double x1469 = x1458*x36;
  double x1470 = -parms[61]*x1429 - parms[63]*x230 - parms[64]*x1430 - parms[68]*x1443 - x120*x1459 - x1431*x336 - x1438*x1464 - x1448*x50 - x1449*x1468 - x1450*x70 - x1456*x36 - x1465*x88 - 0.25700000000000001*x1469;
  double x1471 = parms[56]*x1426 + x190;
  double x1472 = parms[49]*x1426 + x185 + x187;
  double x1473 = -x1426;
  double x1474 = parms[50]*x35 + parms[53]*x46 + x1461*x46 + x1470 + x1471*x192 + x1472*x1473 + x184 + x379*x62;
  double x1475 = -parms[66]*x1430 - parms[69]*x163 - x139*x1429 - x1438*x1465 - x1450*x1468 - x1458*x50 - x1459*x36 + x1471*x1473 + x190 + x196;
  double x1476 = parms[68]*x230 + parms[69]*x1443 + x117*x1459 + x1430*x332 + x1446*x1457 + x1450*x35 + x1469;
  double x1477 = parms[67]*x1429 + parms[69]*x1431 + parms[79]*x1432 + parms[81]*x1431 + x131*x1465 + x1434*x90 + x1435*x1457 + x1437*x1447 + x1454*x1462 + x230*x336;
  double x1478 = parms[57]*x62 + x1426*x1427 + x1476*x47 + x1477*x82 - x168 + x206;
  double x1479 = x1478*x30;
  double x1480 = x1467*x25 + x1474*x30 + x1475*x199 - 0.40000000000000002*x1479 + x228;
  double x1481 = parms[49]*x35 + parms[52]*x46 + parms[54]*x163 + parms[56]*x62 + x1427*x163 + x1428*x230 + x1460*x42 + x1466*x47 + x1471*x61 + x1472*x34;
  double x1482 = x1481 + x242;
  double x1483 = x1480*x24 + x1482*x27 + x23;
  double x1484 = x1467*x30 + x1474*x247 + x1475*x312 + x1478*x199 + x249;
  double x1485 = x1484 + x257;
  double x1486 = x24*(x1475*x30 + x1478*x25 + x267) + x265 + x27*(parms[54]*x46 + parms[56]*x131 + x1427*x230 + x1471*x34 + x1476*x42 + x1477*x47 + x270);
  double x1487 = x1475*x247 + x1479 + x277 + x278;
  double x1488 = -x1480*x27 - x1482*x39 - x280;
  double x1489 = x50*x82;
  double x1490 = parms[77]*x47;
  double x1491 = x36*x42;
  double x1492 = -0.25700000000000001*x1491;
  double x1493 = x120*x42;
  double x1494 = parms[74]*x1491 + parms[76]*x1489 + parms[78]*x1492 + x1493*x75;
  double x1495 = x1490 + x1494;
  double x1496 = parms[79]*x1491 + x1489*x90;
  double x1497 = x1492*x1496;
  double x1498 = parms[76]*x47;
  double x1499 = parms[73]*x1491 + parms[75]*x1489 + parms[80]*x1493;
  double x1500 = x1498 + x1499;
  double x1501 = -x47;
  double x1502 = x1489*x1495 + x1497 + x1500*x1501;
  double x1503 = parms[74]*x47;
  double x1504 = parms[73]*x1489;
  double x1505 = parms[72]*x1491 + x100*x1492 + x1504;
  double x1506 = x1503 + x1505;
  double x1507 = -x1491;
  double x1508 = -x1493;
  double x1509 = x1496*x1508;
  double x1510 = x1495*x1507 + x1506*x47 + x1509;
  double x1511 = parms[61]*x42 + parms[64]*x47;
  double x1512 = x1501*x1511;
  double x1513 = x1489*x1496;
  double x1514 = parms[78]*x47;
  double x1515 = parms[81]*x1492;
  double x1516 = x100*x1491 + x1515;
  double x1517 = x1514 + x1516;
  double x1518 = x1501*x1517 + x1513;
  double x1519 = x47*x75;
  double x1520 = parms[80]*x1489 + parms[81]*x1493;
  double x1521 = x1519 + x1520;
  double x1522 = x1496*x1507;
  double x1523 = x1521*x47 + x1522;
  double x1524 = x1523*x36;
  double x1525 = x117*x1510 + x120*x1518 + x1502*x36 + x1512 - 0.25700000000000001*x1524;
  double x1526 = -x1489;
  double x1527 = -x1492;
  double x1528 = x1491*x1500 + x1493*x1517 + x1506*x1526 + x1521*x1527;
  double x1529 = x1511*x42;
  double x1530 = x1528 + x1529;
  double x1531 = parms[52] + x1525*x47 + x1530*x82;
  double x1532 = x1518*x36;
  double x1533 = parms[60]*x42;
  double x1534 = parms[62]*x47;
  double x1535 = x1533 + x1534;
  double x1536 = parms[62]*x42 + parms[65]*x47;
  double x1537 = x1535*x47 + x1536*x82;
  double x1538 = -x120*x1523 - x1502*x50 - x1510*x36 - 0.25700000000000001*x1532 - x1537;
  double x1539 = -parms[49];
  double x1540 = x1538 + x1539;
  double x1541 = x332*((x42)*(x42)) + x332*((x47)*(x47));
  double x1542 = -x1518*x50 - x1524 - x1541 + x175;
  double x1543 = parms[66]*x47 + parms[68]*x82;
  double x1544 = x1501*x1543;
  double x1545 = x117*x1523 + x1532 + x1544;
  double x1546 = x1543*x42;
  double x1547 = x1491*x1517 + x1521*x1526 + x1546;
  double x1548 = x1545*x47 + x1547*x82 + x321;
  double x1549 = x1548*x30;
  double x1550 = x1531*x25 + x1540*x30 + x1542*x199 - 0.40000000000000002*x1549;
  double x1551 = x1525*x42 + x1530*x47;
  double x1552 = -x1550*x27 - x1551*x39;
  double x1553 = x1550*x24 + x1551*x27;
  double x1554 = x1531*x30 + x1540*x247 + x1542*x312 + x1548*x199;
  double x1555 = x1542*x247 + x1549;
  double x1556 = x24*(x1542*x30 + x1548*x25) + x27*(x1545*x42 + x1547*x47);
  double x1557 = x0*(x1*x1553 + x1554*x259 + x1555*x288 + x1556*x272) + x10*x1552;
  double x1558 = -x1557;
  double x1559 = x437 + 1;
  double x1560 = x1559*x321 + x476;
  double x1561 = parms[52]*x1559 + x455 + x469;
  double x1562 = x47*x479;
  double x1563 = x479*x82;
  double x1564 = x480*x82;
  double x1565 = x1559*x42 + x495;
  double x1566 = x1559*x47 + x498;
  double x1567 = parms[62]*x1565 + parms[65]*x1566 + x493;
  double x1568 = parms[67]*x1565 + x506;
  double x1569 = x1562*x36 + x50*x622;
  double x1570 = x36*x622;
  double x1571 = x117*x1562 + x1570;
  double x1572 = x117*x1565 + x519;
  double x1573 = x1565*x36 + x524;
  double x1574 = x1565*x344 + x528;
  double x1575 = x120*x1565 + x532;
  double x1576 = parms[74]*x1573 + parms[76]*x1572 + parms[77]*x1566 + parms[78]*x1574 + x1575*x75;
  double x1577 = parms[79]*x1573 + x1572*x90 + x536;
  double x1578 = x47*x480;
  double x1579 = x117*x1578 + x120*x622 + x1562*x344 + x36*x468;
  double x1580 = parms[78]*x1566 + parms[81]*x1574 + x100*x1573;
  double x1581 = parms[73]*x1573 + parms[75]*x1572 + parms[76]*x1566 + parms[80]*x1575 + x539;
  double x1582 = -x1566;
  double x1583 = parms[72]*x1569 + parms[73]*x1571 + parms[74]*x1563 + parms[79]*x1564 + x100*x1579 + x1572*x1576 + x1574*x1577 + x1580*x510 + x1581*x1582;
  double x1584 = parms[66]*x1566 + x139*x1565 + x515;
  double x1585 = parms[61]*x1565 + parms[64]*x1566 + x512;
  double x1586 = x120*x1562 + 0.25700000000000001*x1570 + x1578*x36 + x468*x50;
  double x1587 = parms[80]*x1572 + parms[81]*x1575 + x1566*x75;
  double x1588 = parms[72]*x1573 + parms[73]*x1572 + parms[74]*x1566 + x100*x1574 + x548;
  double x1589 = -x1573;
  double x1590 = parms[73]*x1569 + parms[75]*x1571 + parms[76]*x1563 + parms[80]*x1586 + x1564*x90 + x1566*x1588 - x1575*x1577 + x1576*x1589 + x1587*x503;
  double x1591 = parms[80]*x1571 + parms[81]*x1586 + x1563*x75 + x1572*x1577 + x1580*x1582;
  double x1592 = parms[78]*x1563 + parms[81]*x1579 + x100*x1569 + x1566*x1587 + x1577*x1589;
  double x1593 = parms[60]*x1562 + parms[61]*x622 + parms[62]*x1563 + parms[67]*x1564 + x117*x1590 + x120*x1591 + x139*x468 + x1567*x479 + x1568*x480 + x1582*x1585 + x1583*x36 + x1584*x510 + x1592*x344;
  double x1594 = parms[51]*x1559 + x481;
  double x1595 = -x1572;
  double x1596 = parms[74]*x1569 + parms[76]*x1571 + parms[77]*x1563 + parms[78]*x1579 + x1573*x1581 - x1574*x1587 + x1575*x1580 + x1586*x75 + x1588*x1595;
  double x1597 = parms[60]*x1565 + parms[62]*x1566 + x571;
  double x1598 = x1566*x332 + x577;
  double x1599 = parms[62]*x1562 + parms[64]*x622 + parms[65]*x1563 + parms[66]*x468 + x1565*x1585 + x1578*x332 + x1584*x489 + x1596 + x1597*x505 + x1598*x575;
  double x1600 = parms[48]*x479 + parms[55]*x467 + x1559*x1561 + x1560*x440 + x1593*x47 + x1594*x479 + x1599*x82 + x460 + x486;
  double x1601 = -x1565;
  double x1602 = x1591*x36;
  double x1603 = -parms[61]*x1562 - parms[63]*x622 - parms[64]*x1563 - parms[68]*x1578 - x120*x1592 - x1564*x336 - x1566*x1597 - x1567*x1601 - x1568*x490 - x1583*x50 - x1590*x36 - x1598*x503 - 0.25700000000000001*x1602;
  double x1604 = parms[56]*x1559 + x588;
  double x1605 = parms[49]*x1559 + x584 + x586;
  double x1606 = -x1559;
  double x1607 = parms[50]*x479 + parms[53]*x459 + x1594*x459 + x1603 + x1604*x446 + x1605*x1606 + x379*x480 + x583;
  double x1608 = -parms[66]*x1563 - parms[69]*x468 - x139*x1562 - x1566*x1598 - x1568*x1601 - x1591*x50 - x1592*x36 + x1604*x1606 + x588 + x597;
  double x1609 = parms[68]*x622 + parms[69]*x1578 + x117*x1592 + x1563*x332 + x1568*x479 + x1582*x1584 + x1602;
  double x1610 = parms[67]*x1562 + parms[69]*x1564 + parms[79]*x1569 + parms[81]*x1564 + x1565*x1584 + x1571*x90 + x1573*x1580 + x1587*x1595 + x1598*x505 + x336*x622;
  double x1611 = parms[57]*x480 + x1559*x1560 + x1609*x47 + x1610*x82 - x471 + x601;
  double x1612 = x1611*x30;
  double x1613 = x1600*x25 + x1607*x30 + x1608*x199 - 0.40000000000000002*x1612 + x454;
  double x1614 = parms[49]*x479 + parms[52]*x459 + parms[54]*x468 + parms[56]*x480 + x1560*x468 + x1561*x622 + x1593*x42 + x1599*x47 + x1604*x475 + x1605*x463;
  double x1615 = x1614 + x621;
  double x1616 = x1613*x24 + x1615*x27 + x430;
  double x1617 = x1600*x30 + x1607*x247 + x1608*x312 + x1611*x199 + x630;
  double x1618 = x1617 + x628;
  double x1619 = x24*(x1608*x30 + x1611*x25 + x635) + x27*(parms[54]*x459 + x1560*x622 + x1604*x463 + x1609*x42 + x1610*x47 + x175*x479 + x637) + x639;
  double x1620 = x1608*x247 + x1612 + x641 + x642;
  double x1621 = -x1613*x27 - x1615*x39 - x654;
  double x1622 = x24 + 1;
  double x1623 = parms[52]*x1622 + x863;
  double x1624 = x47*x763;
  double x1625 = x763*x82;
  double x1626 = x765*x82;
  double x1627 = x1624*x36 + x50*x906;
  double x1628 = x36*x906;
  double x1629 = x117*x1624 + x1628;
  double x1630 = x1622*x42 + x774;
  double x1631 = x117*x1630 + x797;
  double x1632 = x1630*x36 + x801;
  double x1633 = x1622*x47 + x777;
  double x1634 = x1630*x344 + x804;
  double x1635 = x120*x1630 + x808;
  double x1636 = parms[74]*x1632 + parms[76]*x1631 + parms[77]*x1633 + parms[78]*x1634 + x1635*x75;
  double x1637 = parms[79]*x1632 + x1631*x90 + x814;
  double x1638 = x47*x765;
  double x1639 = x117*x1638 + x120*x906 + x1624*x344 + x36*x862;
  double x1640 = parms[73]*x1632 + parms[75]*x1631 + parms[76]*x1633 + parms[80]*x1635 + x817;
  double x1641 = -x1633;
  double x1642 = parms[78]*x1633 + parms[81]*x1634 + x100*x1632;
  double x1643 = parms[72]*x1627 + parms[73]*x1629 + parms[74]*x1625 + parms[79]*x1626 + x100*x1639 + x1631*x1636 + x1634*x1637 + x1640*x1641 + x1642*x788;
  double x1644 = parms[62]*x1630 + parms[65]*x1633 + x771;
  double x1645 = parms[67]*x1630 + x784;
  double x1646 = parms[61]*x1630 + parms[64]*x1633 + x790;
  double x1647 = x120*x1624 + 0.25700000000000001*x1628 + x1638*x36 + x50*x862;
  double x1648 = parms[72]*x1632 + parms[73]*x1631 + parms[74]*x1633 + x100*x1634 + x826;
  double x1649 = parms[80]*x1631 + parms[81]*x1635 + x1633*x75;
  double x1650 = -x1632;
  double x1651 = parms[73]*x1627 + parms[75]*x1629 + parms[76]*x1625 + parms[80]*x1647 + x1626*x90 + x1633*x1648 - x1635*x1637 + x1636*x1650 + x1649*x781;
  double x1652 = parms[66]*x1633 + x139*x1630 + x793;
  double x1653 = parms[80]*x1629 + parms[81]*x1647 + x1625*x75 + x1631*x1637 + x1641*x1642;
  double x1654 = parms[78]*x1625 + parms[81]*x1639 + x100*x1627 + x1633*x1649 + x1637*x1650;
  double x1655 = parms[60]*x1624 + parms[61]*x906 + parms[62]*x1625 + parms[67]*x1626 + x117*x1651 + x120*x1653 + x139*x862 + x1641*x1646 + x1643*x36 + x1644*x763 + x1645*x765 + x1652*x788 + x1654*x344;
  double x1656 = -x1631;
  double x1657 = parms[74]*x1627 + parms[76]*x1629 + parms[77]*x1625 + parms[78]*x1639 + x1632*x1640 - x1634*x1649 + x1635*x1642 + x1647*x75 + x1648*x1656;
  double x1658 = parms[60]*x1630 + parms[62]*x1633 + x846;
  double x1659 = x1633*x332 + x852;
  double x1660 = parms[62]*x1624 + parms[64]*x906 + parms[65]*x1625 + parms[66]*x862 + x1630*x1646 + x1638*x332 + x1652*x767 + x1657 + x1658*x783 + x1659*x854;
  double x1661 = parms[51]*x1622 + x866;
  double x1662 = parms[48]*x763 + parms[55]*x766 + x1622*x1623 + x1655*x47 + x1660*x82 + x1661*x763 + x861 + x869;
  double x1663 = -x1630;
  double x1664 = x1653*x36;
  double x1665 = -parms[61]*x1624 - parms[63]*x906 - parms[64]*x1625 - parms[68]*x1638 - x120*x1654 - x1626*x336 - x1633*x1658 - x1643*x50 - x1644*x1663 - x1645*x768 - x1651*x36 - x1659*x781 - 0.25700000000000001*x1664;
  double x1666 = parms[49]*x1622 + x878;
  double x1667 = -x1622;
  double x1668 = parms[50]*x763 + parms[53]*x773 + x1661*x773 + x1665 + x1666*x1667 + x379*x765 + x876;
  double x1669 = parms[56]*x1622 + x887;
  double x1670 = -parms[66]*x1625 - parms[69]*x862 - x139*x1624 - x1633*x1659 - x1645*x1663 - x1653*x50 - x1654*x36 + x1667*x1669 + x885 + x887;
  double x1671 = x1622*x321 + x899;
  double x1672 = parms[68]*x906 + parms[69]*x1638 + x117*x1654 + x1625*x332 + x1641*x1652 + x1645*x763 + x1664;
  double x1673 = parms[67]*x1624 + parms[69]*x1626 + parms[79]*x1627 + parms[81]*x1626 + x1629*x90 + x1630*x1652 + x1632*x1642 + x1649*x1656 + x1659*x783 + x336*x906;
  double x1674 = parms[57]*x765 + x1622*x1671 + x1672*x47 + x1673*x82 - x898 + x901;
  double x1675 = x1674*x30;
  double x1676 = x1662*x25 + x1668*x30 + x1670*x199 - 0.40000000000000002*x1675 + x883;
  double x1677 = parms[49]*x763 + parms[52]*x773 + parms[54]*x862 + parms[56]*x765 + x1623*x906 + x1655*x42 + x1660*x47 + x1666*x762 + x1669*x764 + x1671*x862;
  double x1678 = x1677 + x909;
  double x1679 = -x1676*x27 - x1678*x39;
  double x1680 = parms[28] + x1676*x24 + x1678*x27;
  double x1681 = x1662*x30 + x1668*x247 + x1670*x312 + x1674*x199 + x920;
  double x1682 = x1681 + x922;
  double x1683 = x24*(x1670*x30 + x1674*x25 + x925) + x27*(parms[54]*x773 + x1669*x762 + x1671*x906 + x1672*x42 + x1673*x47 + x175*x763 + x927) + x403;
  double x1684 = x1670*x247 + x1675 + x405 + x929;
  double x1685 = x1118*x47;
  double x1686 = x1118*x82;
  double x1687 = x1129*x82;
  double x1688 = x1120 + x42;
  double x1689 = x1123 + x47;
  double x1690 = parms[62]*x1688 + parms[65]*x1689 + x1175;
  double x1691 = parms[67]*x1688 + x1181;
  double x1692 = x1241*x50 + x1685*x36;
  double x1693 = x1241*x36;
  double x1694 = x117*x1685 + x1693;
  double x1695 = x1119 + x117*x1688;
  double x1696 = x1126 + x1688*x36;
  double x1697 = x1132 + x1688*x344;
  double x1698 = x1136 + x120*x1688;
  double x1699 = parms[74]*x1696 + parms[76]*x1695 + parms[77]*x1689 + parms[78]*x1697 + x1698*x75;
  double x1700 = parms[79]*x1696 + x1141 + x1695*x90;
  double x1701 = x1129*x47;
  double x1702 = x117*x1701 + x120*x1241 + x1239*x36 + x1685*x344;
  double x1703 = parms[78]*x1689 + parms[81]*x1697 + x100*x1696;
  double x1704 = parms[73]*x1696 + parms[75]*x1695 + parms[76]*x1689 + parms[80]*x1698 + x1144;
  double x1705 = -x1689;
  double x1706 = parms[72]*x1692 + parms[73]*x1694 + parms[74]*x1686 + parms[79]*x1687 + x100*x1702 + x1153*x1703 + x1695*x1699 + x1697*x1700 + x1704*x1705;
  double x1707 = parms[66]*x1689 + x1187 + x139*x1688;
  double x1708 = parms[61]*x1688 + parms[64]*x1689 + x1184;
  double x1709 = x120*x1685 + x1239*x50 + 0.25700000000000001*x1693 + x1701*x36;
  double x1710 = parms[80]*x1695 + parms[81]*x1698 + x1689*x75;
  double x1711 = parms[72]*x1696 + parms[73]*x1695 + parms[74]*x1689 + x100*x1697 + x1155;
  double x1712 = -x1696;
  double x1713 = parms[73]*x1692 + parms[75]*x1694 + parms[76]*x1686 + parms[80]*x1709 + x1140*x1710 + x1687*x90 + x1689*x1711 - x1698*x1700 + x1699*x1712;
  double x1714 = parms[80]*x1694 + parms[81]*x1709 + x1686*x75 + x1695*x1700 + x1703*x1705;
  double x1715 = parms[78]*x1686 + parms[81]*x1702 + x100*x1692 + x1689*x1710 + x1700*x1712;
  double x1716 = parms[60]*x1685 + parms[61]*x1241 + parms[62]*x1686 + parms[67]*x1687 + x1118*x1690 + x1129*x1691 + x1153*x1707 + x117*x1713 + x120*x1714 + x1239*x139 + x1705*x1708 + x1706*x36 + x1715*x344;
  double x1717 = parms[51] + x1210;
  double x1718 = -x1695;
  double x1719 = parms[74]*x1692 + parms[76]*x1694 + parms[77]*x1686 + parms[78]*x1702 + x1696*x1704 - x1697*x1710 + x1698*x1703 + x1709*x75 + x1711*x1718;
  double x1720 = parms[60]*x1688 + parms[62]*x1689 + x1197;
  double x1721 = x1203 + x1689*x332;
  double x1722 = parms[62]*x1685 + parms[64]*x1241 + parms[65]*x1686 + parms[66]*x1239 + x1130*x1707 + x1180*x1720 + x1205*x1721 + x1688*x1708 + x1701*x332 + x1719;
  double x1723 = parms[48]*x1118 + parms[52] + x1118*x1717 + x1209 + 2*x1237 + x1238 + x1716*x47 + x1722*x82;
  double x1724 = -x1688;
  double x1725 = x1714*x36;
  double x1726 = -parms[61]*x1685 - parms[63]*x1241 - parms[64]*x1686 - parms[68]*x1701 - x1140*x1721 - x1172*x1691 - x120*x1715 - x1687*x336 - x1689*x1720 - x1690*x1724 - x1706*x50 - x1713*x36 - 0.25700000000000001*x1725;
  double x1727 = 2*parms[50]*x1118 + parms[53]*x30 + parms[55]*x1129 + x1129*x379 + x1217 - x1235 + x1539 + x1717*x30 + x1726;
  double x1728 = parms[55]*x247 - parms[66]*x1686 - parms[69]*x1239 + x1221 + x1233 - x139*x1685 - x1689*x1721 - x1691*x1724 - x1714*x50 - x1715*x36 + x175;
  double x1729 = parms[68]*x1241 + parms[69]*x1701 + x1118*x1691 + x117*x1715 + x1686*x332 + x1705*x1707 + x1725;
  double x1730 = parms[67]*x1685 + parms[69]*x1687 + parms[79]*x1692 + parms[81]*x1687 + x1180*x1721 + x1241*x336 + x1688*x1707 + x1694*x90 + x1696*x1703 + x1710*x1718;
  double x1731 = parms[57]*x1129 + x1229 + x1242 + x1729*x47 + x1730*x82 + x321;
  double x1732 = x1731*x30;
  double x1733 = parms[40] + x1723*x25 + x1727*x30 + x1728*x199 - 0.40000000000000002*x1732;
  double x1734 = parms[56] + x1234;
  double x1735 = x1243 + x321;
  double x1736 = parms[49]*x1118 + parms[52]*x30 + parms[54]*x1239 + parms[56]*x1129 + x1239*x1735 + x1241*(parms[52] + x1240) + x1716*x42 + x1722*x47 + x1734*x312 + x247*(parms[49] + x1236);
  double x1737 = x1246 + x1736;
  double x1738 = -x1733*x27 - x1737*x39;
  double x1739 = x1733*x24 + x1737*x27;
  double x1740 = x1723*x30 + x1727*x247 + x1728*x312 + x1731*x199;
  double x1741 = x1728*x247 + x1732;
  double x1742 = x24*(x1728*x30 + x1731*x25 + x306) + x27*(parms[54]*x30 + x1118*x175 + x1241*x1735 + x1729*x42 + x1730*x47 + x1734*x247 + x385);
  double x1743 = x35 - 1;
  double x1744 = parms[64]*x1743 + x125 + x127;
  double x1745 = x36*x84;
  double x1746 = x50*x93;
  double x1747 = x1743*x36;
  double x1748 = x1747 + x52;
  double x1749 = x1743*x50 + x54;
  double x1750 = x120*x1743 + x71 + x73;
  double x1751 = 0.25700000000000001*x1747 + x76 + x78;
  double x1752 = parms[74]*x1749 + parms[76]*x1748 + parms[78]*x1750 + x1751*x75 + x85;
  double x1753 = parms[79]*x1749 + x1748*x90 + x89;
  double x1754 = x344*x84 + x50*x98;
  double x1755 = parms[73]*x1749 + parms[75]*x1748 + parms[80]*x1751 + x95;
  double x1756 = parms[81]*x1750 + x100*x1749 + x102;
  double x1757 = parms[72]*x1745 + parms[73]*x1746 + parms[74]*x181 + parms[79]*x70 + x100*x1754 + x1748*x1752 + x1750*x1753 + x1755*x93 + x1756*x98;
  double x1758 = x129 + x130 + x1743*x336;
  double x1759 = x120*x84 + x36*x88;
  double x1760 = parms[72]*x1749 + parms[73]*x1748 + x100*x1750 + x106;
  double x1761 = parms[80]*x1748 + parms[81]*x1751 + x110;
  double x1762 = -x1749;
  double x1763 = parms[73]*x1745 + parms[75]*x1746 + parms[76]*x181 + parms[80]*x1759 - x1751*x1753 + x1752*x1762 + x1760*x84 + x1761*x88 + x70*x90;
  double x1764 = parms[63]*x1743 + x134 + x136;
  double x1765 = parms[80]*x1746 + parms[81]*x1759 + x1748*x1753 + x1756*x93 + x181*x75;
  double x1766 = parms[78]*x181 + parms[81]*x1754 + x100*x1745 + x1753*x1762 + x1761*x84;
  double x1767 = parms[60]*x84 + parms[62]*x181 + x117*x1763 + x120*x1765 + x124 + x141 + x1743*x1744 + x1757*x36 + x1758*x62 + x1764*x93 + x1766*x344;
  double x1768 = -x1748;
  double x1769 = parms[74]*x1745 + parms[76]*x1746 + parms[77]*x181 + parms[78]*x1754 + x1749*x1755 - x1750*x1761 + x1751*x1756 + x1759*x75 + x1760*x1768;
  double x1770 = parms[61]*x1743 + x148 + x151;
  double x1771 = -x1743;
  double x1772 = parms[68]*x1743 + x153 + x154;
  double x1773 = parms[65]*x181 + parms[67]*x98 + x147 + x150 + x157*x1772 + x1764*x49 + x1769 + x1770*x1771;
  double x1774 = x1767*x47 + x1773*x82 + x178;
  double x1775 = x1765*x36;
  double x1776 = -parms[61]*x84 - parms[64]*x181 - parms[68]*x88 - x120*x1766 - x1744*x181 - x1757*x50 - x1758*x70 - x1763*x36 - x1770*x84 - x1772*x88 - 0.25700000000000001*x1775 - x336*x70;
  double x1777 = x1776 + x193;
  double x1778 = -parms[66]*x181 - parms[68]*x93 - x1758*x181 - x1765*x50 - x1766*x36 - x1772*x84 + x197;
  double x1779 = x117*x1766 + x130 + x1743*x1758 + x1775 + x181*x332 + x200;
  double x1780 = parms[67]*x84 + parms[69]*x70 + parms[79]*x1745 + parms[81]*x70 + x1746*x90 + x1749*x1756 + x1761*x1768 + x1771*x1772 + x203;
  double x1781 = x1779*x47 + x1780*x82 + x207;
  double x1782 = x1781*x30;
  double x1783 = x1774*x25 + x1777*x30 + x1778*x199 - 0.40000000000000002*x1782 + x228;
  double x1784 = x1767*x42 + x1773*x47 + x231;
  double x1785 = x1784 + x242;
  double x1786 = x1783*x24 + x1785*x27 + x23;
  double x1787 = x1774*x30 + x1777*x247 + x1778*x312 + x1781*x199 + x249;
  double x1788 = x1787 + x257;
  double x1789 = x24*(x1778*x30 + x1781*x25 + x267) + x265 + x27*(x1779*x42 + x1780*x47 + x268 + x270);
  double x1790 = x1778*x247 + x1782 + x277 + x278;
  double x1791 = -x1783*x27 - x1785*x39 - x280;
  double x1792 = -x36;
  double x1793 = 0.25700000000000001*x50;
  double x1794 = parms[74]*x117 + x344*x75;
  double x1795 = parms[76]*x1792 + parms[78]*x1793 + x1794;
  double x1796 = parms[79]*x117 + x1792*x90;
  double x1797 = x1793*x1796;
  double x1798 = x1792*x1795 + x1797;
  double x1799 = -x1796;
  double x1800 = x1799*x344;
  double x1801 = -x117;
  double x1802 = x1795*x1801 + x1800;
  double x1803 = x1792*x1796;
  double x1804 = x1803*x36;
  double x1805 = x117*x1799;
  double x1806 = -x120*x1805 - x1798*x50 - x1802*x36 - 0.25700000000000001*x1804;
  double x1807 = parms[64] + x117*x1802 + x120*x1803 + x1798*x36 + x1805*x344;
  double x1808 = parms[81]*x1793 + x100*x117;
  double x1809 = parms[73]*x117;
  double x1810 = parms[75]*x1792;
  double x1811 = parms[80]*x344 + x1809 + x1810;
  double x1812 = parms[72]*x117;
  double x1813 = parms[73]*x1792;
  double x1814 = x100*x1793 + x1812 + x1813;
  double x1815 = -x1792;
  double x1816 = parms[81]*x344;
  double x1817 = parms[80]*x1792 + x1816;
  double x1818 = -x1793;
  double x1819 = x117*x1811 + x1808*x344 + x1814*x1815 + x1817*x1818;
  double x1820 = -parms[61];
  double x1821 = x1819 + x1820;
  double x1822 = x1807*x47 + x1821*x82;
  double x1823 = -x1803*x50 - x1805*x36;
  double x1824 = x117*x1805 + x1804 + x336;
  double x1825 = x117*x1808 + x139 + x1815*x1817;
  double x1826 = x1824*x47 + x1825*x82;
  double x1827 = x1826*x30;
  double x1828 = x1806*x30 + x1822*x25 + x1823*x199 - 0.40000000000000002*x1827;
  double x1829 = x1807*x42 + x1821*x47;
  double x1830 = -x1828*x27 - x1829*x39;
  double x1831 = x1828*x24 + x1829*x27;
  double x1832 = x1806*x247 + x1822*x30 + x1823*x312 + x1826*x199;
  double x1833 = x1823*x247 + x1827;
  double x1834 = x24*(x1823*x30 + x1826*x25) + x27*(x1824*x42 + x1825*x47);
  double x1835 = x0*(x1*x1831 + x1832*x259 + x1833*x288 + x1834*x272) + x10*x1830;
  double x1836 = -x1835;
  double x1837 = x479 - 1;
  double x1838 = x1837*x336 + x504 + x507;
  double x1839 = parms[64]*x1837 + x492 + x500;
  double x1840 = x36*x499;
  double x1841 = x117*x499;
  double x1842 = x1837*x36;
  double x1843 = x1842 + x520;
  double x1844 = x1837*x50 + x523;
  double x1845 = x120*x1837 + x526 + x527;
  double x1846 = 0.25700000000000001*x1842 + x530 + x531;
  double x1847 = parms[74]*x1844 + parms[76]*x1843 + parms[78]*x1845 + x1846*x75 + x522;
  double x1848 = parms[79]*x1844 + x1843*x90 + x536;
  double x1849 = x117*x503 + x344*x499;
  double x1850 = parms[73]*x1844 + parms[75]*x1843 + parms[80]*x1846 + x540;
  double x1851 = parms[81]*x1845 + x100*x1844 + x543;
  double x1852 = parms[72]*x1840 + parms[73]*x1841 + parms[74]*x592 + parms[79]*x490 + x100*x1849 + x1843*x1847 + x1845*x1848 + x1850*x509 + x1851*x510;
  double x1853 = parms[63]*x1837 + x511 + x513;
  double x1854 = x120*x499 + x36*x503;
  double x1855 = parms[72]*x1844 + parms[73]*x1843 + x100*x1845 + x549;
  double x1856 = parms[80]*x1843 + parms[81]*x1846 + x553;
  double x1857 = -x1844;
  double x1858 = parms[73]*x1840 + parms[75]*x1841 + parms[76]*x592 + parms[80]*x1854 - x1846*x1848 + x1847*x1857 + x1855*x499 + x1856*x503 + x490*x90;
  double x1859 = parms[80]*x1841 + parms[81]*x1854 + x1843*x1848 + x1851*x509 + x592*x75;
  double x1860 = parms[78]*x592 + parms[81]*x1849 + x100*x1840 + x1848*x1857 + x1856*x499;
  double x1861 = parms[60]*x499 + parms[62]*x592 + x117*x1858 + x120*x1859 + x1837*x1839 + x1838*x480 + x1852*x36 + x1853*x509 + x1860*x344 + x491 + x517;
  double x1862 = -x1843;
  double x1863 = parms[74]*x1840 + parms[76]*x1841 + parms[77]*x592 + parms[78]*x1849 + x1844*x1850 - x1845*x1856 + x1846*x1851 + x1854*x75 + x1855*x1862;
  double x1864 = parms[68]*x1837 + x576 + x578;
  double x1865 = parms[61]*x1837 + x570 + x573;
  double x1866 = -x1837;
  double x1867 = parms[65]*x592 + parms[67]*x510 + x1853*x496 + x1863 + x1864*x575 + x1865*x1866 + x569 + x572;
  double x1868 = x1861*x47 + x1867*x82 + x487;
  double x1869 = x1859*x36;
  double x1870 = -parms[61]*x499 - parms[64]*x592 - parms[68]*x503 - x120*x1860 - x1838*x490 - x1839*x592 - x1852*x50 - x1858*x36 - x1864*x503 - x1865*x499 - 0.25700000000000001*x1869 - x336*x490;
  double x1871 = x1870 + x591;
  double x1872 = -parms[66]*x592 - x139*x499 - x1838*x592 - x1859*x50 - x1860*x36 - x1864*x499 + x598;
  double x1873 = x117*x1860 + x1837*x1838 + x1869 + x332*x592 + x504 + x603;
  double x1874 = parms[67]*x499 + parms[69]*x490 + parms[79]*x1840 + parms[81]*x490 + x1841*x90 + x1844*x1851 + x1856*x1862 + x1864*x1866 + x606;
  double x1875 = x1873*x47 + x1874*x82 + x602;
  double x1876 = x1875*x30;
  double x1877 = x1868*x25 + x1871*x30 + x1872*x199 - 0.40000000000000002*x1876 + x454;
  double x1878 = x1861*x42 + x1867*x47 + x623;
  double x1879 = x1878 + x621;
  double x1880 = x1877*x24 + x1879*x27 + x430;
  double x1881 = x1868*x30 + x1871*x247 + x1872*x312 + x1875*x199 + x630;
  double x1882 = x1881 + x628;
  double x1883 = x24*(x1872*x30 + x1875*x25 + x635) + x27*(x1873*x42 + x1874*x47 + x637 + x638) + x639;
  double x1884 = x1872*x247 + x1876 + x641 + x642;
  double x1885 = -x1877*x27 - x1879*x39 - x654;
  double x1886 = x763 - 1;
  double x1887 = parms[64]*x1886 + x770 + x779;
  double x1888 = x36*x778;
  double x1889 = x117*x778;
  double x1890 = x1886*x36;
  double x1891 = x1890 + x798;
  double x1892 = x1886*x50 + x800;
  double x1893 = x120*x1886 + x803 + x805;
  double x1894 = 0.25700000000000001*x1890 + x807 + x809;
  double x1895 = parms[74]*x1892 + parms[76]*x1891 + parms[78]*x1893 + x1894*x75 + x812;
  double x1896 = parms[79]*x1892 + x1891*x90 + x814;
  double x1897 = x117*x781 + x344*x778;
  double x1898 = parms[73]*x1892 + parms[75]*x1891 + parms[80]*x1894 + x818;
  double x1899 = parms[81]*x1893 + x100*x1892 + x823;
  double x1900 = parms[72]*x1888 + parms[73]*x1889 + parms[74]*x873 + parms[79]*x768 + x100*x1897 + x1891*x1895 + x1893*x1896 + x1898*x787 + x1899*x788;
  double x1901 = x1886*x336 + x782 + x785;
  double x1902 = x120*x778 + x36*x781;
  double x1903 = parms[72]*x1892 + parms[73]*x1891 + x100*x1893 + x827;
  double x1904 = parms[80]*x1891 + parms[81]*x1894 + x832;
  double x1905 = -x1892;
  double x1906 = parms[73]*x1888 + parms[75]*x1889 + parms[76]*x873 + parms[80]*x1902 - x1894*x1896 + x1895*x1905 + x1903*x778 + x1904*x781 + x768*x90;
  double x1907 = parms[63]*x1886 + x789 + x791;
  double x1908 = parms[80]*x1889 + parms[81]*x1902 + x1891*x1896 + x1899*x787 + x75*x873;
  double x1909 = parms[78]*x873 + parms[81]*x1897 + x100*x1888 + x1896*x1905 + x1904*x778;
  double x1910 = parms[60]*x778 + parms[62]*x873 + x117*x1906 + x120*x1908 + x1886*x1887 + x1900*x36 + x1901*x765 + x1907*x787 + x1909*x344 + x769 + x795;
  double x1911 = -x1891;
  double x1912 = parms[74]*x1888 + parms[76]*x1889 + parms[77]*x873 + parms[78]*x1897 + x1892*x1898 - x1893*x1904 + x1894*x1899 + x1902*x75 + x1903*x1911;
  double x1913 = parms[61]*x1886 + x845 + x848;
  double x1914 = -x1886;
  double x1915 = parms[68]*x1886 + x850 + x851;
  double x1916 = parms[65]*x873 + parms[67]*x788 + x1907*x775 + x1912 + x1913*x1914 + x1915*x854 + x844 + x847;
  double x1917 = x1910*x47 + x1916*x82 + x870;
  double x1918 = x1908*x36;
  double x1919 = -parms[61]*x778 - parms[64]*x873 - parms[68]*x781 - x120*x1909 - x1887*x873 - x1900*x50 - x1901*x768 - x1906*x36 - x1913*x778 - x1915*x781 - 0.25700000000000001*x1918 - x336*x768;
  double x1920 = x1919 + x880;
  double x1921 = -parms[66]*x873 - x139*x778 - x1901*x873 - x1908*x50 - x1909*x36 - x1915*x778 + x889;
  double x1922 = x117*x1909 + x1886*x1901 + x1918 + x332*x873 + x782 + x891;
  double x1923 = parms[67]*x778 + parms[69]*x768 + parms[79]*x1888 + parms[81]*x768 + x1889*x90 + x1892*x1899 + x1904*x1911 + x1914*x1915 + x894;
  double x1924 = x1922*x47 + x1923*x82 + x902;
  double x1925 = x1924*x30;
  double x1926 = x1917*x25 + x1920*x30 + x1921*x199 - 0.40000000000000002*x1925 + x883;
  double x1927 = x1910*x42 + x1916*x47 + x907;
  double x1928 = x1927 + x909;
  double x1929 = -x1926*x27 - x1928*x39;
  double x1930 = parms[28] + x1926*x24 + x1928*x27;
  double x1931 = x1917*x30 + x1920*x247 + x1921*x312 + x1924*x199 + x920;
  double x1932 = x1931 + x922;
  double x1933 = x24*(x1921*x30 + x1924*x25 + x925) + x27*(x1922*x42 + x1923*x47 + x926 + x927) + x403;
  double x1934 = x1921*x247 + x1925 + x405 + x929;
  double x1935 = x1118 - 1;
  double x1936 = x1178 + x1179 + x1935*x336;
  double x1937 = parms[64]*x1935 + x1174 + x1176;
  double x1938 = x1123*x36;
  double x1939 = x1123*x117;
  double x1940 = x1935*x36;
  double x1941 = x1121 + x1940;
  double x1942 = x1125 + x1935*x50;
  double x1943 = x1128 + x1131 + x120*x1935;
  double x1944 = x1134 + x1135 + 0.25700000000000001*x1940;
  double x1945 = parms[74]*x1942 + parms[76]*x1941 + parms[78]*x1943 + x1124 + x1944*x75;
  double x1946 = parms[79]*x1942 + x1141 + x1941*x90;
  double x1947 = x1123*x344 + x1140*x117;
  double x1948 = parms[73]*x1942 + parms[75]*x1941 + parms[80]*x1944 + x1145;
  double x1949 = parms[81]*x1943 + x100*x1942 + x1149;
  double x1950 = parms[72]*x1938 + parms[73]*x1939 + parms[74]*x1214 + parms[79]*x1172 + x100*x1947 + x1148*x1948 + x1153*x1949 + x1941*x1945 + x1943*x1946;
  double x1951 = parms[63]*x1935 + x1183 + x1185;
  double x1952 = x1123*x120 + x1140*x36;
  double x1953 = parms[72]*x1942 + parms[73]*x1941 + x100*x1943 + x1156;
  double x1954 = parms[80]*x1941 + parms[81]*x1944 + x1160;
  double x1955 = -x1942;
  double x1956 = parms[73]*x1938 + parms[75]*x1939 + parms[76]*x1214 + parms[80]*x1952 + x1123*x1953 + x1140*x1954 + x1172*x90 - x1944*x1946 + x1945*x1955;
  double x1957 = parms[80]*x1939 + parms[81]*x1952 + x1148*x1949 + x1214*x75 + x1941*x1946;
  double x1958 = parms[78]*x1214 + parms[81]*x1947 + x100*x1938 + x1123*x1954 + x1946*x1955;
  double x1959 = parms[60]*x1123 + parms[62]*x1214 + x1129*x1936 + x1148*x1951 + x117*x1956 + x1173 + x1189 + x120*x1957 + x1935*x1937 + x1950*x36 + x1958*x344;
  double x1960 = -x1941;
  double x1961 = parms[74]*x1938 + parms[76]*x1939 + parms[77]*x1214 + parms[78]*x1947 + x1942*x1948 - x1943*x1954 + x1944*x1949 + x1952*x75 + x1953*x1960;
  double x1962 = parms[68]*x1935 + x1201 + x1202;
  double x1963 = parms[61]*x1935 + x1196 + x1199;
  double x1964 = -x1935;
  double x1965 = parms[65]*x1214 + parms[67]*x1153 + x1120*x1951 + x1195 + x1198 + x1205*x1962 + x1961 + x1963*x1964;
  double x1966 = x1211 + x1959*x47 + x1965*x82;
  double x1967 = x1957*x36;
  double x1968 = -parms[61]*x1123 - parms[64]*x1214 - parms[68]*x1140 - x1123*x1963 - x1140*x1962 - x1172*x1936 - x1172*x336 - x120*x1958 - x1214*x1937 - x1950*x50 - x1956*x36 - 0.25700000000000001*x1967;
  double x1969 = x1218 + x1968;
  double x1970 = -parms[66]*x1214 - x1123*x139 - x1123*x1962 - x1214*x1936 + x1221 - x1957*x50 - x1958*x36;
  double x1971 = x117*x1958 + x1179 + x1214*x332 + x1223 + x1935*x1936 + x1967;
  double x1972 = parms[67]*x1123 + parms[69]*x1172 + parms[79]*x1938 + parms[81]*x1172 + x1226 + x1939*x90 + x1942*x1949 + x1954*x1960 + x1962*x1964;
  double x1973 = x1229 + x1971*x47 + x1972*x82;
  double x1974 = x1973*x30;
  double x1975 = parms[40] + x1966*x25 + x1969*x30 + x1970*x199 - 0.40000000000000002*x1974;
  double x1976 = x1244 + x1959*x42 + x1965*x47;
  double x1977 = x1246 + x1976;
  double x1978 = -x1975*x27 - x1977*x39;
  double x1979 = x1975*x24 + x1977*x27;
  double x1980 = x1966*x30 + x1969*x247 + x1970*x312 + x1973*x199;
  double x1981 = x1970*x247 + x1974;
  double x1982 = x24*(x1970*x30 + x1973*x25 + x306) + x27*(x1252 + x1971*x42 + x1972*x47 + x385);
  double x1983 = x36*x47;
  double x1984 = x117*x47;
  double x1985 = x1489 + x1792;
  double x1986 = x117 + x1491;
  double x1987 = x1492 + x1793;
  double x1988 = x1493 + x344;
  double x1989 = parms[74]*x1986 + parms[76]*x1985 + parms[78]*x1987 + x1490 + x1988*x75;
  double x1990 = parms[79]*x1986 + x1985*x90;
  double x1991 = x344*x47;
  double x1992 = parms[73]*x1986 + parms[75]*x1985 + parms[80]*x1988 + x1498;
  double x1993 = parms[72]*x1983 + parms[73]*x1984 + parms[74]*x82 + x100*x1991 + x1501*x1992 + x1985*x1989 + x1987*x1990;
  double x1994 = -parms[63] + x1511;
  double x1995 = x120*x47;
  double x1996 = parms[72]*x1986 + parms[73]*x1985 + x100*x1987 + x1503;
  double x1997 = -x1986;
  double x1998 = parms[73]*x1983 + parms[75]*x1984 + parms[76]*x82 + parms[80]*x1995 - x1988*x1990 + x1989*x1997 + x1996*x47;
  double x1999 = parms[81]*x1987 + x100*x1986 + x1514;
  double x2000 = parms[80]*x1984 + parms[81]*x1995 + x1501*x1999 + x1985*x1990 + x75*x82;
  double x2001 = parms[80]*x1985 + parms[81]*x1988 + x1519;
  double x2002 = parms[78]*x82 + parms[81]*x1991 + x100*x1983 + x1990*x1997 + x2001*x47;
  double x2003 = parms[60]*x47 + 2*parms[62]*x82 + parms[64] + parms[65]*x1501 + x117*x1998 + x120*x2000 + x1501*x1994 + x1993*x36 + x2002*x344;
  double x2004 = -x1985;
  double x2005 = parms[74]*x1983 + parms[76]*x1984 + parms[77]*x82 + parms[78]*x1991 + x1986*x1992 - x1987*x2001 + x1988*x1999 + x1995*x75 + x1996*x2004;
  double x2006 = parms[65]*x82 + x1533 + 2*x1534 + x1820 + x1994*x42 + x2005;
  double x2007 = parms[52] + x2003*x47 + x2006*x82;
  double x2008 = x2000*x36;
  double x2009 = -parms[61]*x47 - parms[64]*x82 - x120*x2002 - x1993*x50 - x1998*x36 - 0.25700000000000001*x2008 - x47*(x1535 + x1820) - x82*(-parms[64] + x1536);
  double x2010 = x1539 + x2009;
  double x2011 = -parms[66]*x82 - x139*x47 + x175 - x2000*x50 - x2002*x36 - x47*(parms[67]*x1501 + x139) - x82*(parms[66] + parms[67]*x42);
  double x2012 = parms[67]*x82 + x117*x2002 + x1544 + x2008 + x332*x82 + x336;
  double x2013 = parms[79]*x1983 + x139 + x1546 + x1984*x90 + x1986*x1999 + x2001*x2004;
  double x2014 = x2012*x47 + x2013*x82 + x321;
  double x2015 = x2014*x30;
  double x2016 = x199*x2011 + x2007*x25 + x2010*x30 - 0.40000000000000002*x2015;
  double x2017 = x2003*x42 + x2006*x47;
  double x2018 = -x2016*x27 - x2017*x39;
  double x2019 = x2016*x24 + x2017*x27;
  double x2020 = x199*x2014 + x2007*x30 + x2010*x247 + x2011*x312;
  double x2021 = x2011*x247 + x2015;
  double x2022 = x24*(x2011*x30 + x2014*x25) + x27*(x2012*x42 + x2013*x47);
  double x2023 = x84 + 1;
  double x2024 = parms[77]*x2023 + x80;
  double x2025 = parms[76]*x2023 + x94 + x96;
  double x2026 = -x2023;
  double x2027 = parms[78]*x2023 + x101;
  double x2028 = parms[72]*x53 + parms[73]*x113 + x100*x114 + x2024*x53 + x2025*x2026 + x2027*x98 + x92;
  double x2029 = parms[74]*x2023 + x105 + x108;
  double x2030 = x111 + x2023*x75;
  double x2031 = parms[75]*x113 + parms[80]*x74 + x107 + x113*x2024 + x115 + x2023*x2029 + x2030*x88;
  double x2032 = parms[80]*x113 + x118 + x2026*x2027 + x99;
  double x2033 = parms[81]*x114 + x100*x53 + x121 + x2023*x2030;
  double x2034 = x117*x2031 + x120*x2032 + x142 + x2028*x36 + x2033*x344;
  double x2035 = parms[74]*x53 + parms[76]*x113 + parms[78]*x114 + x144*x2029 + x145*x2030 + x2025*x56 + x2027*x79 + x74*x75;
  double x2036 = x158 + x2035;
  double x2037 = x178 + x2034*x47 + x2036*x82;
  double x2038 = x2032*x36;
  double x2039 = -x120*x2033 - x182 - x2028*x50 - x2031*x36 - 0.25700000000000001*x2038;
  double x2040 = x193 + x2039;
  double x2041 = -x195 + x197 - x2032*x50 - x2033*x36;
  double x2042 = x117*x2033 + x201 + x2038;
  double x2043 = parms[79]*x53 + x113*x90 + x144*x2030 + x2027*x56 + x204;
  double x2044 = x2042*x47 + x2043*x82 + x207;
  double x2045 = x2044*x30;
  double x2046 = x199*x2041 + x2037*x25 + x2040*x30 - 0.40000000000000002*x2045 + x228;
  double x2047 = x2034*x42 + x2036*x47 + x231;
  double x2048 = x2047 + x242;
  double x2049 = x2046*x24 + x2048*x27 + x23;
  double x2050 = x199*x2044 + x2037*x30 + x2040*x247 + x2041*x312 + x249;
  double x2051 = x2050 + x257;
  double x2052 = x24*(x2041*x30 + x2044*x25 + x267) + x265 + x27*(x2042*x42 + x2043*x47 + x268 + x270);
  double x2053 = x2041*x247 + x2045 + x277 + x278;
  double x2054 = -x2046*x27 - x2048*x39 - x280;
  double x2055 = -parms[76];
  double x2056 = x36*x90;
  double x2057 = -parms[74]*x36 - x120*x75 - x2055*x50 - 0.25700000000000001*x2056;
  double x2058 = x120*x90 + x1794 + x2055*x36;
  double x2059 = x2058*x47;
  double x2060 = -x36*x75 - x50*x90;
  double x2061 = x117*x75 + x2056;
  double x2062 = x2061*x47;
  double x2063 = x2062*x30;
  double x2064 = x199*x2060 + x2057*x30 + x2059*x25 - 0.40000000000000002*x2063;
  double x2065 = x2058*x42;
  double x2066 = -x2064*x27 - x2065*x39;
  double x2067 = x2064*x24 + x2065*x27;
  double x2068 = x199*x2062 + x2057*x247 + x2059*x30 + x2060*x312;
  double x2069 = x2060*x247 + x2063;
  double x2070 = x2061*x27*x42 + x24*(x2060*x30 + x2062*x25);
  double x2071 = x0*(x1*x2067 + x2068*x259 + x2069*x288 + x2070*x272) + x10*x2066;
  double x2072 = -x2071;
  double x2073 = x499 + 1;
  double x2074 = parms[77]*x2073 + x534;
  double x2075 = parms[78]*x2073 + x545;
  double x2076 = parms[76]*x2073 + x539 + x541;
  double x2077 = -x2073;
  double x2078 = parms[72]*x521 + parms[73]*x556 + x100*x557 + x2074*x521 + x2075*x510 + x2076*x2077 + x538;
  double x2079 = x2073*x75 + x554;
  double x2080 = parms[74]*x2073 + x548 + x551;
  double x2081 = parms[75]*x556 + parms[80]*x529 + x2073*x2080 + x2074*x556 + x2079*x503 + x550 + x558;
  double x2082 = parms[80]*x556 + x2075*x2077 + x544 + x560;
  double x2083 = parms[81]*x557 + x100*x521 + x2073*x2079 + x562;
  double x2084 = x117*x2081 + x120*x2082 + x2078*x36 + x2083*x344 + x518;
  double x2085 = parms[74]*x521 + parms[76]*x556 + parms[78]*x557 + x2075*x533 + x2076*x525 + x2079*x567 + x2080*x566 + x529*x75;
  double x2086 = x2085 + x580;
  double x2087 = x2084*x47 + x2086*x82 + x487;
  double x2088 = x2082*x36;
  double x2089 = -x120*x2083 - x2078*x50 - x2081*x36 - 0.25700000000000001*x2088 - x593;
  double x2090 = x2089 + x591;
  double x2091 = -x2082*x50 - x2083*x36 + x598 - x599;
  double x2092 = x117*x2083 + x2088 + x604;
  double x2093 = parms[79]*x521 + x2075*x525 + x2079*x566 + x556*x90 + x607;
  double x2094 = x2092*x47 + x2093*x82 + x602;
  double x2095 = x2094*x30;
  double x2096 = x199*x2091 + x2087*x25 + x2090*x30 - 0.40000000000000002*x2095 + x454;
  double x2097 = x2084*x42 + x2086*x47 + x623;
  double x2098 = x2097 + x621;
  double x2099 = x2096*x24 + x2098*x27 + x430;
  double x2100 = x199*x2094 + x2087*x30 + x2090*x247 + x2091*x312 + x630;
  double x2101 = x2100 + x628;
  double x2102 = x24*(x2091*x30 + x2094*x25 + x635) + x27*(x2092*x42 + x2093*x47 + x637 + x638) + x639;
  double x2103 = x2091*x247 + x2095 + x641 + x642;
  double x2104 = -x2096*x27 - x2098*x39 - x654;
  double x2105 = x778 + 1;
  double x2106 = parms[77]*x2105 + x811;
  double x2107 = parms[76]*x2105 + x817 + x819;
  double x2108 = -x2105;
  double x2109 = parms[78]*x2105 + x822;
  double x2110 = parms[72]*x799 + parms[73]*x834 + x100*x835 + x2106*x799 + x2107*x2108 + x2109*x788 + x816;
  double x2111 = parms[74]*x2105 + x826 + x829;
  double x2112 = x2105*x75 + x831;
  double x2113 = parms[75]*x834 + parms[80]*x806 + x2105*x2111 + x2106*x834 + x2112*x781 + x828 + x836;
  double x2114 = parms[80]*x834 + x2108*x2109 + x821 + x838;
  double x2115 = parms[81]*x835 + x100*x799 + x2105*x2112 + x840;
  double x2116 = x117*x2113 + x120*x2114 + x2110*x36 + x2115*x344 + x796;
  double x2117 = parms[74]*x799 + parms[76]*x834 + parms[78]*x835 + x2107*x802 + x2109*x810 + x2111*x856 + x2112*x857 + x75*x806;
  double x2118 = x2117 + x855;
  double x2119 = x2116*x47 + x2118*x82 + x870;
  double x2120 = x2114*x36;
  double x2121 = -x120*x2115 - x2110*x50 - x2113*x36 - 0.25700000000000001*x2120 - x874;
  double x2122 = x2121 + x880;
  double x2123 = -x2114*x50 - x2115*x36 - x884 + x889;
  double x2124 = x117*x2115 + x2120 + x892;
  double x2125 = parms[79]*x799 + x2109*x802 + x2112*x856 + x834*x90 + x895;
  double x2126 = x2124*x47 + x2125*x82 + x902;
  double x2127 = x2126*x30;
  double x2128 = x199*x2123 + x2119*x25 + x2122*x30 - 0.40000000000000002*x2127 + x883;
  double x2129 = x2116*x42 + x2118*x47 + x907;
  double x2130 = x2129 + x909;
  double x2131 = -x2128*x27 - x2130*x39;
  double x2132 = parms[28] + x2128*x24 + x2130*x27;
  double x2133 = x199*x2126 + x2119*x30 + x2122*x247 + x2123*x312 + x920;
  double x2134 = x2133 + x922;
  double x2135 = x24*(x2123*x30 + x2126*x25 + x925) + x27*(x2124*x42 + x2125*x47 + x926 + x927) + x403;
  double x2136 = x2123*x247 + x2127 + x405 + x929;
  double x2137 = x1123 + 1;
  double x2138 = parms[77]*x2137 + x1138;
  double x2139 = parms[78]*x2137 + x1151;
  double x2140 = parms[76]*x2137 + x1144 + x1146;
  double x2141 = -x2137;
  double x2142 = parms[72]*x1122 + parms[73]*x1163 + x100*x1164 + x1122*x2138 + x1143 + x1153*x2139 + x2140*x2141;
  double x2143 = x1161 + x2137*x75;
  double x2144 = parms[74]*x2137 + x1155 + x1158;
  double x2145 = parms[75]*x1163 + parms[80]*x1133 + x1140*x2143 + x1157 + x1163*x2138 + x1165 + x2137*x2144;
  double x2146 = parms[80]*x1163 + x1150 + x1167 + x2139*x2141;
  double x2147 = parms[81]*x1164 + x100*x1122 + x1169 + x2137*x2143;
  double x2148 = x117*x2145 + x1190 + x120*x2146 + x2142*x36 + x2147*x344;
  double x2149 = parms[74]*x1122 + parms[76]*x1163 + parms[78]*x1164 + x1127*x2140 + x1133*x75 + x1137*x2139 + x1192*x2144 + x1193*x2143;
  double x2150 = x1206 + x2149;
  double x2151 = x1211 + x2148*x47 + x2150*x82;
  double x2152 = x2146*x36;
  double x2153 = -x120*x2147 - x1215 - x2142*x50 - x2145*x36 - 0.25700000000000001*x2152;
  double x2154 = x1218 + x2153;
  double x2155 = -x1220 + x1221 - x2146*x50 - x2147*x36;
  double x2156 = x117*x2147 + x1224 + x2152;
  double x2157 = parms[79]*x1122 + x1127*x2139 + x1163*x90 + x1192*x2143 + x1227;
  double x2158 = x1229 + x2156*x47 + x2157*x82;
  double x2159 = x2158*x30;
  double x2160 = parms[40] + x199*x2155 + x2151*x25 + x2154*x30 - 0.40000000000000002*x2159;
  double x2161 = x1244 + x2148*x42 + x2150*x47;
  double x2162 = x1246 + x2161;
  double x2163 = -x2160*x27 - x2162*x39;
  double x2164 = x2160*x24 + x2162*x27;
  double x2165 = x199*x2158 + x2151*x30 + x2154*x247 + x2155*x312;
  double x2166 = x2155*x247 + x2159;
  double x2167 = x24*(x2155*x30 + x2158*x25 + x306) + x27*(x1252 + x2156*x42 + x2157*x47 + x385);
  double x2168 = x47 + 1;
  double x2169 = parms[77]*x2168 + x1494;
  double x2170 = parms[76]*x2168 + x1499;
  double x2171 = -x2168;
  double x2172 = parms[72]*x1489 + parms[73]*x1507 + x100*x1508 + x1489*x2169 + x1497 + x2170*x2171;
  double x2173 = parms[74]*x2168 + x1505;
  double x2174 = parms[75]*x1507 + parms[80]*x1492 + x1504 + x1507*x2169 + x1509 + x2168*x2173;
  double x2175 = parms[78]*x2168 + x1516;
  double x2176 = parms[80]*x1507 + x1513 + x1515 + x2171*x2175;
  double x2177 = x1520 + x2168*x75;
  double x2178 = parms[81]*x1508 + x100*x1489 + x1522 + x2168*x2177;
  double x2179 = x117*x2174 + x120*x2176 + x1512 + x2172*x36 + x2178*x344;
  double x2180 = parms[74]*x1489 + parms[76]*x1507 + parms[78]*x1508 + x1491*x2170 + x1492*x75 + x1493*x2175 + x1526*x2173 + x1527*x2177;
  double x2181 = x1529 + x2180;
  double x2182 = parms[52] + x2179*x47 + x2181*x82;
  double x2183 = x2176*x36;
  double x2184 = -x120*x2178 - x1537 - x2172*x50 - x2174*x36 - 0.25700000000000001*x2183;
  double x2185 = x1539 + x2184;
  double x2186 = -x1541 + x175 - x2176*x50 - x2178*x36;
  double x2187 = x117*x2178 + x1544 + x2183;
  double x2188 = parms[79]*x1489 + x1491*x2175 + x1507*x90 + x1526*x2177 + x1546;
  double x2189 = x2187*x47 + x2188*x82 + x321;
  double x2190 = x2189*x30;
  double x2191 = x199*x2186 + x2182*x25 + x2185*x30 - 0.40000000000000002*x2190;
  double x2192 = x2179*x42 + x2181*x47;
  double x2193 = -x2191*x27 - x2192*x39;
  double x2194 = x2191*x24 + x2192*x27;
  double x2195 = x199*x2189 + x2182*x30 + x2185*x247 + x2186*x312;
  double x2196 = x2186*x247 + x2190;
  double x2197 = x24*(x2186*x30 + x2189*x25) + x27*(x2187*x42 + x2188*x47);
  double x2198 = parms[77] + x1795;
  double x2199 = -x344;
  double x2200 = parms[72]*x1792 + parms[73]*x1801 + x100*x2199 + x100*x344 + x1792*x2198 + x1797 - x1809 - x1810 + x2055;
  double x2201 = parms[74] + parms[75]*x1801 + x1800 + x1801*x2198 + x1812 + 2*x1813;
  double x2202 = parms[80]*x117 + parms[80]*x1801 + x1803 + x90;
  double x2203 = x2202*x36;
  double x2204 = parms[81]*x2199 + x1805 + x1816 + x75;
  double x2205 = -x120*x2204 - x2200*x50 - x2201*x36 - 0.25700000000000001*x2203;
  double x2206 = parms[64] + x117*x2201 + x120*x2202 + x2200*x36 + x2204*x344;
  double x2207 = parms[78] + x1808;
  double x2208 = x1817 + x75;
  double x2209 = parms[74]*x1792 + parms[76]*x1801 + parms[78]*x2199 + x117*(parms[76] + x1811) + x1793*x75 + x1815*(parms[74] + x1814) + x1818*x2208 + x2207*x344;
  double x2210 = x1820 + x2209;
  double x2211 = x2206*x47 + x2210*x82;
  double x2212 = -x2202*x50 - x2204*x36;
  double x2213 = x117*x2204 + x2203 + x336;
  double x2214 = parms[79]*x1792 + x117*x2207 + x139 + x1801*x90 + x1815*x2208;
  double x2215 = x2213*x47 + x2214*x82;
  double x2216 = x2215*x30;
  double x2217 = x199*x2212 + x2205*x30 + x2211*x25 - 0.40000000000000002*x2216;
  double x2218 = x2206*x42 + x2210*x47;
  double x2219 = -x2217*x27 - x2218*x39;
  double x2220 = x2217*x24 + x2218*x27;
  double x2221 = x199*x2215 + x2205*x247 + x2211*x30 + x2212*x312;
  double x2222 = x2212*x247 + x2216;
  double x2223 = x24*(x2212*x30 + x2215*x25) + x27*(x2213*x42 + x2214*x47);
  double x2224 = x420 + x421;
  double x2225 = parms[17]*x10 + x408;
  double x2226 = x10*x2224 + x2225*x284;
  double x2227 = -x1*x258 - 0.41999999999999998*x1*x271 - x2226 - x244*x3 - x272*x279;
  double x2228 = -x2227;
  double x2229 = -x1*x633 - 0.41999999999999998*x1*x640 - x272*x643 - x3*x626;
  double x2230 = -x2229;
  double x2231 = -x1*x923 - 0.41999999999999998*x1*x928 - x272*x930 - x3*x912;
  double x2232 = -x2231;
  double x2233 = -x1*x1250 - 0.41999999999999998*x1*x1253 - x1249*x3 - x1251*x272;
  double x2234 = -x2233;
  double x2235 = -x1*x1554 - 0.41999999999999998*x1*x1556 - x1553*x3 - x1555*x272;
  double x2236 = -x2235;
  double x2237 = -x1*x1832 - 0.41999999999999998*x1*x1834 - x1831*x3 - x1833*x272;
  double x2238 = -x2237;
  double x2239 = -x1*x2068 - 0.41999999999999998*x1*x2070 - x2067*x3 - x2069*x272;
  double x2240 = -x2239;
  double x2241 = -x281;
  double x2242 = -x655;
  double x2243 = -x911;
  double x2244 = -x1248;
  double x2245 = -x1552;
  double x2246 = -x1830;
  double x2247 = -x2066;
  double x2248 = -x250;
  double x2249 = -x632;
  double x2250 = -x921;
  double x2251 = -x1250;
  double x2252 = -x1554;
  double x2253 = -x1832;
  double x2254 = -x2068;
  double x2255 = -x232;
  double x2256 = -x624;
  double x2257 = -x908;
  double x2258 = -x1245;
  double x2259 = -x1551;
  double x2260 = -x1829;
  double x2261 = -x2065;
  double x2262 = -x183;
  double x2263 = -x595;
  double x2264 = -x875;
  double x2265 = -x1216;
  double x2266 = -x1538;
  double x2267 = -x1806;
  double x2268 = -x2057;
  double x2269 = -x146;
  double x2270 = -x568;
  double x2271 = -x858;
  double x2272 = -x1194;
  double x2273 = -x1528;
  double x2274 = -x1819;
//
  C[0] = dq[0]*x283;
  C[1] = dq[0]*(x0*(parms[12]*x10 + parms[14]*x284 + parms[16] + parms[17]*x11 + x1*x407 + x11*x409 + x259*x414 + x272*x416 + x288*x418 - x408) + x10*(parms[17]*x284 + x0*x409 + x419 + 2*x420 + x421 + x422) + x423 + x657) + dq[1]*x656;
  C[2] = dq[0]*(x0*(x1*x750 + x246 + x259*x755 + x272*x757 + x288*x759) + x10*(x282 + x760) + x423 + x932) + dq[1]*(x0*(parms[16] + x1*x1023 + x1026*x259 + x1027*x272 + x1028*x288) + x10*(x1029 + x422) + x657 + x932) + dq[2]*x931;
  C[3] = dq[0]*(x0*(x1*x1112 + x1114*x259 + x1115*x272 + x1116*x288 + x246) + x10*(x1117 + x282) + x1255 + x423) + dq[1]*(x0*(parms[16] + x1*x1338 + x1340*x259 + x1341*x272 + x1342*x288) + x10*(x1343 + x422) + x1255 + x657) + dq[2]*(x0*(x1*x1420 + x1422*x259 + x1424*x272 + x1425*x288) + x10*x1419 + x1255 + x932) + dq[3]*x1254;
  C[4] = dq[0]*(x0*(x1*x1483 + x1485*x259 + x1486*x272 + x1487*x288 + x246) + x10*(x1488 + x282) + x1558 + x423) + dq[1]*(x0*(parms[16] + x1*x1616 + x1618*x259 + x1619*x272 + x1620*x288) + x10*(x1621 + x422) + x1558 + x657) + dq[2]*(x0*(x1*x1680 + x1682*x259 + x1683*x272 + x1684*x288) + x10*x1679 + x1558 + x932) + dq[3]*(x0*(x1*x1739 + x1740*x259 + x1741*x288 + x1742*x272) + x10*x1738 + x1255 + x1558) + dq[4]*x1557;
  C[5] = dq[0]*(x0*(x1*x1786 + x1788*x259 + x1789*x272 + x1790*x288 + x246) + x10*(x1791 + x282) + x1836 + x423) + dq[1]*(x0*(parms[16] + x1*x1880 + x1882*x259 + x1883*x272 + x1884*x288) + x10*(x1885 + x422) + x1836 + x657) + dq[2]*(x0*(x1*x1930 + x1932*x259 + x1933*x272 + x1934*x288) + x10*x1929 + x1836 + x932) + dq[3]*(x0*(x1*x1979 + x1980*x259 + x1981*x288 + x1982*x272) + x10*x1978 + x1255 + x1836) + dq[4]*(x0*(x1*x2019 + x2020*x259 + x2021*x288 + x2022*x272) + x10*x2018 + x1558 + x1836) + dq[5]*x1835;
  C[6] = dq[0]*(x0*(x1*x2049 + x2051*x259 + x2052*x272 + x2053*x288 + x246) + x10*(x2054 + x282) + x2072 + x423) + dq[1]*(x0*(parms[16] + x1*x2099 + x2101*x259 + x2102*x272 + x2103*x288) + x10*(x2104 + x422) + x2072 + x657) + dq[2]*(x0*(x1*x2132 + x2134*x259 + x2135*x272 + x2136*x288) + x10*x2131 + x2072 + x932) + dq[3]*(x0*(x1*x2164 + x2165*x259 + x2166*x288 + x2167*x272) + x10*x2163 + x1255 + x2072) + dq[4]*(x0*(x1*x2194 + x2195*x259 + x2196*x288 + x2197*x272) + x10*x2193 + x1558 + x2072) + dq[5]*(x0*(x1*x2220 + x2221*x259 + x2222*x288 + x2223*x272) + x10*x2219 + x1836 + x2072) + dq[6]*x2071;
  C[7] = dq[0]*x2227;
  C[8] = dq[0]*(-parms[13]*x10 - parms[16]*x284 - x1*x414 - 0.41999999999999998*x1*x416 - x10*(x2224 + x422) + x2228 + x2230 - x272*x418 - x284*(-parms[16] + x2225) - x3*x407) + dq[1]*x2229;
  C[9] = dq[0]*(-x1*x755 - 0.41999999999999998*x1*x757 - x2226 + x2228 + x2232 - x272*x759 - x3*x750) + dq[1]*(-x1*x1026 - 0.41999999999999998*x1*x1027 - x1023*x3 - x1028*x272 + x2230 + x2232) + dq[2]*x2231;
  C[10] = dq[0]*(-x1*x1114 - 0.41999999999999998*x1*x1115 - x1112*x3 - x1116*x272 - x2226 + x2228 + x2234) + dq[1]*(-x1*x1340 - 0.41999999999999998*x1*x1341 - x1338*x3 - x1342*x272 + x2230 + x2234) + dq[2]*(-x1*x1422 - 0.41999999999999998*x1*x1424 - x1420*x3 - x1425*x272 + x2232 + x2234) + dq[3]*x2233;
  C[11] = dq[0]*(-x1*x1485 - 0.41999999999999998*x1*x1486 - x1483*x3 - x1487*x272 - x2226 + x2228 + x2236) + dq[1]*(-x1*x1618 - 0.41999999999999998*x1*x1619 - x1616*x3 - x1620*x272 + x2230 + x2236) + dq[2]*(-x1*x1682 - 0.41999999999999998*x1*x1683 - x1680*x3 - x1684*x272 + x2232 + x2236) + dq[3]*(-x1*x1740 - 0.41999999999999998*x1*x1742 - x1739*x3 - x1741*x272 + x2234 + x2236) + dq[4]*x2235;
  C[12] = dq[0]*(-x1*x1788 - 0.41999999999999998*x1*x1789 - x1786*x3 - x1790*x272 - x2226 + x2228 + x2238) + dq[1]*(-x1*x1882 - 0.41999999999999998*x1*x1883 - x1880*x3 - x1884*x272 + x2230 + x2238) + dq[2]*(-x1*x1932 - 0.41999999999999998*x1*x1933 - x1930*x3 - x1934*x272 + x2232 + x2238) + dq[3]*(-x1*x1980 - 0.41999999999999998*x1*x1982 - x1979*x3 - x1981*x272 + x2234 + x2238) + dq[4]*(-x1*x2020 - 0.41999999999999998*x1*x2022 - x2019*x3 - x2021*x272 + x2236 + x2238) + dq[5]*x2237;
  C[13] = dq[0]*(-x1*x2051 - 0.41999999999999998*x1*x2052 - x2049*x3 - x2053*x272 - x2226 + x2228 + x2240) + dq[1]*(-x1*x2101 - 0.41999999999999998*x1*x2102 - x2099*x3 - x2103*x272 + x2230 + x2240) + dq[2]*(-x1*x2134 - 0.41999999999999998*x1*x2135 - x2132*x3 - x2136*x272 + x2232 + x2240) + dq[3]*(-x1*x2165 - 0.41999999999999998*x1*x2167 - x2164*x3 - x2166*x272 + x2234 + x2240) + dq[4]*(-x1*x2195 - 0.41999999999999998*x1*x2197 - x2194*x3 - x2196*x272 + x2236 + x2240) + dq[5]*(-x1*x2221 - 0.41999999999999998*x1*x2223 - x2220*x3 - x2222*x272 + x2238 + x2240) + dq[6]*x2239;
  C[14] = dq[0]*x281;
  C[15] = dq[0]*(x2241 + x2242 + x419) + dq[1]*x655;
  C[16] = dq[0]*(x2241 + x2243 + x760) + dq[1]*(x1029 + x2242 + x2243) + dq[2]*x911;
  C[17] = dq[0]*(x1117 + x2241 + x2244) + dq[1]*(x1343 + x2242 + x2244) + dq[2]*(x1419 + x2243 + x2244) + dq[3]*x1248;
  C[18] = dq[0]*(x1488 + x2241 + x2245) + dq[1]*(x1621 + x2242 + x2245) + dq[2]*(x1679 + x2243 + x2245) + dq[3]*(x1738 + x2244 + x2245) + dq[4]*x1552;
  C[19] = dq[0]*(x1791 + x2241 + x2246) + dq[1]*(x1885 + x2242 + x2246) + dq[2]*(x1929 + x2243 + x2246) + dq[3]*(x1978 + x2244 + x2246) + dq[4]*(x2018 + x2245 + x2246) + dq[5]*x1830;
  C[20] = dq[0]*(x2054 + x2241 + x2247) + dq[1]*(x2104 + x2242 + x2247) + dq[2]*(x2131 + x2243 + x2247) + dq[3]*(x2163 + x2244 + x2247) + dq[4]*(x2193 + x2245 + x2247) + dq[5]*(x2219 + x2246 + x2247) + dq[6]*x2066;
  C[21] = dq[0]*x250;
  C[22] = dq[0]*(x2248 + x2249 + x411) + dq[1]*x632;
  C[23] = dq[0]*(x2248 + x2250 + x752) + dq[1]*(x1025 + x2249 + x2250) + dq[2]*x921;
  C[24] = dq[0]*(x1113 + x2248 + x2251) + dq[1]*(x1339 + x2249 + x2251) + dq[2]*(x1421 + x2250 + x2251) + dq[3]*x1250;
  C[25] = dq[0]*(x1484 + x2248 + x2252) + dq[1]*(x1617 + x2249 + x2252) + dq[2]*(x1681 + x2250 + x2252) + dq[3]*(x1740 + x2251 + x2252) + dq[4]*x1554;
  C[26] = dq[0]*(x1787 + x2248 + x2253) + dq[1]*(x1881 + x2249 + x2253) + dq[2]*(x1931 + x2250 + x2253) + dq[3]*(x1980 + x2251 + x2253) + dq[4]*(x2020 + x2252 + x2253) + dq[5]*x1832;
  C[27] = dq[0]*(x2050 + x2248 + x2254) + dq[1]*(x2100 + x2249 + x2254) + dq[2]*(x2133 + x2250 + x2254) + dq[3]*(x2165 + x2251 + x2254) + dq[4]*(x2195 + x2252 + x2254) + dq[5]*(x2221 + x2253 + x2254) + dq[6]*x2068;
  C[28] = dq[0]*x232;
  C[29] = dq[0]*(x2255 + x2256 + x395) + dq[1]*x624;
  C[30] = dq[0]*(x2255 + x2257 + x745) + dq[1]*(x1018 + x2256 + x2257) + dq[2]*x908;
  C[31] = dq[0]*(x1106 + x2255 + x2258) + dq[1]*(x1332 + x2256 + x2258) + dq[2]*(x1417 + x2257 + x2258) + dq[3]*x1245;
  C[32] = dq[0]*(x1481 + x2255 + x2259) + dq[1]*(x1614 + x2256 + x2259) + dq[2]*(x1677 + x2257 + x2259) + dq[3]*(x1736 + x2258 + x2259) + dq[4]*x1551;
  C[33] = dq[0]*(x1784 + x2255 + x2260) + dq[1]*(x1878 + x2256 + x2260) + dq[2]*(x1927 + x2257 + x2260) + dq[3]*(x1976 + x2258 + x2260) + dq[4]*(x2017 + x2259 + x2260) + dq[5]*x1829;
  C[34] = dq[0]*(x2047 + x2255 + x2261) + dq[1]*(x2097 + x2256 + x2261) + dq[2]*(x2129 + x2257 + x2261) + dq[3]*(x2161 + x2258 + x2261) + dq[4]*(x2192 + x2259 + x2261) + dq[5]*(x2218 + x2260 + x2261) + dq[6]*x2065;
  C[35] = dq[0]*x183;
  C[36] = dq[0]*(x2262 + x2263 + x378) + dq[1]*x595;
  C[37] = dq[0]*(x2262 + x2264 + x729) + dq[1]*(x1002 + x2263 + x2264) + dq[2]*x875;
  C[38] = dq[0]*(x1093 + x2262 + x2265) + dq[1]*(x1320 + x2263 + x2265) + dq[2]*(x1404 + x2264 + x2265) + dq[3]*x1216;
  C[39] = dq[0]*(x1470 + x2262 + x2266) + dq[1]*(x1603 + x2263 + x2266) + dq[2]*(x1665 + x2264 + x2266) + dq[3]*(x1726 + x2265 + x2266) + dq[4]*x1538;
  C[40] = dq[0]*(x1776 + x2262 + x2267) + dq[1]*(x1870 + x2263 + x2267) + dq[2]*(x1919 + x2264 + x2267) + dq[3]*(x1968 + x2265 + x2267) + dq[4]*(x2009 + x2266 + x2267) + dq[5]*x1806;
  C[41] = dq[0]*(x2039 + x2262 + x2268) + dq[1]*(x2089 + x2263 + x2268) + dq[2]*(x2121 + x2264 + x2268) + dq[3]*(x2153 + x2265 + x2268) + dq[4]*(x2184 + x2266 + x2268) + dq[5]*(x2205 + x2267 + x2268) + dq[6]*x2057;
  C[42] = dq[0]*x146;
  C[43] = dq[0]*(x2269 + x2270 + x370) + dq[1]*x568;
  C[44] = dq[0]*(x2269 + x2271 + x721) + dq[1]*(x2270 + x2271 + x994) + dq[2]*x858;
  C[45] = dq[0]*(x1085 + x2269 + x2272) + dq[1]*(x1312 + x2270 + x2272) + dq[2]*(x1396 + x2271 + x2272) + dq[3]*x1194;
  C[46] = dq[0]*(x1463 + x2269 + x2273) + dq[1]*(x1596 + x2270 + x2273) + dq[2]*(x1657 + x2271 + x2273) + dq[3]*(x1719 + x2272 + x2273) + dq[4]*x1528;
  C[47] = dq[0]*(x1769 + x2269 + x2274) + dq[1]*(x1863 + x2270 + x2274) + dq[2]*(x1912 + x2271 + x2274) + dq[3]*(x1961 + x2272 + x2274) + dq[4]*(x2005 + x2273 + x2274) + dq[5]*x1819;
  C[48] = dq[0]*(x2035 + x2269) + dq[1]*(x2085 + x2270) + dq[2]*(x2117 + x2271) + dq[3]*(x2149 + x2272) + dq[4]*(x2180 + x2273) + dq[5]*(x2209 + x2274);
//
  return;
}

void KUKAAnalyticalSolutions::Gravity(double* G, const double* parms, const double* q)
{
  double x0 = sin(q[1]);
  double x1 = cos(q[1]);
  double x2 = 9.8100000000000005*x1;
  double x3 = 9.8100000000000005*x0;
  double x4 = sin(q[2]);
  double x5 = -x4;
  double x6 = x3*x5;
  double x7 = sin(q[3]);
  double x8 = cos(q[2]);
  double x9 = x3*x8;
  double x10 = -x2;
  double x11 = -x10;
  double x12 = cos(q[3]);
  double x13 = x11*x12 + x7*x9;
  double x14 = cos(q[4]);
  double x15 = x10*x7 + x12*x9;
  double x16 = sin(q[4]);
  double x17 = -x6;
  double x18 = x14*x17 + x15*x16;
  double x19 = cos(q[5]);
  double x20 = x14*x15 + x16*x6;
  double x21 = sin(q[5]);
  double x22 = -x21;
  double x23 = x13*x19 + x20*x22;
  double x24 = cos(q[6]);
  double x25 = -x18;
  double x26 = x13*x21 + x19*x20;
  double x27 = sin(q[6]);
  double x28 = -x27;
  double x29 = x24*x25 + x26*x28;
  double x30 = parms[79]*x23 - parms[80]*x29;
  double x31 = x24*x26 + x25*x27;
  double x32 = -x23;
  double x33 = parms[78]*x32 + parms[80]*x31;
  double x34 = parms[81]*x31;
  double x35 = -0.25700000000000001*x27;
  double x36 = parms[81]*x29;
  double x37 = x24*x36;
  double x38 = parms[67]*x23 - parms[68]*x25 + x24*x30 + x28*x33 + x34*x35 - 0.25700000000000001*x37;
  double x39 = -x13;
  double x40 = parms[78]*x29 - parms[79]*x31;
  double x41 = parms[66]*x25 - parms[67]*x26 + x40;
  double x42 = parms[55]*x18 + parms[56]*x39 + x19*x38 + x22*x41;
  double x43 = x24*x34;
  double x44 = -parms[66]*x32 - parms[68]*x26 - x24*x33 - x27*x30 - x35*x36 - 0.25700000000000001*x43;
  double x45 = parms[54]*x13 - parms[55]*x20 + x44;
  double x46 = parms[57]*x18 - parms[69]*x25 - x27*x34 - x37;
  double x47 = 0.40000000000000002*x14;
  double x48 = parms[69]*x26 + x28*x36 + x43;
  double x49 = parms[69]*x23 + parms[81]*x23;
  double x50 = parms[57]*x20 + x19*x48 + x22*x49;
  double x51 = x16*x50;
  double x52 = parms[43]*x13 + parms[44]*x17 + x14*x42 + x16*x45 + x46*x47 - 0.40000000000000002*x51;
  double x53 = parms[54]*x25 + parms[56]*x20 + x19*x41 + x21*x38;
  double x54 = parms[42]*x6 - parms[43]*x15 + x53;
  double x55 = parms[31]*x6 + parms[32]*x11 + x12*x52 + x54*x7;
  double x56 = -x14;
  double x57 = x16*x46;
  double x58 = parms[42]*x39 + parms[44]*x15 + x16*x42 + x45*x56 + x47*x50 + 0.40000000000000002*x57;
  double x59 = parms[30]*x10 - parms[31]*x9 + x58;
  double x60 = parms[33]*x9 + x12*(parms[45]*x15 + x14*x50 + x57) + x7*(parms[45]*x13 + parms[57]*x13 + x19*x49 + x21*x48);
  double x61 = -0.41999999999999998*x4;
  double x62 = parms[33]*x6 + parms[45]*x6 + x46*x56 + x51;
  double x63 = -parms[30]*x17 - parms[32]*x9 + x12*x54 - x52*x7;
//
  G[0] = x0*(parms[19]*x2 + x5*x59 + x55*x8 + x60*x61 - 0.41999999999999998*x62*x8) + x1*(-parms[19]*x3 + x63);
  G[1] = -parms[18]*x10 - parms[20]*x3 - x4*x55 - x59*x8 - 0.41999999999999998*x60*x8 - x61*x62;
  G[2] = x63;
  G[3] = x58;
  G[4] = x53;
  G[5] = x44;
  G[6] = x40;
//
  return;
}

void KUKAAnalyticalSolutions::InverseDynamics( double* INV, const double* parms, const double* q, const double* dq, const double* ddq )
{
  double x0 = sin(q[1]);
  double x1 = cos(q[1]);
  double x2 = dq[0]*x1;
  double x3 = -x2;
  double x4 = -dq[1];
  double x5 = ddq[0]*x0 + x3*x4;
  double x6 = -ddq[1];
  double x7 = dq[0]*x0;
  double x8 = ddq[0]*x1 + x4*x7;
  double x9 = 9.8100000000000005*x1;
  double x10 = parms[14]*x7 + parms[16]*x4 + parms[17]*x2;
  double x11 = cos(q[2]);
  double x12 = x11*x5;
  double x13 = sin(q[2]);
  double x14 = x13*x6;
  double x15 = x11*x4;
  double x16 = x13*x7;
  double x17 = x15 - x16;
  double x18 = -dq[2];
  double x19 = -x18;
  double x20 = x12 + x14 + x17*x19;
  double x21 = -ddq[2] - x8;
  double x22 = x11*x6;
  double x23 = x13*x5;
  double x24 = x11*x7;
  double x25 = x13*x4;
  double x26 = x24 + x25;
  double x27 = x18*x26 + x22 - x23;
  double x28 = -x13;
  double x29 = 9.8100000000000005*x0;
  double x30 = 0.41999999999999998*x15 - 0.41999999999999998*x16;
  double x31 = -0.41999999999999998*x12 - 0.41999999999999998*x14 + x18*x30 + x28*x29;
  double x32 = x18 + x3;
  double x33 = -parms[31];
  double x34 = parms[26]*x26 + parms[28]*x32 + parms[29]*x17 + x30*x33;
  double x35 = cos(q[3]);
  double x36 = sin(q[3]);
  double x37 = -x35;
  double x38 = x26*x36 + x32*x37;
  double x39 = -dq[3];
  double x40 = x20*x35 + x21*x36 + x38*x39;
  double x41 = ddq[3] + x27;
  double x42 = x26*x35 + x32*x36;
  double x43 = dq[3]*x42 + x20*x36 + x21*x37;
  double x44 = -0.41999999999999998*x24 - 0.41999999999999998*x25;
  double x45 = x11*x29 + x19*x44 + 0.41999999999999998*x22 - 0.41999999999999998*x23;
  double x46 = -x9;
  double x47 = x30*x35;
  double x48 = dq[3]*x47 + x36*x45 + x37*x46;
  double x49 = x30*x36;
  double x50 = -parms[42];
  double x51 = dq[3] + x17;
  double x52 = parms[43]*x42 + parms[45]*x49 + x50*x51;
  double x53 = cos(q[4]);
  double x54 = x40*x53;
  double x55 = sin(q[4]);
  double x56 = x41*x55;
  double x57 = x51*x53;
  double x58 = x42*x55;
  double x59 = -x57 + x58;
  double x60 = -dq[4];
  double x61 = x54 + x56 + x59*x60;
  double x62 = ddq[4] + x43;
  double x63 = x40*x55;
  double x64 = -x53;
  double x65 = x42*x53;
  double x66 = x51*x55;
  double x67 = x65 + x66;
  double x68 = dq[4]*x67 + x41*x64 + x63;
  double x69 = x35*x45 + x36*x46 + x39*x49;
  double x70 = x44*x55 + x47*x53 + 0.40000000000000002*x57 - 0.40000000000000002*x58;
  double x71 = dq[4]*x70 + x31*x64 + 0.40000000000000002*x54 + x55*x69 + 0.40000000000000002*x56;
  double x72 = dq[4] + x38;
  double x73 = -x70;
  double x74 = parms[50]*x67 + parms[52]*x72 + parms[53]*x59 + parms[54]*x49 + parms[55]*x73;
  double x75 = cos(q[5]);
  double x76 = sin(q[5]);
  double x77 = -x76;
  double x78 = x67*x77 + x72*x75;
  double x79 = -dq[5];
  double x80 = -x79;
  double x81 = x61*x75 + x62*x76 + x78*x80;
  double x82 = -x68;
  double x83 = -ddq[5] + x82;
  double x84 = x67*x75 + x72*x76;
  double x85 = x61*x77 + x62*x75 + x79*x84;
  double x86 = 0.40000000000000002*x53;
  double x87 = x44*x64 + x47*x55 + 0.40000000000000002*x65 + 0.40000000000000002*x66;
  double x88 = x31*x55 + x41*x86 + x53*x69 + x60*x87 - 0.40000000000000002*x63;
  double x89 = x49*x76 + x70*x75;
  double x90 = x48*x75 + x77*x88 + x79*x89;
  double x91 = -x87;
  double x92 = x49*x75 + x70*x77;
  double x93 = -x59;
  double x94 = x79 + x93;
  double x95 = -parms[66];
  double x96 = parms[67]*x84 + parms[69]*x92 + x94*x95;
  double x97 = -parms[67];
  double x98 = parms[62]*x84 + parms[64]*x94 + parms[65]*x78 + parms[66]*x91 + x89*x97;
  double x99 = cos(q[6]);
  double x100 = x81*x99;
  double x101 = sin(q[6]);
  double x102 = x101*x83;
  double x103 = x94*x99;
  double x104 = x101*x84;
  double x105 = x103 - x104;
  double x106 = dq[6]*x105 + x100 + x102;
  double x107 = x83*x99;
  double x108 = -x101;
  double x109 = x84*x99;
  double x110 = x101*x94;
  double x111 = x109 + x110;
  double x112 = -dq[6];
  double x113 = x107 + x108*x81 + x111*x112;
  double x114 = ddq[6] + x85;
  double x115 = dq[6] + x78;
  double x116 = x108*x89 - 0.25700000000000001*x109 - 0.25700000000000001*x110 + x91*x99;
  double x117 = x101*x91 + 0.25700000000000001*x103 - 0.25700000000000001*x104 + x89*x99;
  double x118 = -parms[79];
  double x119 = parms[74]*x111 + parms[76]*x105 + parms[77]*x115 + parms[78]*x116 + x117*x118;
  double x120 = -parms[78];
  double x121 = parms[79]*x111 + parms[81]*x92 + x105*x120;
  double x122 = -x71;
  double x123 = x48*x76 + x75*x88 + x80*x92;
  double x124 = -0.25700000000000001*x100 - 0.25700000000000001*x102 + x108*x123 + x112*x117 + x122*x99;
  double x125 = -parms[80];
  double x126 = parms[78]*x115 + parms[81]*x116 + x111*x125;
  double x127 = -x126;
  double x128 = parms[73]*x111 + parms[75]*x105 + parms[76]*x115 + parms[80]*x117 + x120*x92;
  double x129 = parms[72]*x106 + parms[73]*x113 + parms[74]*x114 + parms[79]*x90 + x105*x119 - x115*x128 + x116*x121 + x124*x125 + x127*x92;
  double x130 = -parms[68];
  double x131 = parms[61]*x84 + parms[63]*x94 + parms[64]*x78 + parms[68]*x89 + x92*x95;
  double x132 = -x78;
  double x133 = parms[66]*x78 + parms[69]*x91 + x130*x84;
  double x134 = -0.25700000000000001*x101;
  double x135 = dq[6]*x116 + x101*x122 + 0.25700000000000001*x107 + x123*x99 + x134*x81;
  double x136 = parms[80]*x105 + parms[81]*x117 + x115*x118;
  double x137 = parms[72]*x111 + parms[73]*x105 + parms[74]*x115 + parms[79]*x92 + x116*x125;
  double x138 = -x111;
  double x139 = parms[73]*x106 + parms[75]*x113 + parms[76]*x114 + parms[80]*x135 + x115*x137 - x117*x121 + x119*x138 + x120*x90 + x136*x92;
  double x140 = parms[80]*x113 + parms[81]*x135 + x105*x121 + x114*x118 + x115*x127;
  double x141 = parms[78]*x114 + parms[81]*x124 + x106*x125 + x115*x136 + x121*x138;
  double x142 = x141*x99;
  double x143 = parms[60]*x81 + parms[61]*x83 + parms[62]*x85 + parms[67]*x90 + x108*x139 + x122*x130 + x129*x99 + x131*x132 - x133*x92 + x134*x140 - 0.25700000000000001*x142 + x91*x96 + x94*x98;
  double x144 = -x72;
  double x145 = parms[54]*x144 + parms[55]*x67 + parms[57]*x87;
  double x146 = -parms[56];
  double x147 = parms[49]*x67 + parms[51]*x72 + parms[52]*x59 + parms[54]*x91 + parms[56]*x70;
  double x148 = parms[54]*x59 + parms[57]*x49 + x146*x67;
  double x149 = -x105;
  double x150 = parms[74]*x106 + parms[76]*x113 + parms[77]*x114 + parms[78]*x124 + x111*x128 - x116*x136 + x117*x126 + x118*x135 + x137*x149;
  double x151 = parms[68]*x94 + parms[69]*x89 + x78*x97;
  double x152 = -x151;
  double x153 = parms[60]*x84 + parms[61]*x94 + parms[62]*x78 + parms[67]*x92 + x130*x91;
  double x154 = parms[62]*x81 + parms[64]*x83 + parms[65]*x85 + parms[66]*x122 + x123*x97 + x131*x84 + x133*x89 + x150 + x152*x91 - x153*x94;
  double x155 = parms[48]*x61 + parms[49]*x62 + parms[50]*x68 + parms[55]*x71 + x143*x75 + x145*x49 + x146*x48 + x147*x93 + x148*x91 + x154*x77 + x72*x74;
  double x156 = -x84;
  double x157 = x140*x99;
  double x158 = -parms[61]*x81 - parms[63]*x83 - parms[64]*x85 - parms[68]*x123 - x101*x129 - x134*x141 - x139*x99 - x151*x92 - x153*x78 - x156*x98 - 0.25700000000000001*x157 + x89*x96 - x90*x95;
  double x159 = parms[48]*x67 + parms[49]*x72 + parms[50]*x59 + parms[55]*x87 + x146*x49;
  double x160 = parms[55]*x93 + parms[56]*x72 + parms[57]*x70;
  double x161 = -x49;
  double x162 = parms[50]*x61 + parms[52]*x62 + parms[53]*x68 + parms[54]*x48 - parms[55]*x88 + x144*x159 + x147*x67 + x148*x70 + x158 + x160*x161;
  double x163 = -parms[43];
  double x164 = parms[38]*x42 + parms[40]*x51 + parms[41]*x38 + parms[42]*x44 + x163*x47;
  double x165 = -parms[44];
  double x166 = parms[37]*x42 + parms[39]*x51 + parms[40]*x38 + parms[42]*x161 + parms[44]*x47;
  double x167 = -x38;
  double x168 = parms[42]*x38 + parms[45]*x44 + x165*x42;
  double x169 = -parms[54]*x62 + parms[55]*x61 + parms[57]*x71 - parms[66]*x85 - parms[69]*x122 - x101*x140 - x130*x81 - x142 + x144*x160 + x148*x67 - x151*x78 - x156*x96;
  double x170 = parms[68]*x83 + parms[69]*x123 + x108*x141 + x132*x133 + x157 + x85*x97 + x94*x96;
  double x171 = parms[67]*x81 + parms[69]*x90 + parms[79]*x106 + parms[81]*x90 + x111*x126 + x113*x120 + x133*x84 + x136*x149 + x152*x94 + x83*x95;
  double x172 = parms[55]*x82 + parms[56]*x62 + parms[57]*x88 + x145*x72 + x148*x93 + x170*x75 + x171*x77;
  double x173 = x172*x55;
  double x174 = parms[36]*x40 + parms[37]*x41 + parms[38]*x43 + parms[43]*x48 + x155*x53 + x161*x168 + x162*x55 + x164*x51 + x165*x31 + x166*x167 + x169*x86 - 0.40000000000000002*x173 + x44*x52;
  double x175 = -x67;
  double x176 = parms[49]*x61 + parms[51]*x62 + parms[52]*x68 + parms[54]*x122 + parms[56]*x88 + x143*x76 + x145*x73 + x154*x75 + x159*x59 + x160*x87 + x175*x74;
  double x177 = parms[44]*x51 + parms[45]*x47 + x163*x38;
  double x178 = -x177;
  double x179 = parms[36]*x42 + parms[37]*x51 + parms[38]*x38 + parms[43]*x49 + x165*x44;
  double x180 = parms[38]*x40 + parms[40]*x41 + parms[41]*x43 + parms[42]*x31 + x163*x69 + x166*x42 + x168*x47 + x176 + x178*x44 - x179*x51;
  double x181 = -parms[32];
  double x182 = -x44;
  double x183 = parms[25]*x26 + parms[27]*x32 + parms[28]*x17 + parms[30]*x182 + parms[32]*x30;
  double x184 = -x17;
  double x185 = parms[30]*x17 + x181*x26;
  double x186 = parms[24]*x20 + parms[25]*x21 + parms[26]*x27 + parms[31]*x31 + x174*x35 + x180*x36 + x181*x46 + x182*x185 + x183*x184 + x32*x34;
  double x187 = parms[13]*x7 + parms[15]*x4 + parms[16]*x2;
  double x188 = -x42;
  double x189 = x169*x55;
  double x190 = parms[37]*x40 + parms[39]*x41 + parms[40]*x43 + parms[44]*x69 + x155*x55 + x162*x64 + x164*x188 + x172*x86 + x177*x49 + x179*x38 + 0.40000000000000002*x189 - x47*x52 + x48*x50;
  double x191 = parms[24]*x26 + parms[25]*x32 + parms[26]*x17 + parms[31]*x44;
  double x192 = -x32;
  double x193 = parms[26]*x20 + parms[28]*x21 + parms[29]*x27 + parms[30]*x46 + x183*x26 + x185*x30 + x190 + x191*x192 + x33*x45;
  double x194 = -parms[30];
  double x195 = parms[31]*x26 + parms[33]*x44 + x194*x32;
  double x196 = parms[32]*x21 + parms[33]*x45 + x184*x185 + x195*x32 + x27*x33 + x35*(parms[44]*x41 + parms[45]*x69 + x163*x43 + x167*x168 + x172*x53 + x189 + x51*x52) + x36*(parms[43]*x40 + parms[45]*x48 + parms[54]*x68 + parms[57]*x48 + x145*x175 + x146*x61 + x160*x59 + x168*x42 + x170*x76 + x171*x75 + x178*x51 + x41*x50);
  double x197 = -0.41999999999999998*x13;
  double x198 = parms[32]*x32 + parms[33]*x30 + x17*x33;
  double x199 = parms[31]*x20 + parms[33]*x31 + parms[42]*x43 + parms[45]*x31 + x165*x40 + x169*x64 + x173 + x177*x38 + x185*x26 + x188*x52 + x192*x198 + x194*x21;
  double x200 = -parms[25]*x20 - parms[27]*x21 - parms[28]*x27 - parms[32]*x45 - x17*x191 - x174*x36 - x180*x37 - x194*x31 + x195*x30 - x198*x44 + x26*x34;
  double x201 = parms[12]*x7 + parms[13]*x4 + parms[14]*x2;
//
  INV[0] = ddq[0]*parms[3] + dq[0]*parms[10] + parms[11]*(((dq[0]) > 0) - ((dq[0]) < 0)) + x0*(parms[12]*x5 + parms[13]*x6 + parms[14]*x8 + parms[19]*x9 + x10*x4 + x11*x186 - 0.41999999999999998*x11*x199 + x187*x3 + x193*x28 + x196*x197) + x1*(parms[14]*x5 + parms[16]*x6 + parms[17]*x8 - parms[19]*x29 + x187*x7 + x200 - x201*x4);
  INV[1] = dq[1]*parms[22] - parms[13]*x5 - parms[15]*x6 - parms[16]*x8 - parms[18]*x46 - parms[20]*x29 + parms[23]*(((dq[1]) > 0) - ((dq[1]) < 0)) + x10*x7 - x11*x193 - 0.41999999999999998*x11*x196 - x13*x186 - x197*x199 - x2*x201;
  INV[2] = dq[2]*parms[34] + parms[35]*(((dq[2]) > 0) - ((dq[2]) < 0)) + x200;
  INV[3] = dq[3]*parms[46] + parms[47]*(((dq[3]) > 0) - ((dq[3]) < 0)) + x190;
  INV[4] = dq[4]*parms[58] + parms[59]*(((dq[4]) > 0) - ((dq[4]) < 0)) + x176;
  INV[5] = dq[5]*parms[70] + parms[71]*(((dq[5]) > 0) - ((dq[5]) < 0)) + x158;
  INV[6] = dq[6]*parms[82] + parms[83]*(((dq[6]) > 0) - ((dq[6]) < 0)) + x150;
//
  return;
}